NO.,HEAD,CHANGE TYPE,CHANGED STATEMENT,PARENT ENTITY,ROOT ENTITY,SIGNIFICANCE LEVEL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: assertThat(binaryIterationOrder(BIN_ADAPTER.breadthFirstTraversal(bd))).isEqualTo(dbeacfg"");""",METHOD: com.google.common.collect.TreeTraverserTest.testBreadthOrder(),com.google.common.collect.TreeTraverserTest.testBreadthOrder(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: assertThat(binaryIterationOrder(BIN_ADAPTER.preOrderTraversal(bd))).isEqualTo(dbacefg"");""",METHOD: com.google.common.collect.TreeTraverserTest.testPreOrder(),com.google.common.collect.TreeTraverserTest.testPreOrder(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,METHOD_INVOCATION: tester.testAllPublicInstanceMethods(BIN_ADAPTER);,METHOD: com.google.common.collect.TreeTraverserTest.testNulls(),com.google.common.collect.TreeTraverserTest.testNulls(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: assertThat(binaryIterationOrder(BIN_ADAPTER.postOrderTraversal(bd))).isEqualTo(acbgfed"");""",METHOD: com.google.common.collect.TreeTraverserTest.testPostOrder(),com.google.common.collect.TreeTraverserTest.testPostOrder(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARENT_CLASS_INSERT,SINGLE_TYPE: Node,CLASS: com.google.common.collect.TreeTraverserTest.Tree,com.google.common.collect.TreeTraverserTest.Tree,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,ASSIGNMENT: this.value = value;,"METHOD: com.google.common.collect.TreeTraverserTest.Tree.Tree(char,Tree...)","com.google.common.collect.TreeTraverserTest.Tree.Tree(char,Tree...)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,CONSTRUCTOR_INVOCATION: super();,"METHOD: com.google.common.collect.TreeTraverserTest.Tree.Tree(char,Tree...)","com.google.common.collect.TreeTraverserTest.Tree.Tree(char,Tree...)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.Tree.value : char,CLASS: com.google.common.collect.TreeTraverserTest.Tree,com.google.common.collect.TreeTraverserTest.Tree,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: iterable: Iterable<Tree>,PARAMETER: iterable,com.google.common.collect.TreeTraverserTest.iterationOrder(Iterable<? extends Node>),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,CONDITION_EXPRESSION_CHANGE,FOREACH_STATEMENT: Tree t:iterable,METHOD: com.google.common.collect.TreeTraverserTest.iterationOrder(Iterable<Tree>),com.google.common.collect.TreeTraverserTest.iterationOrder(Iterable<? extends Node>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.TreeTraverserTest.binaryIterationOrder(Iterable<BinaryTree>),CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.TreeTraverserTest.testInOrder(),CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.BIN_ADAPTER : BinaryTreeTraverser<BinaryTree>,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.bg : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.bf : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.bc : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.bd : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.bb : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.be : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.TreeTraverserTest.ba : BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_CLASS,CLASS: com.google.common.collect.TreeTraverserTest.Node,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_CLASS,CLASS: com.google.common.collect.TreeTraverserTest.BinaryTree,CLASS: com.google.common.collect.TreeTraverserTest,com.google.common.collect.TreeTraverserTest,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int size = getNumElements();,METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int expectedSize = (size - getMultiset().count(e0()));,METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: assertEquals(expectedSize, getMultiset().size());",METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemoveDuplicatePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int size = getNumElements();,METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int expectedSize = (size - getMultiset().count(e0()));,METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: assertEquals(expectedSize, getMultiset().size());",METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),com.google.common.collect.testing.google.MultisetElementSetTester.testElementSetRemovePropagatesToMultiset(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.google.MultisetElementSetTester.getElementSetDuplicateInitializingMethods(),CLASS: com.google.common.collect.testing.google.MultisetElementSetTester,com.google.common.collect.testing.google.MultisetElementSetTester,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParametersIterable_nullValue(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParametersIterable(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParametersIterable_invalidAttribute(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.TrustedListenableFutureTaskTest.testToString(),CLASS: com.google.common.util.concurrent.TrustedListenableFutureTaskTest,com.google.common.util.concurrent.TrustedListenableFutureTaskTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: MathPreconditions.checkNoOverflow(true);,METHOD: com.google.common.math.MathPreconditionsTest.testCheckNoOverflow_success(),com.google.common.math.MathPreconditionsTest.testCheckNoOverflow_success(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,CATCH_CLAUSE: ArithmeticException,CATCH_CLAUSES: ,com.google.common.math.MathPreconditionsTest.testCheckNoOverflow_failure(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,CATCH_CLAUSE: ArithmeticException,CATCH_CLAUSES: ,com.google.common.math.MathPreconditionsTest.testCheckNoOverflow_failure(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: MathPreconditions.checkNoOverflow(false);,BODY: ,com.google.common.math.MathPreconditionsTest.testCheckNoOverflow_failure(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(String.format(template, args));","METHOD: com.google.common.math.LongMathTest.failFormat(String,Object...)","com.google.common.math.LongMathTest.failFormat(String,Object...)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: boolean isAndroid = TestPlatform.isAndroid();,METHOD: com.google.common.math.LongMathTest.testCheckedMultiply(),com.google.common.math.LongMathTest.testCheckedMultiply(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: boolean isAndroid = System.getProperties().getProperty(java.runtime.name"").contains(""Android"");""",METHOD: com.google.common.math.LongMathTest.testCheckedMultiply(),com.google.common.math.LongMathTest.testCheckedMultiply(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,"JAVADOC: /**
 * Benchmarks for the {@code TreeTraverser} and optimized {@code BinaryTreeTraverser} operations on
 * binary trees.
 *
 * @author Louis Wasserman
 */",CLASS: com.google.common.collect.BinaryTreeTraverserBenchmark,com.google.common.collect.BinaryTreeTraverserBenchmark,NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"ASSIGNMENT: this.view = traversal.view(topology.createTree(size, rng).get(), (useBinaryTraverser ? BINARY_VIEWER : VIEWER));",METHOD: com.google.common.collect.BinaryTreeTraverserBenchmark.setUp(),com.google.common.collect.BinaryTreeTraverserBenchmark.setUp(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.BinaryTreeTraverserBenchmark.BINARY_VIEWER : BinaryTreeTraverser<BinaryNode>,CLASS: com.google.common.collect.BinaryTreeTraverserBenchmark,com.google.common.collect.BinaryTreeTraverserBenchmark,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_OBJECT_STATE,FIELD: com.google.common.collect.BinaryTreeTraverserBenchmark.useBinaryTraverser : boolean,CLASS: com.google.common.collect.BinaryTreeTraverserBenchmark,com.google.common.collect.BinaryTreeTraverserBenchmark,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(2, numCalls.get());",METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testDelegateRejection(),com.google.common.util.concurrent.SequentialExecutorTest.testDelegateRejection(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testRejectedExecutionThrownWithMultipleCalls(),CLASS: com.google.common.util.concurrent.SequentialExecutorTest,com.google.common.util.concurrent.SequentialExecutorTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AbstractChainedListenableFutureTest.testInputFutureToString(),CLASS: com.google.common.util.concurrent.AbstractChainedListenableFutureTest,com.google.common.util.concurrent.AbstractChainedListenableFutureTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.FuturesTransformAsyncTest.testAsyncToString(),CLASS: com.google.common.util.concurrent.FuturesTransformAsyncTest,com.google.common.util.concurrent.FuturesTransformAsyncTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableDirectedGraphTest.incidentEdges_selfLoop(),CLASS: com.google.common.graph.ConfigurableDirectedGraphTest,com.google.common.graph.ConfigurableDirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableSimpleDirectedGraphTest.incidentEdges_checkReturnedSetMutability(),CLASS: com.google.common.graph.ConfigurableSimpleDirectedGraphTest,com.google.common.graph.ConfigurableSimpleDirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableUndirectedGraphTest.incidentEdges_selfLoop(),CLASS: com.google.common.graph.ConfigurableUndirectedGraphTest,com.google.common.graph.ConfigurableUndirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.incidentEdges_oneEdge(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableSimpleUndirectedGraphTest.incidentEdges_checkReturnedSetMutability(),CLASS: com.google.common.graph.ConfigurableSimpleUndirectedGraphTest,com.google.common.graph.ConfigurableSimpleUndirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.incidentEdges_oneEdge(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,FOREACH_STATEMENT: Annotation annotation:e.getAnnotations(),METHOD: com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: false;,METHOD: com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: NULLABLE_ANNOTATIONS.contains(annotation.annotationType().getName()),FOREACH_STATEMENT: Annotation annotation:e.getAnnotations(),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: true;,THEN_STATEMENT: NULLABLE_ANNOTATIONS.contains(annotation.annotationType().getName()),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: ((e.isAnnotationPresent(javax.annotation.CheckForNull.class) || e.isAnnotationPresent(javax.annotation.Nullable.class)) || e.isAnnotationPresent(NullableDecl.class));,METHOD: com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.testing.NullPointerTester.NULLABLE_ANNOTATIONS : ImmutableSet<String>,CLASS: com.google.common.testing.NullPointerTester,com.google.common.testing.NullPointerTester,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_CLASS,CLASS: com.google.common.testing.AbstractPackageSanityTestsTest.ConcretePackageSanityTests,CLASS: com.google.common.testing.AbstractPackageSanityTestsTest,com.google.common.testing.AbstractPackageSanityTestsTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: final URL[] urls = myLoader.getURLs();,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: final URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: URLClassLoader sepLoader = new URLClassLoader(urls, myLoader.getParent());",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.doTestUnloadableInStaticFieldIfClosed(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: final URL[] urls = myLoader.getURLs();,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: final URLClassLoader myLoader = (URLClassLoader) getClass().getClassLoader();,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: URLClassLoader sepLoader = new URLClassLoader(urls, myLoader.getParent());",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.useFrqInSeparateLoader(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.parseJavaClassPath(),CLASS: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.getClassPathUrls(),CLASS: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.count(Object),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.size(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"RETURN_STATEMENT: new Itr<Entry<E>>() {
  @Override Entry<E> result(int entryIndex) {
    return backingMap.getEntry(entryIndex);
  }
};",METHOD: com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: final Iterator<Entry<E>> backingEntries = backingMap.entrySet().iterator();,METHOD: com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new Iterator<Multiset.Entry<E>>() {
  Entry<E> toRemove;
  boolean canRemove;
  public @Override boolean hasNext() {
    return backingEntries.hasNext();
  }
  public @Override Multiset.Entry<E> next() {
    final Entry<E> mapEntry = backingEntries.next();
    toRemove = mapEntry;
    canRemove = true;
    return mapEntry;
  }
  public @Override void remove() {
    checkRemove(canRemove);
    size -= toRemove.getCount();
    backingEntries.remove();
    canRemove = false;
    toRemove = null;
  }
};",METHOD: com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.entryIterator(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.collect.AbstractMapBasedMultiset.setCount(E,int)",CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.distinctElements(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: Multisets.iteratorImpl(this);,METHOD: com.google.common.collect.AbstractMapBasedMultiset.iterator(),com.google.common.collect.AbstractMapBasedMultiset.iterator(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: new MapBasedMultisetIterator();,METHOD: com.google.common.collect.AbstractMapBasedMultiset.iterator(),com.google.common.collect.AbstractMapBasedMultiset.iterator(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.iterator(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int entryIndex = backingMap.indexOf(element);,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (entryIndex == (- 1)),"METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: backingMap.setValue(entryIndex, (int) newCount);","METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,ASSIGNMENT: size += occurrences;,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: 0;,THEN_STATEMENT: (entryIndex == (- 1)),"com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,"METHOD_INVOCATION: backingMap.put(element, (int) newCount);","METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,ASSIGNMENT: size += occurrences;,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int oldCount = backingMap.get(element);,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.add(E,int)","com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"METHOD_INVOCATION: backingMap.put(element, (int) newCount);",THEN_STATEMENT: (entryIndex == (- 1)),"com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.collect.AbstractMapBasedMultiset.add(E,int)",CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,ASSIGNMENT: size = 0L;,METHOD: com.google.common.collect.AbstractMapBasedMultiset.clear(),com.google.common.collect.AbstractMapBasedMultiset.clear(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.clear(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int entryIndex = backingMap.indexOf(element);,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)","com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (entryIndex == (- 1)),"METHOD: com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)","com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: 0;,THEN_STATEMENT: (entryIndex == (- 1)),"com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int oldCount = backingMap.get(element);,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)","com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"METHOD_INVOCATION: backingMap.put((E) element, (oldCount - occurrences));",THEN_STATEMENT: (oldCount > occurrences),"com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: backingMap.remove(element);,ELSE_STATEMENT: (oldCount > occurrences),"com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.collect.AbstractMapBasedMultiset.remove(Object,int)",CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: private,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.size : long,MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_INSERT,PARAMETER: distinctElements,PARAMETERS: ,com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_DELETE,JAVADOC: /** Standard constructor. */,METHOD: com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(AbstractObjectCountMap<E>),com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: protected,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_DELETE,PARAMETER: backingMap,PARAMETERS: ,com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,METHOD_INVOCATION: init(distinctElements);,METHOD: com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(AbstractObjectCountMap<E>),com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,ASSIGNMENT: this.backingMap = checkNotNull(backingMap);,METHOD: com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(AbstractObjectCountMap<E>),com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,ASSIGNMENT: this.size = super.size();,METHOD: com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(AbstractObjectCountMap<E>),com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(int),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.readObject(ObjectInputStream),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.writeObject(ObjectOutputStream),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.elementIterator(),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.AbstractMapBasedMultiset.setCount(E,int,int)",CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.addTo(Multiset<? super E>),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.init(int),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.createEntrySet(),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.readObjectNoData(),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.setBackingMap(AbstractObjectCountMap<E>),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultiset.createElementSet(),CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ATTRIBUTE_TYPE_CHANGE,PARAMETERIZED_TYPE: AbstractObjectCountMap<E>,FIELD: com.google.common.collect.AbstractMapBasedMultiset.backingMap : AbstractObjectCountMap<E>,com.google.common.collect.AbstractMapBasedMultiset.backingMap : ObjectCountHashMap<E>,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_CLASS,CLASS: com.google.common.collect.AbstractMapBasedMultiset.Itr,CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_CLASS,CLASS: com.google.common.collect.AbstractMapBasedMultiset.MapBasedMultisetIterator,CLASS: com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: Collections.emptySet();,METHOD: com.google.common.collect.AbstractSetMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractSetMultimap.createUnmodifiableEmptyCollection(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: ImmutableSet.of();,METHOD: com.google.common.collect.AbstractSetMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractSetMultimap.unmodifiableCollectionSubclass(Collection<E>),CLASS: com.google.common.collect.AbstractSetMultimap,com.google.common.collect.AbstractSetMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.AbstractSetMultimap.wrapCollection(K,Collection<V>)",CLASS: com.google.common.collect.AbstractSetMultimap,com.google.common.collect.AbstractSetMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.SortedMultisets.ElementSet.iterator(),CLASS: com.google.common.collect.SortedMultisets.ElementSet,com.google.common.collect.SortedMultisets.ElementSet,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,RETURN_STATEMENT: Multisets.sizeImpl(this);,METHOD: com.google.common.collect.ForwardingMultiset.standardSize(),com.google.common.collect.ForwardingMultiset.standardSize(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ForwardingMultiset.StandardElementSet.iterator(),CLASS: com.google.common.collect.ForwardingMultiset.StandardElementSet,com.google.common.collect.ForwardingMultiset.StandardElementSet,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.ImmutableMultiset.createEntrySet(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: ObjectCountHashMap<? extends E> backingMap = tryGetMap(multiset);,THEN_STATEMENT: (elements instanceof Multiset),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (backingMap != null),THEN_STATEMENT: (elements instanceof Multiset),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (backingMap != null),IF_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: contents.ensureCapacity(Math.max(contents.size(), backingMap.size()));",THEN_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,FOR_STATEMENT: (i >= 0),THEN_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Set<? extends Entry<? extends E>> entries = multiset.entrySet();,ELSE_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: contents.ensureCapacity(Math.max(contents.size(), entries.size()));",ELSE_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,COMMENT_INSERT,LINE_COMMENT: // might overlap,ELSE_STATEMENT: (backingMap != null),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: addCopies(backingMap.getKey(i), backingMap.getValue(i));",FOR_STATEMENT: (i >= 0),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int i = backingMap.firstIndex();,FOR_INIT: int i = backingMap.firstIndex();,com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,ASSIGNMENT: i = backingMap.nextIndex(i);,FOR_INCR: i = backingMap.nextIndex(i),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,FOREACH_STATEMENT: Entry<? extends E> entry:multiset.entrySet(),THEN_STATEMENT: (elements instanceof Multiset),com.google.common.collect.ImmutableMultiset.Builder.addAll(Iterable<? extends E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: contents.isEmpty(),METHOD: com.google.common.collect.ImmutableMultiset.Builder.build(),com.google.common.collect.ImmutableMultiset.Builder.build(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,RETURN_STATEMENT: new RegularImmutableMultiset<E>((ObjectCountHashMap<E>) contents);,METHOD: com.google.common.collect.ImmutableMultiset.Builder.build(),com.google.common.collect.ImmutableMultiset.Builder.build(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableMultiset.Builder.tryGetMap(Iterable<T>),CLASS: com.google.common.collect.ImmutableMultiset.Builder,com.google.common.collect.ImmutableMultiset.Builder,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ATTRIBUTE_TYPE_CHANGE,PARAMETERIZED_TYPE: AbstractObjectCountMap<E>,FIELD: com.google.common.collect.ImmutableMultiset.Builder.contents : AbstractObjectCountMap<E>,com.google.common.collect.ImmutableMultiset.Builder.contents : ObjectCountHashMap<E>,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new UnmodifiableIterator<E>() {
  int remaining;
  E element;
  public @Override boolean hasNext() {
    return ((remaining > 0) || entryIterator.hasNext());
  }
  public @Override E next() {
    if ((remaining <= 0))
        {
          Entry<E> entry = entryIterator.next();
          element = entry.getElement();
          remaining = entry.getCount();
        }
    remaining --;
    return element;
  }
};",METHOD: com.google.common.collect.ImmutableMultiset.iterator(),com.google.common.collect.ImmutableMultiset.iterator(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.ImmutableSet.Indexed.copyIntoArray(Object[],int)",CLASS: com.google.common.collect.ImmutableSet.Indexed,com.google.common.collect.ImmutableSet.Indexed,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractSortedKeySortedSetMultimap.createKeySet(),CLASS: com.google.common.collect.AbstractSortedKeySortedSetMultimap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.addAll(Collection<? extends E>),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.hashCode(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.add(E),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.retainAll(Collection<?>),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.remove(Object),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.toString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.removeAll(Collection<?>),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,METHOD_INVOCATION: Iterators.clear(entryIterator());,METHOD: com.google.common.collect.AbstractMultiset.clear(),com.google.common.collect.AbstractMultiset.clear(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.collect.AbstractMultiset.equals(Object),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMultiset.ElementSet.iterator(),CLASS: com.google.common.collect.AbstractMultiset.ElementSet,com.google.common.collect.AbstractMultiset.ElementSet,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.collect.AbstractMultiset.iterator(),METHOD: com.google.common.collect.AbstractMultiset.iterator(),com.google.common.collect.AbstractMultiset.elementIterator(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.collect.AbstractMultiset.elementIterator(),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: Multisets.iteratorImpl(this);,METHOD: com.google.common.collect.AbstractMultiset.iterator(),com.google.common.collect.AbstractMultiset.elementIterator(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMultiset.count(Object),CLASS: com.google.common.collect.AbstractMultiset,com.google.common.collect.AbstractMultiset,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMultiset.size(),CLASS: com.google.common.collect.AbstractMultiset,com.google.common.collect.AbstractMultiset,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(self);,"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(elements);,"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (elements instanceof Multiset),"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (elements instanceof Multiset),IF_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"RETURN_STATEMENT: addAllImpl(self, cast(elements));",THEN_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: elements.isEmpty(),IF_STATEMENT: elements.isEmpty(),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"RETURN_STATEMENT: Iterators.addAll(self, elements.iterator());",ELSE_STATEMENT: elements.isEmpty(),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: Multiset<? extends E> that = cast(elements);,THEN_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: self.add(entry.getElement(), entry.getCount());",FOREACH_STATEMENT: Entry<? extends E> entry:that.entrySet(),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,FOREACH_STATEMENT: Entry<? extends E> entry:that.entrySet(),THEN_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: Iterators.addAll(self, elements.iterator());",ELSE_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (elements instanceof Multiset),IF_STATEMENT: (elements instanceof Multiset),"com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (elements instanceof Multiset),"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: true;,"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,IF_STATEMENT: elements.isEmpty(),"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)","com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Collection<? extends E>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractMultiset<E>() {
  public @Override boolean contains(@NullableDecl Object element) {
    return (multiset1.contains(element) || multiset2.contains(element));
  }
  public @Override boolean isEmpty() {
    return (multiset1.isEmpty() && multiset2.isEmpty());
  }
  public @Override int count(Object element) {
    return Math.max(multiset1.count(element), multiset2.count(element));
  }
  @Override Set<E> createElementSet() {
    return Sets.union(multiset1.elementSet(), multiset2.elementSet());
  }
  @Override Iterator<Entry<E>> entryIterator() {
    final Iterator<? extends Entry<? extends E>> iterator1 = multiset1.entrySet().iterator();
    final Iterator<? extends Entry<? extends E>> iterator2 = multiset2.entrySet().iterator();
    return new AbstractIterator<Entry<E>>() {
  protected @Override Entry<E> computeNext() {
    if (iterator1.hasNext())
        {
          Entry<? extends E> entry1 = iterator1.next();
          E element = entry1.getElement();
          int count = Math.max(entry1.getCount(), multiset2.count(element));
          return immutableEntry(element, count);
        }
    while (iterator2.hasNext())      {
        Entry<? extends E> entry2 = iterator2.next();
        E element = entry2.getElement();
        if ((! multiset1.contains(element)))
            {
              return immutableEntry(element, entry2.getCount());
            }
      }
    return endOfData();
  }
};
  }
  @Override int distinctElements() {
    return elementSet().size();
  }
};","METHOD: com.google.common.collect.Multisets.union(Multiset<? extends E>,Multiset<? extends E>)","com.google.common.collect.Multisets.union(Multiset<? extends E>,Multiset<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARENT_CLASS_CHANGE,PARAMETERIZED_TYPE: AbstractMultiset<E>,CLASS: com.google.common.collect.Multisets.FilteredMultiset,com.google.common.collect.Multisets.FilteredMultiset,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.Multisets.FilteredMultiset.elementIterator(),CLASS: com.google.common.collect.Multisets.FilteredMultiset,com.google.common.collect.Multisets.FilteredMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.Multisets.FilteredMultiset.clear(),CLASS: com.google.common.collect.Multisets.FilteredMultiset,com.google.common.collect.Multisets.FilteredMultiset,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.Multisets.FilteredMultiset.distinctElements(),CLASS: com.google.common.collect.Multisets.FilteredMultiset,com.google.common.collect.Multisets.FilteredMultiset,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractMultiset<E>() {
  public @Override boolean contains(@NullableDecl Object element) {
    return (multiset1.contains(element) || multiset2.contains(element));
  }
  public @Override boolean isEmpty() {
    return (multiset1.isEmpty() && multiset2.isEmpty());
  }
  public @Override int size() {
    return IntMath.saturatedAdd(multiset1.size(), multiset2.size());
  }
  public @Override int count(Object element) {
    return (multiset1.count(element) + multiset2.count(element));
  }
  @Override Set<E> createElementSet() {
    return Sets.union(multiset1.elementSet(), multiset2.elementSet());
  }
  @Override Iterator<Entry<E>> entryIterator() {
    final Iterator<? extends Entry<? extends E>> iterator1 = multiset1.entrySet().iterator();
    final Iterator<? extends Entry<? extends E>> iterator2 = multiset2.entrySet().iterator();
    return new AbstractIterator<Entry<E>>() {
  protected @Override Entry<E> computeNext() {
    if (iterator1.hasNext())
        {
          Entry<? extends E> entry1 = iterator1.next();
          E element = entry1.getElement();
          int count = (entry1.getCount() + multiset2.count(element));
          return immutableEntry(element, count);
        }
    while (iterator2.hasNext())      {
        Entry<? extends E> entry2 = iterator2.next();
        E element = entry2.getElement();
        if ((! multiset1.contains(element)))
            {
              return immutableEntry(element, entry2.getCount());
            }
      }
    return endOfData();
  }
};
  }
  @Override int distinctElements() {
    return elementSet().size();
  }
};","METHOD: com.google.common.collect.Multisets.sum(Multiset<? extends E>,Multiset<? extends E>)","com.google.common.collect.Multisets.sum(Multiset<? extends E>,Multiset<? extends E>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractMultiset<E>() {
  public @Override int count(Object element) {
    int count1 = multiset1.count(element);
    return ((count1 == 0) ? 0 : Math.min(count1, multiset2.count(element)));
  }
  @Override Set<E> createElementSet() {
    return Sets.intersection(multiset1.elementSet(), multiset2.elementSet());
  }
  @Override Iterator<Entry<E>> entryIterator() {
    final Iterator<Entry<E>> iterator1 = multiset1.entrySet().iterator();
    return new AbstractIterator<Entry<E>>() {
  protected @Override Entry<E> computeNext() {
    while (iterator1.hasNext())      {
        Entry<E> entry1 = iterator1.next();
        E element = entry1.getElement();
        int count = Math.min(entry1.getCount(), multiset2.count(element));
        if ((count > 0))
            {
              return immutableEntry(element, count);
            }
      }
    return endOfData();
  }
};
  }
  @Override int distinctElements() {
    return elementSet().size();
  }
};","METHOD: com.google.common.collect.Multisets.intersection(Multiset<E>,Multiset<?>)","com.google.common.collect.Multisets.intersection(Multiset<E>,Multiset<?>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractMultiset<E>() {
  public @Override int count(@NullableDecl Object element) {
    int count1 = multiset1.count(element);
    return ((count1 == 0) ? 0 : Math.max(0, (count1 - multiset2.count(element))));
  }
  @Override Iterator<Entry<E>> entryIterator() {
    final Iterator<Entry<E>> iterator1 = multiset1.entrySet().iterator();
    return new AbstractIterator<Entry<E>>() {
  protected @Override Entry<E> computeNext() {
    while (iterator1.hasNext())      {
        Entry<E> entry1 = iterator1.next();
        E element = entry1.getElement();
        int count = (entry1.getCount() - multiset2.count(element));
        if ((count > 0))
            {
              return immutableEntry(element, count);
            }
      }
    return endOfData();
  }
};
  }
  @Override int distinctElements() {
    return Iterators.size(entryIterator());
  }
};","METHOD: com.google.common.collect.Multisets.difference(Multiset<E>,Multiset<?>)","com.google.common.collect.Multisets.difference(Multiset<E>,Multiset<?>)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new TransformedIterator<Entry<E>, E>(multiset().entrySet().iterator()) {
  @Override E transform(Entry<E> entry) {
    return entry.getElement();
  }
};",METHOD: com.google.common.collect.Multisets.ElementSet.iterator(),com.google.common.collect.Multisets.ElementSet.iterator(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.collect.Multisets.sizeImpl(Multiset<?>),METHOD: com.google.common.collect.Multisets.sizeImpl(Multiset<?>),com.google.common.collect.Multisets.linearTimeSizeImpl(Multiset<?>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,Multiset<? extends E>)",CLASS: com.google.common.collect.Multisets,com.google.common.collect.Multisets,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Multisets.addAllImpl(Multiset<E>,AbstractMapBasedMultiset<? extends E>)",CLASS: com.google.common.collect.Multisets,com.google.common.collect.Multisets,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.Multisets.elementIterator(Iterator<Entry<E>>),CLASS: com.google.common.collect.Multisets,com.google.common.collect.Multisets,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_CLASS,CLASS: com.google.common.collect.Multisets.ViewMultiset,CLASS: com.google.common.collect.Multisets,com.google.common.collect.Multisets,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: Collections.emptyList();,METHOD: com.google.common.collect.AbstractListMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractListMultimap.createUnmodifiableEmptyCollection(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: ImmutableList.of();,METHOD: com.google.common.collect.AbstractListMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractListMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractListMultimap.unmodifiableCollectionSubclass(Collection<E>),CLASS: com.google.common.collect.AbstractListMultimap,com.google.common.collect.AbstractListMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.AbstractListMultimap.wrapCollection(K,Collection<V>)",CLASS: com.google.common.collect.AbstractListMultimap,com.google.common.collect.AbstractListMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: Comparator<? super V> comparator = valueComparator();,METHOD: com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: ImmutableSortedSet.emptySet(valueComparator());,ELSE_STATEMENT: (comparator == null),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (comparator == null),IF_STATEMENT: (comparator == null),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (comparator == null),METHOD: com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: Collections.unmodifiableSortedSet(createCollection());,THEN_STATEMENT: (comparator == null),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,RETURN_STATEMENT: Collections.unmodifiableSortedSet(createCollection());,METHOD: com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),com.google.common.collect.AbstractSortedSetMultimap.createUnmodifiableEmptyCollection(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractSortedSetMultimap.unmodifiableCollectionSubclass(Collection<E>),CLASS: com.google.common.collect.AbstractSortedSetMultimap,com.google.common.collect.AbstractSortedSetMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.AbstractSortedSetMultimap.wrapCollection(K,Collection<V>)",CLASS: com.google.common.collect.AbstractSortedSetMultimap,com.google.common.collect.AbstractSortedSetMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new ForwardingIterator<Entry<E>>() {
  private Entry<E> last;
  protected @Override Iterator<Entry<E>> delegate() {
    return readOnlyIterator;
  }
  public @Override Entry<E> next() {
    last = super.next();
    return last;
  }
  public @Override void remove() {
    checkRemove((last != null));
    ConcurrentHashMultiset.this.setCount(last.getElement(), 0);
    last = null;
  }
};",METHOD: com.google.common.collect.ConcurrentHashMultiset.entryIterator(),com.google.common.collect.ConcurrentHashMultiset.entryIterator(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ConcurrentHashMultiset.iterator(),CLASS: com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ConcurrentHashMultiset.elementIterator(),CLASS: com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: Sets.unmodifiableNavigableSet((NavigableSet<E>) collection);,THEN_STATEMENT: (collection instanceof NavigableSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: Collections.unmodifiableSortedSet((SortedSet<E>) collection);,THEN_STATEMENT: (collection instanceof SortedSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: Collections.unmodifiableSet((Set<E>) collection);,THEN_STATEMENT: (collection instanceof Set),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: Collections.unmodifiableList((List<E>) collection);,THEN_STATEMENT: (collection instanceof List),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof List),IF_STATEMENT: (collection instanceof List),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof List),ELSE_STATEMENT: (collection instanceof Set),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof Set),IF_STATEMENT: (collection instanceof Set),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof Set),ELSE_STATEMENT: (collection instanceof SortedSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof SortedSet),IF_STATEMENT: (collection instanceof SortedSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof SortedSet),ELSE_STATEMENT: (collection instanceof NavigableSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof NavigableSet),IF_STATEMENT: (collection instanceof NavigableSet),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof NavigableSet),METHOD: com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: Collections.unmodifiableCollection(collection);,ELSE_STATEMENT: (collection instanceof List),com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,UNCLASSIFIED_CHANGE,MODIFIER: static,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultimap.unmodifiableCollectionSubclass(Collection<E>),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.collect.AbstractMapBasedMultimap.wrapList(K,List<V>,WrappedCollection)",CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: private,MODIFIERS: ,"com.google.common.collect.AbstractMapBasedMultimap.wrapList(K,List<V>,WrappedCollection)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: new Iterator<K>() {
  Entry<K, Collection<V>> entry;
  public @Override boolean hasNext() {
    return entryIterator.hasNext();
  }
  public @Override K next() {
    entry = entryIterator.next();
    return entry.getKey();
  }
  public @Override void remove() {
    checkRemove((entry != null));
    Collection<V> collection = entry.getValue();
    entryIterator.remove();
    totalSize -= collection.size();
    collection.clear();
  }
};",METHOD: com.google.common.collect.AbstractMapBasedMultimap.KeySet.iterator(),com.google.common.collect.AbstractMapBasedMultimap.KeySet.iterator(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new WrappedNavigableSet(key, (NavigableSet<V>) collection, null);",THEN_STATEMENT: (collection instanceof NavigableSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new WrappedSortedSet(key, (SortedSet<V>) collection, null);",THEN_STATEMENT: (collection instanceof SortedSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new WrappedSet(key, (Set<V>) collection);",THEN_STATEMENT: (collection instanceof Set),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: wrapList(key, (List<V>) collection, null);",THEN_STATEMENT: (collection instanceof List),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof List),IF_STATEMENT: (collection instanceof List),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof List),ELSE_STATEMENT: (collection instanceof Set),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof Set),IF_STATEMENT: (collection instanceof Set),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof Set),ELSE_STATEMENT: (collection instanceof SortedSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof SortedSet),IF_STATEMENT: (collection instanceof SortedSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof SortedSet),ELSE_STATEMENT: (collection instanceof NavigableSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (collection instanceof NavigableSet),IF_STATEMENT: (collection instanceof NavigableSet),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (collection instanceof NavigableSet),"METHOD: com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)","com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,"RETURN_STATEMENT: new WrappedCollection(key, collection, null);",ELSE_STATEMENT: (collection instanceof List),"com.google.common.collect.AbstractMapBasedMultimap.wrapCollection(K,Collection<V>)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,METHOD_INVOCATION: checkRemove((collection != null));,METHOD: com.google.common.collect.AbstractMapBasedMultimap.AsMap.AsMapIterator.remove(),com.google.common.collect.AbstractMapBasedMultimap.AsMap.AsMapIterator.remove(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,ASSIGNMENT: collection = null;,METHOD: com.google.common.collect.AbstractMapBasedMultimap.AsMap.AsMapIterator.remove(),com.google.common.collect.AbstractMapBasedMultimap.AsMap.AsMapIterator.remove(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new NavigableKeySet((NavigableMap<K, Collection<V>>) map);",THEN_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new SortedKeySet((SortedMap<K, Collection<V>>) map);",THEN_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (map instanceof SortedMap),IF_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (map instanceof SortedMap),ELSE_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (map instanceof NavigableMap),IF_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (map instanceof NavigableMap),METHOD: com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: new KeySet(map);,ELSE_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createKeySet(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: private,MODIFIERS: ,com.google.common.collect.AbstractMapBasedMultimap.WrappedCollection,MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new NavigableAsMap((NavigableMap<K, Collection<V>>) map);",THEN_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: new SortedAsMap((SortedMap<K, Collection<V>>) map);",THEN_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (map instanceof SortedMap),IF_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (map instanceof SortedMap),ELSE_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (map instanceof NavigableMap),IF_STATEMENT: (map instanceof NavigableMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (map instanceof NavigableMap),METHOD: com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: new AsMap(map);,ELSE_STATEMENT: (map instanceof SortedMap),com.google.common.collect.AbstractMapBasedMultimap.createAsMap(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultimap.createMaybeNavigableAsMap(),CLASS: com.google.common.collect.AbstractMapBasedMultimap,com.google.common.collect.AbstractMapBasedMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.AbstractMapBasedMultimap.createMaybeNavigableKeySet(),CLASS: com.google.common.collect.AbstractMapBasedMultimap,com.google.common.collect.AbstractMapBasedMultimap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.HTTP2_SETTINGS : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"RETURN_STATEMENT: withParameters(attribute, ImmutableSet.of(value));","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(attribute);,"METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(value);,"METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: String normalizedAttribute = normalizeToken(attribute);,"METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: ImmutableListMultimap.Builder<String, String> builder = ImmutableListMultimap.builder();","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: String key = entry.getKey();,"FOREACH_STATEMENT: Entry<String, String> entry:parameters.entries()","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: builder.put(key, entry.getValue());",THEN_STATEMENT: (! normalizedAttribute.equals(key)),"com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (! normalizedAttribute.equals(key)),"FOREACH_STATEMENT: Entry<String, String> entry:parameters.entries()","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"FOREACH_STATEMENT: Entry<String, String> entry:parameters.entries()","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"METHOD_INVOCATION: builder.put(normalizedAttribute, normalizeParameterValue(normalizedAttribute, value));","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: MediaType mediaType = new MediaType(type, subtype, builder.build());","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,COMMENT_DELETE,"LINE_COMMENT: // if the attribute isn't charset, we can just inherit the current parsedCharset","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,ASSIGNMENT: mediaType.parsedCharset = this.parsedCharset;,THEN_STATEMENT: (! normalizedAttribute.equals(CHARSET_ATTRIBUTE)),"com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,IF_STATEMENT: (! normalizedAttribute.equals(CHARSET_ATTRIBUTE)),"METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,COMMENT_DELETE,LINE_COMMENT: // Return one of the constants if the media type is a known type.,"METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,"RETURN_STATEMENT: MoreObjects.firstNonNull(KNOWN_TYPES.get(mediaType), mediaType);","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,"JAVADOC: /**
   * <em>Replaces</em> all parameters with the given attribute with a single parameter with the
   * given value. If multiple parameters with the same attributes are necessary use {@link
   * #withParameters}. Prefer {@link #withCharset} for setting the {@code charset} parameter when
   * using a {@link Charset} object.
   *
   * @throws IllegalArgumentException if either {@code attribute} or {@code value} is invalid
   */","METHOD: com.google.common.net.MediaType.withParameter(String,String)","com.google.common.net.MediaType.withParameter(String,String)",NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.net.MediaType.withParameters(String,Iterable<String>)",CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.util.concurrent.WrappingExecutorService.wrapTasks(Collection<? extends Callable<T>>),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Runnable state = get();,METHOD: com.google.common.util.concurrent.InterruptibleTask.toString(),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: final String result;,METHOD: com.google.common.util.concurrent.InterruptibleTask.toString(),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (state == DONE),METHOD: com.google.common.util.concurrent.InterruptibleTask.toString(),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (state == DONE),IF_STATEMENT: (state == DONE),com.google.common.util.concurrent.InterruptibleTask.toString(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"ASSIGNMENT: result = running=[DONE]"";""",THEN_STATEMENT: (state == DONE),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (state == INTERRUPTING),ELSE_STATEMENT: (state == DONE),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (state == INTERRUPTING),IF_STATEMENT: (state == INTERRUPTING),com.google.common.util.concurrent.InterruptibleTask.toString(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"ASSIGNMENT: result = running=[INTERRUPTED]"";""",THEN_STATEMENT: (state == INTERRUPTING),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,IF_STATEMENT: (state instanceof Thread),ELSE_STATEMENT: (state == INTERRUPTING),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (state instanceof Thread),IF_STATEMENT: (state instanceof Thread),com.google.common.util.concurrent.InterruptibleTask.toString(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,COMMENT_INSERT,"LINE_COMMENT: // getName is final on Thread, no need to worry about exceptions",THEN_STATEMENT: (state instanceof Thread),com.google.common.util.concurrent.InterruptibleTask.toString(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"ASSIGNMENT: result = ((running=[RUNNING ON "" + (Thread) state.getName()) + ""]"");""",THEN_STATEMENT: (state instanceof Thread),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"ASSIGNMENT: result = running=[NOT STARTED YET]"";""",ELSE_STATEMENT: (state instanceof Thread),com.google.common.util.concurrent.InterruptibleTask.toString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.util.concurrent.InterruptibleTask.toString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,UNCLASSIFIED_CHANGE,MODIFIER: abstract,MODIFIERS: ,com.google.common.util.concurrent.InterruptibleTask.toString(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.InterruptibleTask.toPendingString(),CLASS: com.google.common.util.concurrent.InterruptibleTask,com.google.common.util.concurrent.InterruptibleTask,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"RETURN_STATEMENT: ((setFuture=["" + (SetFuture) localValue.future) + ""]"");""",THEN_STATEMENT: (localValue instanceof SetFuture),com.google.common.util.concurrent.AbstractFuture.pendingToString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AbstractFuture.userObjectToString(Object),CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleTask.toString(),METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleTask.toString(),com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleTask.toPendingString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleTask.toPendingString(),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,RETURN_STATEMENT: super.pendingToString();,METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.pendingToString(),com.google.common.util.concurrent.TrustedListenableFutureTask.pendingToString(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_DELETE,RETURN_STATEMENT: null;,METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.pendingToString(),com.google.common.util.concurrent.TrustedListenableFutureTask.pendingToString(),MEDIUM
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleAsyncTask.toString(),METHOD: com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleAsyncTask.toString(),com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleAsyncTask.toPendingString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.util.concurrent.TrustedListenableFutureTask.TrustedFutureInterruptibleAsyncTask.toPendingString(),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.util.concurrent.RateLimiter.SleepingStopwatch.createFromSystemTimer(),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.toString(),METHOD: com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.toString(),com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.toPendingString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.toPendingString(),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,METHOD_RENAMING,METHOD: com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.toString(),METHOD: com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.toString(),com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.toPendingString(),CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.toPendingString(),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.successors(N),com.google.common.graph.Graph.successors(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.nodeOrder(),com.google.common.graph.Graph.nodeOrder(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.inDegree(N),com.google.common.graph.Graph.inDegree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.allowsSelfLoops(),com.google.common.graph.Graph.allowsSelfLoops(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.isDirected(),com.google.common.graph.Graph.isDirected(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.degree(N),com.google.common.graph.Graph.degree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.nodes(),com.google.common.graph.Graph.nodes(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.predecessors(N),com.google.common.graph.Graph.predecessors(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.outDegree(N),com.google.common.graph.Graph.outDegree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.Graph.adjacentNodes(N),com.google.common.graph.Graph.adjacentNodes(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Graph.incidentEdges(N),CLASS: com.google.common.graph.Graph,com.google.common.graph.Graph,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.successors(N),com.google.common.graph.ValueGraph.successors(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.nodeOrder(),com.google.common.graph.ValueGraph.nodeOrder(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.inDegree(N),com.google.common.graph.ValueGraph.inDegree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.allowsSelfLoops(),com.google.common.graph.ValueGraph.allowsSelfLoops(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.isDirected(),com.google.common.graph.ValueGraph.isDirected(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.degree(N),com.google.common.graph.ValueGraph.degree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.nodes(),com.google.common.graph.ValueGraph.nodes(),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.predecessors(N),com.google.common.graph.ValueGraph.predecessors(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.outDegree(N),com.google.common.graph.ValueGraph.outDegree(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,DOC_UPDATE,JAVADOC: /** {@inheritDoc} */,METHOD: com.google.common.graph.ValueGraph.adjacentNodes(N),com.google.common.graph.ValueGraph.adjacentNodes(N),NONE
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraph.incidentEdges(N),CLASS: com.google.common.graph.ValueGraph,com.google.common.graph.ValueGraph,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.BaseGraph.incidentEdges(N),CLASS: com.google.common.graph.BaseGraph,com.google.common.graph.BaseGraph,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((leadingZeros >= Long.SIZE));,"METHOD: com.google.common.math.LongMath.checkedMultiply(long,long)","com.google.common.math.LongMath.checkedMultiply(long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow(((a >= 0) | (b != Long.MIN_VALUE)));,"METHOD: com.google.common.math.LongMath.checkedMultiply(long,long)","com.google.common.math.LongMath.checkedMultiply(long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow(((a == 0) || ((result / a) == b)));,"METHOD: com.google.common.math.LongMath.checkedMultiply(long,long)","com.google.common.math.LongMath.checkedMultiply(long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((((a ^ b) < 0) | ((a ^ result) >= 0)));,"METHOD: com.google.common.math.LongMath.checkedAdd(long,long)","com.google.common.math.LongMath.checkedAdd(long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((((a ^ b) >= 0) | ((a ^ result) >= 0)));,"METHOD: com.google.common.math.LongMath.checkedSubtract(long,long)","com.google.common.math.LongMath.checkedSubtract(long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((k < (Long.SIZE - 1)));,SWITCH_STATEMENT: (int) b,"com.google.common.math.LongMath.checkedPow(long,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((k < Long.SIZE));,SWITCH_STATEMENT: (int) b,"com.google.common.math.LongMath.checkedPow(long,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((((- FLOOR_SQRT_MAX_LONG) <= b) && (b <= FLOOR_SQRT_MAX_LONG)));,THEN_STATEMENT: (k > 0),"com.google.common.math.LongMath.checkedPow(long,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((result == (int) result));,"METHOD: com.google.common.math.IntMath.checkedMultiply(int,int)","com.google.common.math.IntMath.checkedMultiply(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((result == (int) result));,"METHOD: com.google.common.math.IntMath.checkedAdd(int,int)","com.google.common.math.IntMath.checkedAdd(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((k < (Integer.SIZE - 1)));,SWITCH_STATEMENT: b,"com.google.common.math.IntMath.checkedPow(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((k < Integer.SIZE));,SWITCH_STATEMENT: b,"com.google.common.math.IntMath.checkedPow(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((((- FLOOR_SQRT_MAX_INT) <= b) & (b <= FLOOR_SQRT_MAX_INT)));,THEN_STATEMENT: (k > 0),"com.google.common.math.IntMath.checkedPow(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,METHOD_INVOCATION: checkNoOverflow((result == (int) result));,"METHOD: com.google.common.math.IntMath.checkedSubtract(int,int)","com.google.common.math.IntMath.checkedSubtract(int,int)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_INSERT,PARAMETER: methodName,PARAMETERS: ,"com.google.common.math.MathPreconditions.checkNoOverflow(boolean,String,long,long)",HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_INSERT,PARAMETER: a,PARAMETERS: ,"com.google.common.math.MathPreconditions.checkNoOverflow(boolean,String,long,long)",HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_INSERT,PARAMETER: b,PARAMETERS: ,"com.google.common.math.MathPreconditions.checkNoOverflow(boolean,String,long,long)",HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_UPDATE,"THROW_STATEMENT: new ArithmeticException(overflow"");""",THEN_STATEMENT: (! condition),"com.google.common.math.MathPreconditions.checkNoOverflow(boolean,String,long,long)",LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.math.MathPreconditions.checkNoOverflow(boolean,String,int,int)",CLASS: com.google.common.math.MathPreconditions,com.google.common.math.MathPreconditions,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashSetTest.testDummyMethod(),CLASS: com.google.common.collect.CompactHashSetTest,com.google.common.collect.CompactHashSetTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashSetTest.testDummyMethod(),CLASS: com.google.common.collect.CompactLinkedHashSetTest,com.google.common.collect.CompactLinkedHashSetTest,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARENT_CLASS_DELETE,PARAMETERIZED_TYPE: AbstractObjectCountMap<K>,CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,CRUCIAL
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: map: AbstractObjectCountMap<K>,PARAMETER: map,com.google.common.collect.ObjectCountHashMap.ObjectCountHashMap(ObjectCountHashMap<? extends K>),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.firstIndex(),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.ensureCapacity(int),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.getKey(int),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.getEntry(int),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.getValue(int),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.nextIndex(int),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.size(),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.ObjectCountHashMap.nextIndexAfterRemove(int,int)",CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.ObjectCountHashMap.setValue(int,int)",CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountHashMap.createEntrySet(),CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.collect.ObjectCountHashMap.keys : Object[],CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.collect.ObjectCountHashMap.modCount : int,CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.collect.ObjectCountHashMap.size : int,CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.collect.ObjectCountHashMap.values : int[],CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_CLASS,CLASS: com.google.common.collect.ObjectCountHashMap.MapEntry,CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_CLASS,CLASS: com.google.common.collect.ObjectCountHashMap.HashEntrySetView,CLASS: com.google.common.collect.ObjectCountHashMap,com.google.common.collect.ObjectCountHashMap,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int oldCapacity = links.length;,METHOD: com.google.common.collect.ObjectCountLinkedHashMap.resizeEntries(int),com.google.common.collect.ObjectCountLinkedHashMap.resizeEntries(int),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,STATEMENT_INSERT,"METHOD_INVOCATION: Arrays.fill(links, oldCapacity, newCapacity, UNSET);",METHOD: com.google.common.collect.ObjectCountLinkedHashMap.resizeEntries(int),com.google.common.collect.ObjectCountLinkedHashMap.resizeEntries(int),LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: map: AbstractObjectCountMap<K>,PARAMETER: map,com.google.common.collect.ObjectCountLinkedHashMap.ObjectCountLinkedHashMap(ObjectCountHashMap<K>),HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.ObjectCountLinkedHashMap.nextIndexAfterRemove(int,int)",CLASS: com.google.common.collect.ObjectCountLinkedHashMap,com.google.common.collect.ObjectCountLinkedHashMap,LOW
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountLinkedHashMap.createEntrySet(),CLASS: com.google.common.collect.ObjectCountLinkedHashMap,com.google.common.collect.ObjectCountLinkedHashMap,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.ObjectCountLinkedHashMap.createKeySet(),CLASS: com.google.common.collect.ObjectCountLinkedHashMap,com.google.common.collect.ObjectCountLinkedHashMap,HIGH
1,ccc239f85a4a0b3620148c54df1c55cb2db71d53,REMOVED_CLASS,CLASS: com.google.common.collect.ObjectCountLinkedHashMap.LinkedItr,CLASS: com.google.common.collect.ObjectCountLinkedHashMap,com.google.common.collect.ObjectCountLinkedHashMap,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Platform.nullToEmpty(String),CLASS: com.google.common.base.Platform,com.google.common.base.Platform,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Platform.emptyToNull(String),CLASS: com.google.common.base.Platform,com.google.common.base.Platform,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: Map<K, V> deserialized = SerializableTester.reserialize(getMap());",METHOD: com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();",METHOD: com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: SerializableTester.reserializeAndAssert(getMap());,METHOD: com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),com.google.common.collect.testing.testers.MapSerializationTester.testReserializeMap(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: final LoadingCache<String, String> cache = CacheBuilder.newBuilder().recordStats().concurrencyLevel(2).expireAfterWrite(100, TimeUnit.MILLISECONDS).removalListener(removalListener).maximumSize(5000).build(countingIdentityLoader);",METHOD: com.google.common.cache.CacheBuilderTest.testRemovalNotification_get_basher(),com.google.common.cache.CacheBuilderTest.testRemovalNotification_get_basher(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: threadPool.awaitTermination(300, TimeUnit.SECONDS);",METHOD: com.google.common.cache.CacheBuilderTest.testRemovalNotification_get_basher(),com.google.common.cache.CacheBuilderTest.testRemovalNotification_get_basher(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_CLASS,CLASS: com.google.common.base.ThrowablesTest.AllowSettingSecurityManagerPolicy,CLASS: com.google.common.base.ThrowablesTest,com.google.common.base.ThrowablesTest,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: supplier: Supplier<Checksum>,PARAMETER: supplier,"com.google.common.hash.ChecksumHashFunctionTest.assertHash32(int,ImmutableSupplier<Checksum>,String)",HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: supplier: Supplier<Checksum>,PARAMETER: supplier,"com.google.common.hash.ChecksumHashFunctionTest.assertChecksum(ImmutableSupplier<Checksum>,String)",HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: Closer closer = Closer.create();,METHOD: com.google.common.io.CloserTest.testCreate(),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int versionNumber = parseInt(javaVersion());,METHOD: com.google.common.io.CloserTest.testCreate(),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: assertThat(closer.suppressor).isInstanceOf(Closer.LoggingSuppressor.class);,THEN_STATEMENT: (versionNumber < 7),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (versionNumber < 7),IF_STATEMENT: (versionNumber < 7),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,IF_STATEMENT: (versionNumber < 7),METHOD: com.google.common.io.CloserTest.testCreate(),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertThat(closer.suppressor).isInstanceOf(Closer.SuppressingSuppressor.class);,ELSE_STATEMENT: (versionNumber < 7),com.google.common.io.CloserTest.testCreate(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(closer.suppressor).isInstanceOf(Closer.SuppressingSuppressor.class);,METHOD: com.google.common.io.CloserTest.testCreate(),com.google.common.io.CloserTest.testCreate(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_FUNCTIONALITY,METHOD: com.google.common.io.CloserTest.javaVersion(),CLASS: com.google.common.io.CloserTest,com.google.common.io.CloserTest,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InputStream in = newTestStream(100);,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSmallerSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSmallerSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(100, b.length);",METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSmallerSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSmallerSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InputStream in = newTestStream(100);,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenCorrectSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenCorrectSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(100, b.length);",METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenCorrectSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenCorrectSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InputStream in = newTestStream(100);,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeZero(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeZero(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(100, b.length);",METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeZero(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeZero(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InputStream in = newTestStream(100);,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenLargerSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenLargerSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(100, b.length);",METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenLargerSize(),com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenLargerSize(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeTwoSmallerThanActual(),CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_largeStream(),CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_emptyStream(),CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray_withSize_givenSizeOneSmallerThanActual(),CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteStreamsTest.testToByteArray(),CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.io.ByteStreamsTest.PRE_FILLED_100 : byte[],CLASS: com.google.common.io.ByteStreamsTest,com.google.common.io.ByteStreamsTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,METHOD_RENAMING,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_tree(),METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_tree(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_tree(),HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEqualCharNodes(traverser.depthFirstPreOrder('h'), hdabcegf"");""",METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_tree(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_tree(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEqualCharNodes(traverser.depthFirstPreOrder('d'), dabc"");""",METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_tree(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_tree(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEqualCharNodes(traverser.depthFirstPreOrder('a'), a"");""",METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_tree(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_tree(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_multiGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_javadocExample_canBeIteratedMultipleTimes(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterableIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_diamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_diamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_cyclicGraphContainingTree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_graphContainingTreeAndDiamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_javadocExample_canBeIteratedMultipleTimes(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_multigraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_cyclicGraphContainingTree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_cycle(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_twoCycles(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_cyclicGraphContainingTree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_multigraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_twoCycles(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrderIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_javadocExample_canBeIteratedMultipleTimes(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_diamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_cycle(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_graphContainingTreeAndDiamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_cycle(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirstIterable_graphContainingTreeAndDiamond(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_emptyGraph(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_tree(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirstIterable_twoCycles(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_singleRoot(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPostOrderIterable_iterableIsLazy(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPostOrderIterable_twoTrees(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /**
 * A test utility that verifies that your methods and constructors throw {@link
 * NullPointerException} or {@link UnsupportedOperationException} whenever null is passed to a
 * parameter that isn't annotated with {@link javax.annotation.Nullable}, {@link
 * javax.annotation.CheckForNull}, or {@link
 * org.checkerframework.checker.nullness.compatqual.NullableDecl}.
 *
 * <p>The tested methods and constructors are invoked -- each time with one parameter being null and
 * the rest not null -- and the test fails if no expected exception is thrown. {@code
 * NullPointerTester} uses best effort to pick non-null default values for many common JDK and Guava
 * types, and also for interfaces and public classes that have public parameter-less constructors.
 * When the non-null default value for a particular parameter type cannot be provided by {@code
 * NullPointerTester}, the caller can provide a custom non-null default value for the parameter type
 * via {@link #setDefault}.
 *
 * @author Kevin Bourrillion
 * @since 10.0
 */",CLASS: com.google.common.testing.NullPointerTester,com.google.common.testing.NullPointerTester,NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: NULLABLE_ANNOTATIONS.contains(annotation.annotationType().getName()),FOREACH_STATEMENT: Annotation annotation:e.getAnnotations(),com.google.common.testing.NullPointerTester.isNullable(AnnotatedElement),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.testing.NullPointerTester.NULLABLE_ANNOTATION_SIMPLE_NAMES : ImmutableSet<String>,CLASS: com.google.common.testing.NullPointerTester,com.google.common.testing.NullPointerTester,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_OBJECT_STATE,FIELD: com.google.common.testing.NullPointerTester.NULLABLE_ANNOTATIONS : ImmutableSet<String>,CLASS: com.google.common.testing.NullPointerTester,com.google.common.testing.NullPointerTester,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: ,THEN_STATEMENT: isJdk9(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,"LINE_COMMENT: // Test that the use of a FinalizableReferenceQueue does not subsequently prevent the
    // loader of that class from being garbage-collected even if there is a SecurityManager.
    // The SecurityManager environment makes such leaks more likely because when you create
    // a URLClassLoader with a SecurityManager, the creating code's AccessControlContext is
    // captured, and that references the creating code's ClassLoader.",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_INSERT,"JAVADOC: /**
   * Tests that the use of a {@link FinalizableReferenceQueue} does not subsequently prevent the
   * loader of that class from being garbage-collected even if there is a {@link SecurityManager}.
   * The {@link SecurityManager} environment makes such leaks more likely because when you create a
   * {@link URLClassLoader} with a {@link SecurityManager}, the creating code's {@link
   * java.security.AccessControlContext} is captured, and that references the creating code's {@link
   * ClassLoader}.
   */",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableInStaticFieldIfClosed(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableInStaticFieldIfClosed(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: ,THEN_STATEMENT: isJdk9(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableInStaticFieldIfClosed(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: ,THEN_STATEMENT: isJdk9(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,"LINE_COMMENT: // Test that the use of a FinalizableReferenceQueue does not subsequently prevent the
    // loader of that class from being garbage-collected.",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_INSERT,"JAVADOC: /**
   * Tests that the use of a {@link FinalizableReferenceQueue} does not subsequently prevent the
   * loader of that class from being garbage-collected.
   */",METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.isJdk9(),CLASS: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARENT_CLASS_CHANGE,PARAMETERIZED_TYPE: Entry<E>,CLASS: com.google.common.collect.ImmutableMultiset.EntrySet,com.google.common.collect.ImmutableMultiset.EntrySet,CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARENT_CLASS_DELETE,PARAMETERIZED_TYPE: ImmutableSet.Indexed,CLASS: com.google.common.collect.ImmutableMultiset.EntrySet,com.google.common.collect.ImmutableMultiset.EntrySet,CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: checkArgument((others.length <= (Integer.MAX_VALUE - 6)), the total number of elements must fit in an int"");""","METHOD: com.google.common.collect.ImmutableSet.of(E,E,E,E,E,E,E...)","com.google.common.collect.ImmutableSet.of(E,E,E,E,E,E,E...)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /**
   * Returns an immutable set containing the given elements, minus duplicates, in the order each was
   * first specified. That is, if multiple elements are {@linkplain Object#equals equal}, all except
   * the first are ignored.
   *
   * @since 3.0 (source-compatible since 2.0)
   */","METHOD: com.google.common.collect.ImmutableSet.of(E,E,E,E,E,E,E...)","com.google.common.collect.ImmutableSet.of(E,E,E,E,E,E,E...)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_CLASS,CLASS: com.google.common.collect.ImmutableSet.Indexed,CLASS: com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: checkArgument((others.length <= (Integer.MAX_VALUE - 12)), the total number of elements must fit in an int"");""","METHOD: com.google.common.collect.ImmutableList.of(E,E,E,E,E,E,E,E,E,E,E,E,E...)","com.google.common.collect.ImmutableList.of(E,E,E,E,E,E,E,E,E,E,E,E,E...)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /**
   * Returns an immutable list containing the given elements, in order.
   *
   * @throws NullPointerException if any element is null
   * @since 3.0 (source-compatible since 2.0)
   */","METHOD: com.google.common.collect.ImmutableList.of(E,E,E,E,E,E,E,E,E,E,E,E,E...)","com.google.common.collect.ImmutableList.of(E,E,E,E,E,E,E,E,E,E,E,E,E...)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: List<String> pieces = DOT_SPLITTER.limit(2).splitToList(domain);,"METHOD: com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)","com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: final String[] pieces = domain.split(DOT_REGEX, 2);","METHOD: com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)","com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"RETURN_STATEMENT: ((pieces.length == 2) && matchesType(desiredType, Optional.fromNullable(PublicSuffixPatterns.UNDER.get(pieces[1]))));","METHOD: com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)","com.google.common.net.InternetDomainName.matchesWildcardSuffixType(Optional<PublicSuffixType>,String)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_OBJECT_STATE,FIELD: com.google.common.net.InternetDomainName.DOT_REGEX : String,CLASS: com.google.common.net.InternetDomainName,com.google.common.net.InternetDomainName,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_PROVIDED_TOKEN_BINDING_ID : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_TOKEN_BINDING : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.X_DOWNLOAD_OPTIONS : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_REFERRED_TOKEN_BINDING_ID : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.L16_AUDIO : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: List<String> parts = IPV6_SPLITTER.splitToList(ipString);,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((parts.length < 3) || (parts.length > (IPV6_PART_COUNT + 1))),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,FOR_STATEMENT: (i < (parts.length - 1)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (parts[i].length() == 0),FOR_STATEMENT: (i < (parts.length - 1)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,ASSIGNMENT: partsLo = ((parts.length - skipIndex) - 1);,THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((parts[0].length() == 0) && ((-- partsHi) != 0)),THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((parts[(parts.length - 1)].length() == 0) && ((-- partsLo) != 0)),THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,ASSIGNMENT: partsHi = parts.length;,ELSE_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,METHOD_INVOCATION: rawBytes.putShort(parseHextet(parts[i]));,FOR_STATEMENT: (i < partsHi),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,METHOD_INVOCATION: rawBytes.putShort(parseHextet(parts[(parts.length - i)]));,FOR_STATEMENT: (i > 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV6_SPLITTER : Splitter,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: ImmutableLongArray.Builder builder = ImmutableLongArray.builder();,METHOD: com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: builder.add(doubleToRawLongBits(s.readDouble()));,FOR_STATEMENT: (i < length),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,LINE_COMMENT: // Read in array length and allocate array,METHOD: com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: set(i, s.readDouble());",FOR_STATEMENT: (i < length),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,LINE_COMMENT: // Read in all elements in the proper order.,METHOD: com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_ORDERING_CHANGE,FOR_STATEMENT: (i < length),METHOD: com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,ASSIGNMENT: this.longs = new AtomicLongArray(length);,METHOD: com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),com.google.common.util.concurrent.AtomicDoubleArray.readObject(java.io.ObjectInputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: checksumSupplier: Supplier<? extends Checksum>,PARAMETER: checksumSupplier,"com.google.common.hash.ChecksumHashFunction.ChecksumHashFunction(ImmutableSupplier<? extends Checksum>,int,String)",HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ATTRIBUTE_TYPE_CHANGE,PARAMETERIZED_TYPE: Supplier<? extends Checksum>,FIELD: com.google.common.hash.ChecksumHashFunction.checksumSupplier : Supplier<? extends Checksum>,com.google.common.hash.ChecksumHashFunction.checksumSupplier : ImmutableSupplier<? extends Checksum>,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(in);,METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"RETURN_STATEMENT: toByteArrayInternal(in, new ArrayDeque<byte[]>(TO_BYTE_ARRAY_DEQUE_SIZE), 0);",METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,"LINE_COMMENT: // Presize the ByteArrayOutputStream since we know how large it will need
    // to be, unless that value is less than the default ByteArrayOutputStream
    // size (32).",METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: ByteArrayOutputStream out = new ByteArrayOutputStream(Math.max(32, in.available()));",METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: copy(in, out);",METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: out.toByteArray();,METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream),com.google.common.io.ByteStreams.toByteArray(InputStream),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: new byte[BUFFER_SIZE];,METHOD: com.google.common.io.ByteStreams.createBuffer(),com.google.common.io.ByteStreams.createBuffer(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: new byte[8192];,METHOD: com.google.common.io.ByteStreams.createBuffer(),com.google.common.io.ByteStreams.createBuffer(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,SINGLE_TYPE: expectedSize: int,PARAMETER: expectedSize,"com.google.common.io.ByteStreams.toByteArray(InputStream,long)",HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: (expectedSize > MAX_ARRAY_LEN),"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Deque<byte[]> bufs = new ArrayDeque<byte[]>((TO_BYTE_ARRAY_DEQUE_SIZE + 2));,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: bufs.add(bytes);,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: bufs.add(new byte[]{(byte) b});,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"RETURN_STATEMENT: toByteArrayInternal(in, bufs, (bytes.length + 1));","METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"THROW_STATEMENT: new OutOfMemoryError((expectedSize +  bytes is too large to fit in a byte array""));""",THEN_STATEMENT: (expectedSize > MAX_ARRAY_LEN),"com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: FastByteArrayOutputStream out = new FastByteArrayOutputStream();,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: out.write(b);,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,LINE_COMMENT: // write the byte we read when testing for end of stream,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: copy(in, out);","METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: byte[] result = new byte[(bytes.length + out.size())];,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: System.arraycopy(bytes, 0, result, 0, bytes.length);","METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: out.writeTo(result, bytes.length);","METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: result;,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: byte[] bytes = new byte[expectedSize];,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int remaining = expectedSize;,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,int)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int off = (expectedSize - remaining);,WHILE_STATEMENT: (remaining > 0),"com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.io.ByteStreams.combineBuffers(Deque<byte[]>,int)",CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.io.ByteStreams.toByteArrayInternal(InputStream,Deque<byte[]>,int)",CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.io.ByteStreams.TO_BYTE_ARRAY_DEQUE_SIZE : int,CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.io.ByteStreams.MAX_ARRAY_LEN : int,CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.io.ByteStreams.BUFFER_SIZE : int,CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,REMOVED_CLASS,CLASS: com.google.common.io.ByteStreams.FastByteArrayOutputStream,CLASS: com.google.common.io.ByteStreams,com.google.common.io.ByteStreams,HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Optional<Long> size = sizeIfKnown();,BODY: ,com.google.common.io.ByteSource.read(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,RETURN_STATEMENT: ByteStreams.toByteArray(in);,BODY: ,com.google.common.io.ByteSource.read(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: (result < 0),FOREACH_STATEMENT: ByteSource source:sources,com.google.common.io.ByteSource.ConcatenatedByteSource.size(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_INSERT,"LINE_COMMENT: // Overflow (or one or more sources that returned a negative size, but all bets are off in
          // that case)
          // Can't represent anything higher, and realistically there probably isn't anything that
          // can actually be done anyway with the supposed 8+ exbibytes of data the source is
          // claiming to have if we get here, so just stop.",THEN_STATEMENT: (result < 0),com.google.common.io.ByteSource.ConcatenatedByteSource.size(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: Long.MAX_VALUE;,THEN_STATEMENT: (result < 0),com.google.common.io.ByteSource.ConcatenatedByteSource.size(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: (! sizeIfKnown.isPresent()),FOREACH_STATEMENT: ByteSource source:sources,com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,IF_STATEMENT: (result < 0),FOREACH_STATEMENT: ByteSource source:sources,com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_INSERT,"LINE_COMMENT: // Infinite Iterables can cause problems here. Of course, it's true that most of the other
        // methods on this class also have potential problems with infinite  Iterables. But unlike
        // those, this method can cause issues even if the user is dealing with a (finite) slice()
        // of this source, since the slice's sizeIfKnown() method needs to know the size of the
        // underlying source to know what its size actually is.",THEN_STATEMENT: (! sizeIfKnown.isPresent()),com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: Optional.absent();,THEN_STATEMENT: (! sizeIfKnown.isPresent()),com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_INSERT,"LINE_COMMENT: // Overflow (or one or more sources that returned a negative size, but all bets are off in
          // that case)
          // Can't represent anything higher, and realistically there probably isn't anything that
          // can actually be done anyway with the supposed 8+ exbibytes of data the source is
          // claiming to have if we get here, so just stop.",THEN_STATEMENT: (result < 0),com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: Optional.of(Long.MAX_VALUE);,THEN_STATEMENT: (result < 0),com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_PARENT_CHANGE,IF_STATEMENT: (! sizeIfKnown.isPresent()),FOREACH_STATEMENT: ByteSource source:sources,com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (! sizeIfKnown.isPresent()),METHOD: com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),com.google.common.io.ByteSource.ConcatenatedByteSource.sizeIfKnown(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: checkArgument((rest.length <= (Integer.MAX_VALUE - 1)), the total number of elements must fit in an int"");""","METHOD: com.google.common.primitives.ImmutableDoubleArray.of(double,double...)","com.google.common.primitives.ImmutableDoubleArray.of(double,double...)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /** Returns an immutable array containing the given values, in order. */","METHOD: com.google.common.primitives.ImmutableDoubleArray.of(double,double...)","com.google.common.primitives.ImmutableDoubleArray.of(double,double...)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: checkArgument((rest.length <= (Integer.MAX_VALUE - 1)), the total number of elements must fit in an int"");""","METHOD: com.google.common.primitives.ImmutableLongArray.of(long,long...)","com.google.common.primitives.ImmutableLongArray.of(long,long...)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /** Returns an immutable array containing the given values, in order. */","METHOD: com.google.common.primitives.ImmutableLongArray.of(long,long...)","com.google.common.primitives.ImmutableLongArray.of(long,long...)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"METHOD_INVOCATION: checkArgument((rest.length <= (Integer.MAX_VALUE - 1)), the total number of elements must fit in an int"");""","METHOD: com.google.common.primitives.ImmutableIntArray.of(int,int...)","com.google.common.primitives.ImmutableIntArray.of(int,int...)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /** Returns an immutable array containing the given values, in order. */","METHOD: com.google.common.primitives.ImmutableIntArray.of(int,int...)","com.google.common.primitives.ImmutableIntArray.of(int,int...)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /**
 * Static methods pertaining to ASCII characters (those in the range of values {@code 0x00} through
 * {@code 0x7F}), and to strings containing such characters.
 *
 * <p>ASCII utilities also exist in other classes of this package:
 *
 * <ul>
 *   <!-- TODO(kevinb): how can we make this not produce a warning when building gwt javadoc? -->
 *   <li>{@link Charsets#US_ASCII} specifies the {@code Charset} of ASCII characters.
 *   <li>{@link CharMatcher#ascii} matches ASCII characters and provides text processing methods
 *       which operate only on the ASCII characters of a string.
 * </ul>
 *
 * @author Craig Berry
 * @author Gregory Kick
 * @since 7.0
 */",CLASS: com.google.common.base.Ascii,com.google.common.base.Ascii,NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,ASSIGNMENT: chars[i] = (char) (c ^ 0x20);,THEN_STATEMENT: isUpperCase(c),com.google.common.base.Ascii.toLowerCase(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,RETURN_STATEMENT: (char) ((c | 0x20) - 'a');,METHOD: com.google.common.base.Ascii.getAlphaIndex(char),com.google.common.base.Ascii.getAlphaIndex(char),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,RETURN_STATEMENT: (isLowerCase(c) ? (char) (c & 0x5f) : c);,METHOD: com.google.common.base.Ascii.toUpperCase(char),com.google.common.base.Ascii.toUpperCase(char),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,RETURN_STATEMENT: (isUpperCase(c) ? (char) (c ^ 0x20) : c);,METHOD: com.google.common.base.Ascii.toLowerCase(char),com.google.common.base.Ascii.toLowerCase(char),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,ASSIGNMENT: chars[i] = (char) (c & 0x5f);,THEN_STATEMENT: isLowerCase(c),com.google.common.base.Ascii.toUpperCase(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.base.Ascii.CASE_MASK : char,CLASS: com.google.common.base.Ascii,com.google.common.base.Ascii,LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: Platform.nullToEmpty(string);,METHOD: com.google.common.base.Strings.nullToEmpty(String),com.google.common.base.Strings.nullToEmpty(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"RETURN_STATEMENT: ((string == null) ? "" : string);",METHOD: com.google.common.base.Strings.nullToEmpty(String),com.google.common.base.Strings.nullToEmpty(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: Platform.emptyToNull(string);,METHOD: com.google.common.base.Strings.emptyToNull(String),com.google.common.base.Strings.emptyToNull(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: (isNullOrEmpty(string) ? null : string);,METHOD: com.google.common.base.Strings.emptyToNull(String),com.google.common.base.Strings.emptyToNull(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"ASSIGNMENT: idx += doParseTrieToBuilder(Lists.<CharSequence>newLinkedList(), encoded.subSequence(idx, encodedLen), builder);",WHILE_STATEMENT: (idx < encodedLen),com.google.thirdparty.publicsuffix.TrieParser.parseTrie(CharSequence),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_INSERT,PARAMETER: start,PARAMETERS: ,"com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",HIGH
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,DOC_UPDATE,"JAVADOC: /**
   * Parses a trie node and returns the number of characters consumed.
   *
   * @param stack The prefixes that precede the characters represented by this node. Each entry of
   *     the stack is in reverse order.
   * @param encoded The serialized trie.
   * @param builder A map builder to which all entries will be added.
   * @return The number of characters consumed from {@code encoded}.
   */","METHOD: com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,ImmutableMap.Builder<String, PublicSuffixType>)","com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,RETURN_STATEMENT: (idx - start);,"METHOD: com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,ImmutableMap.Builder<String, PublicSuffixType>)","com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: idx;,"METHOD: com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,ImmutableMap.Builder<String, PublicSuffixType>)","com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int idx = 0;,"METHOD: com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,ImmutableMap.Builder<String, PublicSuffixType>)","com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: stack.add(0, reverse(encoded.subSequence(0, idx)));","METHOD: com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,ImmutableMap.Builder<String, PublicSuffixType>)","com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"ASSIGNMENT: idx += doParseTrieToBuilder(stack, encoded.subSequence(idx, encodedLen), builder);",WHILE_STATEMENT: (idx < encodedLen),"com.google.thirdparty.publicsuffix.TrieParser.doParseTrieToBuilder(List<CharSequence>,CharSequence,int,ImmutableMap.Builder<String, PublicSuffixType>)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"RETURN_STATEMENT: ImmutableMultiset.copyOf(Multiset_CustomFieldSerializerBase.populate(reader, LinkedHashMultiset.create()));",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: List<Object> elements = Lists.newArrayList();,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,"METHOD_INVOCATION: Collection_CustomFieldSerializerBase.deserialize(reader, elements);",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,"BLOCK_COMMENT: /*
     * For this custom field serializer to be invoked, the set must have been
     * RegularImmutableMultiset before it's serialized. Since
     * RegularImmutableMultiset always have one or more elements,
     * ImmutableMultiset.copyOf always return a RegularImmutableMultiset back.
     */",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,RETURN_STATEMENT: (RegularImmutableMultiset<Object>) ImmutableMultiset.copyOf(elements);,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,RETURN_TYPE_CHANGE,PARAMETERIZED_TYPE: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader): RegularImmutableMultiset<Object>,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: RegularImmutableMultiset<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.deserialize(SerializationStreamReader,ImmutableMultiset<?>)",CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: RegularImmutableMultiset<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)",CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,"METHOD_INVOCATION: Collection_CustomFieldSerializerBase.serialize(writer, instance);","METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableMultiset<?>)","com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)",LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,COMMENT_DELETE,"BLOCK_COMMENT: /*
     * For this custom field serializer to be invoked, the set must have been
     * RegularImmutableSet before it's serialized.  Since RegularImmutableSet
     * always have two or more elements, ImmutableSet.copyOf always return
     * a RegularImmutableSet back.
     */",METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),NONE
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_UPDATE,RETURN_STATEMENT: (RegularImmutableSet<Object>) ImmutableSet.copyOf(elements);,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,RETURN_TYPE_CHANGE,PARAMETERIZED_TYPE: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader): RegularImmutableSet<Object>,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: RegularImmutableSet<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.deserialize(SerializationStreamReader,ImmutableSet<?>)",CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: RegularImmutableSet<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)",CRUCIAL
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: rootDir.getFileSystem().close();,METHOD: com.google.common.io.MoreFilesFileTraverserTest.tearDown(),com.google.common.io.MoreFilesFileTraverserTest.tearDown(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: MoreFiles.deleteRecursively(rootDir);,METHOD: com.google.common.io.MoreFilesFileTraverserTest.tearDown(),com.google.common.io.MoreFilesFileTraverserTest.tearDown(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: MoreFiles.touch(file);,METHOD: com.google.common.io.MoreFilesFileTraverserTest.newFile(String),com.google.common.io.MoreFilesFileTraverserTest.newFile(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: file.toFile().createNewFile();,METHOD: com.google.common.io.MoreFilesFileTraverserTest.newFile(String),com.google.common.io.MoreFilesFileTraverserTest.newFile(String),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,"ASSIGNMENT: rootDir = Jimfs.newFileSystem(Configuration.unix()).getPath(/tmp"");""",METHOD: com.google.common.io.MoreFilesFileTraverserTest.setUp(),com.google.common.io.MoreFilesFileTraverserTest.setUp(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: Files.createDirectory(rootDir);,METHOD: com.google.common.io.MoreFilesFileTraverserTest.setUp(),com.google.common.io.MoreFilesFileTraverserTest.setUp(),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,ASSIGNMENT: rootDir = Files.createTempDir().toPath();,METHOD: com.google.common.io.MoreFilesFileTraverserTest.setUp(),com.google.common.io.MoreFilesFileTraverserTest.setUp(),MEDIUM
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_INSERT,METHOD_INVOCATION: Files.createDirectory(dir);,METHOD: com.google.common.io.MoreFilesFileTraverserTest.newDir(String),com.google.common.io.MoreFilesFileTraverserTest.newDir(String),LOW
2,41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7,STATEMENT_DELETE,METHOD_INVOCATION: dir.toFile().mkdir();,METHOD: com.google.common.io.MoreFilesFileTraverserTest.newDir(String),com.google.common.io.MoreFilesFileTraverserTest.newDir(String),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.testers.MapEntrySetTester.getSetValueWithNullValuesPresentMethod(),CLASS: com.google.common.collect.testing.testers.MapEntrySetTester,com.google.common.collect.testing.testers.MapEntrySetTester,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.testers.MapEntrySetTester.testSetValueWithNullValuesPresent(),CLASS: com.google.common.collect.testing.testers.MapEntrySetTester,com.google.common.collect.testing.testers.MapEntrySetTester,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.testers.MapEntrySetTester.testSetValueWithNullValuesAbsent(),CLASS: com.google.common.collect.testing.testers.MapEntrySetTester,com.google.common.collect.testing.testers.MapEntrySetTester,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.testers.MapEntrySetTester.getSetValueWithNullValuesAbsentMethod(),CLASS: com.google.common.collect.testing.testers.MapEntrySetTester,com.google.common.collect.testing.testers.MapEntrySetTester,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Platform.JdkPatternCompiler.isPcreLike(),CLASS: com.google.common.base.Platform.JdkPatternCompiler,com.google.common.base.Platform.JdkPatternCompiler,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Platform.patternCompilerIsPcreLike(),CLASS: com.google.common.base.Platform,com.google.common.base.Platform,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.Platform.usingJdkPatternCompiler(),CLASS: com.google.common.base.Platform,com.google.common.base.Platform,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,"FOREACH_STATEMENT: Entry<Foo, Integer> entry:map.entrySet()",METHOD: com.google.common.collect.WellBehavedMapTest.testEntry_setValue(),com.google.common.collect.WellBehavedMapTest.testEntry_setValue(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Entry<Foo, Integer> entry1 = Iterables.getOnlyElement(map.entrySet());",METHOD: com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Entry<Foo, Integer> entry2 = Iterables.getOnlyElement(map.entrySet());",METHOD: com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Set<Entry<Foo, Integer>> entrySet = map.entrySet();",METHOD: com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),com.google.common.collect.WellBehavedMapTest.testEntriesAreMutableAndConsistent(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Set<Entry<Foo, Integer>> entrySet = map.entrySet();",METHOD: com.google.common.collect.WellBehavedMapTest.testEntrySet_remove(),com.google.common.collect.WellBehavedMapTest.testEntrySet_remove(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Entry<Foo, Integer> entry = Maps.immutableEntry(Foo.Y, 2);",METHOD: com.google.common.collect.WellBehavedMapTest.testEntrySet_remove(),com.google.common.collect.WellBehavedMapTest.testEntrySet_remove(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RangeTest.testGap_overlapping(),CLASS: com.google.common.collect.RangeTest,com.google.common.collect.RangeTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RangeTest.testGap_general(),CLASS: com.google.common.collect.RangeTest,com.google.common.collect.RangeTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RangeTest.testGap_connectedAdjacentYieldsEmpty(),CLASS: com.google.common.collect.RangeTest,com.google.common.collect.RangeTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasMessage(msg);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.net.PercentEscaperTest.testBadArguments_plusforspace(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasMessage(msg);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.net.PercentEscaperTest.testBadArguments_badchars(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hpNoPort4 = HostAndPort.fromHost([foo::123]"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hpNoPort5 = HostAndPort.fromHost(foo::123"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hp1 = HostAndPort.fromString(foo::123"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hp2 = HostAndPort.fromString(foo::123"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hp3 = HostAndPort.fromString([foo::123]"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: HostAndPort hp5 = HostAndPort.fromString([foo::123]:80"");""",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: new EqualsTester().addEqualityGroup(hp1, hp2).addEqualityGroup(hp3).addEqualityGroup(hp4, hp5).testEquals();",METHOD: com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),com.google.common.net.HostAndPortTest.testHashCodeAndEquals(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.cache.CacheBuilderTest.testMaximumSize_largerThanInt(),CLASS: com.google.common.cache.CacheBuilderTest,com.google.common.cache.CacheBuilderTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: FluentFuture<String> f = SettableFuture.create();,METHOD: com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuture(),com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuture(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: FluentFuture<?> f = SettableFuture.create().withTimeout(0, SECONDS, executor);",BODY: ,com.google.common.util.concurrent.FluentFutureTest.testWithTimeout(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getCause()).isInstanceOf(TimeoutException.class);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.FluentFutureTest.testWithTimeout(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuturePassingAsNonFluent(),CLASS: com.google.common.util.concurrent.FluentFutureTest,com.google.common.util.concurrent.FluentFutureTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(e, executionException.getCause());",CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.TrustedListenableFutureTaskTest.testFailed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertSame(expected, e.getCause());",CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.CallablesTest.testAsAsyncCallable_exception(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isEqualTo(failureCause);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.FuturesGetDoneTest.testFailed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getCause()).isSameAs(expectedException);,CATCH_CLAUSE: ExecutionException,"com.google.common.util.concurrent.AbstractAbstractFutureTest.assertFailed(AbstractFuture<Integer>,Throwable)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARENT_CLASS_INSERT,PARAMETERIZED_TYPE: AbstractFuture<V>,CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARENT_INTERFACE_DELETE,PARAMETERIZED_TYPE: ListenableFuture<V>,SUPER_INTERFACE_TYPES: ,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: UncheckedThrowingFuture<V> future = new UncheckedThrowingFuture<V>();,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: future.complete(checkNotNull(e));,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: future;,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: new UncheckedThrowingFuture<V>(e);,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingRuntimeException(RuntimeException),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,TRY_STATEMENT: ,"METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)","com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"METHOD_INVOCATION: super.get(timeout, unit);",BODY: ,"com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,"com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: rethrow(e);,CATCH_CLAUSE: ExecutionException,"com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(unit);,"METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)","com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: throwOnGet();,"METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)","com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,THROW_STATEMENT: new AssertionError();,"METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)","com.google.common.util.concurrent.UncheckedThrowingFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,TRY_STATEMENT: ,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(),com.google.common.util.concurrent.UncheckedThrowingFuture.get(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: super.get();,BODY: ,com.google.common.util.concurrent.UncheckedThrowingFuture.get(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,com.google.common.util.concurrent.UncheckedThrowingFuture.get(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: rethrow(e);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.UncheckedThrowingFuture.get(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: throwOnGet();,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.get(),com.google.common.util.concurrent.UncheckedThrowingFuture.get(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: UncheckedThrowingFuture<V> future = new UncheckedThrowingFuture<V>();,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: future.complete(checkNotNull(error));,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: future;,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: new UncheckedThrowingFuture<V>(error);,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.throwingError(Error),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: private,MODIFIERS: ,com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARAMETER_DELETE,PARAMETER: error,PARAMETERS: ,com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,ASSIGNMENT: this.error = checkNotNull(error);,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,ASSIGNMENT: this.runtime = null;,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(Error),com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.complete(RuntimeException),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.incomplete(),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.rethrow(ExecutionException),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.complete(Error),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.isCancelled(),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.throwOnGet(),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.UncheckedThrowingFuture(RuntimeException),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.isDone(),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.cancel(boolean),CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.UncheckedThrowingFuture.addListener(Runnable,Executor)",CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.util.concurrent.UncheckedThrowingFuture.runtime : RuntimeException,CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.util.concurrent.UncheckedThrowingFuture.error : Error,CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture.WrapperException,CLASS: com.google.common.util.concurrent.UncheckedThrowingFuture,com.google.common.util.concurrent.UncheckedThrowingFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).hasMessage(expectedMessage);,THEN_STATEMENT: (expectedMessage != null),"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasMessage(expectedMessage);,THEN_STATEMENT: (expectedMessage != null),"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: ArithmeticException,CATCH_CLAUSES: ,com.google.common.math.MathPreconditionsTest.testCheckInRange_failure(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"METHOD_INVOCATION: assertThat(expected).hasMessageThat().contains(1.0"");""",CATCH_CLAUSE: ArithmeticException,com.google.common.math.MathPreconditionsTest.testCheckInRange_failure(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"METHOD_INVOCATION: assertThat(expected).hasMessageThat().contains(UP"");""",CATCH_CLAUSE: ArithmeticException,com.google.common.math.MathPreconditionsTest.testCheckInRange_failure(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: ArithmeticException,CATCH_CLAUSES: ,com.google.common.math.MathPreconditionsTest.testCheckInRange_failure(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: MathPreconditions.checkInRange(false);,BODY: ,com.google.common.math.MathPreconditionsTest.testCheckInRange_failure(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: MathPreconditions.checkInRange(true);,METHOD: com.google.common.math.MathPreconditionsTest.testCheckInRange_success(),com.google.common.math.MathPreconditionsTest.testCheckInRange_success(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(input).matches(Doubles.FLOATING_POINT_PATTERN);,"METHOD: com.google.common.primitives.DoublesTest.checkTryParse(double,String)","com.google.common.primitives.DoublesTest.checkTryParse(double,String)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(badInput).doesNotMatch(Doubles.FLOATING_POINT_PATTERN);,FOREACH_STATEMENT: String badInput:BAD_TRY_PARSE_INPUTS,com.google.common.primitives.DoublesTest.testTryParseFailures(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected.getCause()).hasMessage(two"");""",CATCH_CLAUSE: ClusterException,com.google.common.testing.TearDownStackTest.testThrowingTearDown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (! Platform.usingJdkPatternCompiler()),METHOD: com.google.common.base.SplitterTest.testPatternSplitLookBehind(),com.google.common.base.SplitterTest.testPatternSplitLookBehind(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (! Platform.usingJdkPatternCompiler()),METHOD: com.google.common.base.SplitterTest.testSplitterIterableIsLazy_pattern(),com.google.common.base.SplitterTest.testSplitterIterableIsLazy_pattern(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.SplitterTest.testMapSplitter_varyingTrimLevels(),CLASS: com.google.common.base.SplitterTest,com.google.common.base.SplitterTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.SplitterTest.testLimit1Separator(),CLASS: com.google.common.base.SplitterTest,com.google.common.base.SplitterTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.StringsTest.testLenientFormat(),CLASS: com.google.common.base.StringsTest,com.google.common.base.StringsTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.StringsTest.testLenientFormat_badArgumentToString_gwtFriendly(),CLASS: com.google.common.base.StringsTest,com.google.common.base.StringsTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.StringsTest.testLenientFormat_badArgumentToString(),CLASS: com.google.common.base.StringsTest,com.google.common.base.StringsTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.base.StringsTest.ThrowsOnToString,CLASS: com.google.common.base.StringsTest,com.google.common.base.StringsTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(message"");""",CATCH_CLAUSE: VerifyException,com.google.common.base.VerifyTest.testVerify_simpleMessage_failure(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(e).hasMessage(I ate 5 pies."");""",METHOD: com.google.common.base.VerifyTest.checkMessage(Exception),com.google.common.base.VerifyTest.checkMessage(Exception),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isInstanceOf(SomeCheckedException.class);,CATCH_CLAUSE: RuntimeException,com.google.common.base.ThrowablesTest.testPropagate_NoneDeclared_CheckedThrown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isInstanceOf(SomeOtherCheckedException.class);,CATCH_CLAUSE: RuntimeException,com.google.common.base.ThrowablesTest.testPropagateIfInstanceOf_UndeclaredThrown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(thrown.getCause()).isSameAs(cause);,METHOD: com.google.common.base.ThrowablesTest.testGetCauseAs(),com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isSameAs(thrown);,CATCH_CLAUSE: ClassCastException,com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Integer javaVersion = Ints.tryParse(JAVA_SPECIFICATION_VERSION.value());,METHOD: com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_UPDATE,LINE_COMMENT: // TODO(b/64442212): Remove this guard once lazyStackTrace() works in Java 9.,METHOD: com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,"IF_STATEMENT: JAVA_SPECIFICATION_VERSION.value().equals(9"")""",METHOD: com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),com.google.common.base.ThrowablesTest.testLazyStackTraceWorksInProd(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,RETURN_STATEMENT: asList(MapEntrySetTester.getSetValueMethod());,METHOD: com.google.common.collect.testing.TestsForMapsInJavaUtil.suppressForConcurrentSkipListMap(),com.google.common.collect.testing.TestsForMapsInJavaUtil.suppressForConcurrentSkipListMap(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isInstanceOf(IntentionalException.class);,CATCH_CLAUSE: InvocationTargetException,com.google.common.eventbus.SubscriberTest.testInvokeSubscriberMethod_exceptionWrapping(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected.getCause()).isInstanceOf(IllegalArgumentException.class);,CATCH_CLAUSE: ParseException,com.google.common.net.HostSpecifierTest.assertBad(String),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: UncheckedExecutionException,CATCH_CLAUSES: ,com.google.common.cache.NullCacheTest.testGet_runtimeException(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(uee).hasCauseThat().isSameAs(e);,CATCH_CLAUSE: UncheckedExecutionException,com.google.common.cache.NullCacheTest.testGet_runtimeException(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertSame(e, uee.getCause());",CATCH_CLAUSE: UncheckedExecutionException,com.google.common.cache.NullCacheTest.testGet_runtimeException(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: UncheckedExecutionException,CATCH_CLAUSES: ,com.google.common.cache.NullCacheTest.testGet_runtimeException(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: keys.toArray(null);,BODY: ,com.google.common.cache.EmptyCachesTest.testKeySet_nullToArray(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: entries.toArray(null);,BODY: ,com.google.common.cache.EmptyCachesTest.testEntrySet_nullToArray(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: values.toArray(null);,BODY: ,com.google.common.cache.EmptyCachesTest.testValues_nullToArray(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getCause()).hasMessage(message);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.ListenableFutureTester.testFailedFuture(String),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(e).hasMessage(Timed out waiting for Foo [STARTING] to reach the RUNNING state."");""",CATCH_CLAUSE: TimeoutException,com.google.common.util.concurrent.AbstractScheduledServiceTest.testTimeout(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(service.failureCause(), expected.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnRunAndThenAgainOnShutDown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected.getCause()).hasMessage(kaboom!"");""",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnRunAndThenAgainOnShutDown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(service.failureCause()).hasMessage(kaboom!"");""",METHOD: com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnShutDown(),com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnShutDown(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(service.failureCause()).hasMessage(kaboom!"");""",METHOD: com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnStartUp(),com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnStartUp(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected.getCause()).hasMessage(kaboom!"");""",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnStartUp(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(e).hasMessage(Timed out waiting for Foo [STARTING] to reach the RUNNING state."");""",CATCH_CLAUSE: TimeoutException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testTimeout(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(service.failureCause(), expected.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnRun(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected.getCause()).hasMessage(kaboom!"");""",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractExecutionThreadServiceTest.testServiceThrowOnRun(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(service.exception, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testThrowingServiceStopAndWait_runThrowing(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(e).hasCauseThat().isEqualTo(EXCEPTION);,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStopAndWait_runFailing(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(EXCEPTION, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStopAndWait_runFailing(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(service.failureCause()).hasMessage(1"");""",METHOD: com.google.common.util.concurrent.AbstractServiceTest.testManualServiceFailureIdempotence(),com.google.common.util.concurrent.AbstractServiceTest.testManualServiceFailureIdempotence(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(e.getCause()).hasMessage(1"");""",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testManualServiceFailureIdempotence(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(service.exception, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testThrowingServiceStartAndWait(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(e).hasCauseThat().isEqualTo(EXCEPTION);,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailureCause_throwsIfNotFailed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(EXCEPTION, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailureCause_throwsIfNotFailed(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(EXCEPTION, exception.get().getCause());",METHOD: com.google.common.util.concurrent.AbstractServiceTest.testAwaitTerminated_FailedService(),com.google.common.util.concurrent.AbstractServiceTest.testAwaitTerminated_FailedService(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertNull(expected.getCause());,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.stopping(State),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: IllegalStateException,CATCH_CLAUSES: ,"com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.failed(State,Throwable)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(e).hasCauseThat().isEqualTo(failure);,CATCH_CLAUSE: IllegalStateException,"com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.failed(State,Throwable)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(failure, e.getCause());",CATCH_CLAUSE: IllegalStateException,"com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.failed(State,Throwable)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: IllegalStateException,CATCH_CLAUSES: ,"com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.failed(State,Throwable)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertNull(expected.getCause());,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.RecordingListener.terminated(State),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(e).hasCauseThat().isEqualTo(EXCEPTION);,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStopAndWait_stopFailing(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(EXCEPTION, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStopAndWait_stopFailing(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(service.exception, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testThrowingServiceStopAndWait_stopThrowing(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(e).hasCauseThat().isEqualTo(EXCEPTION);,CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStartAndWait(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(EXCEPTION, e.getCause());",CATCH_CLAUSE: IllegalStateException,com.google.common.util.concurrent.AbstractServiceTest.testFailingServiceStartAndWait(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testNotifyStoppedAfterFailure(),CLASS: com.google.common.util.concurrent.ServiceManagerTest,com.google.common.util.concurrent.ServiceManagerTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testDoCancelStart(),CLASS: com.google.common.util.concurrent.ServiceManagerTest,com.google.common.util.concurrent.ServiceManagerTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(e).hasMessage(Timed out waiting for Foo [STARTING] to reach the RUNNING state."");""",CATCH_CLAUSE: TimeoutException,com.google.common.util.concurrent.AbstractIdleServiceTest.testTimeout(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertSame(exception, e.getCause());",CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.testStart_failed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertSame(exception, e.getCause());",CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.FunctionalTest.testStart_failed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertSame(exception, e.getCause());",CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.FunctionalTest.testStop_failed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertSame(exception, e.getCause());",CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.testStop_failed(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,SWITCH_CASE: EXCEPTION_DATA,SWITCH_STATEMENT: input,com.google.common.util.concurrent.FuturesTransformAsyncTest.ChainingFunction.apply(Integer),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,THROW_STATEMENT: EXCEPTION;,SWITCH_STATEMENT: input,com.google.common.util.concurrent.FuturesTransformAsyncTest.ChainingFunction.apply(Integer),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,SWITCH_CASE: default,SWITCH_STATEMENT: input,com.google.common.util.concurrent.FuturesTransformAsyncTest.ChainingFunction.apply(Integer),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,THROW_STATEMENT: new UndeclaredThrowableException(EXCEPTION);,SWITCH_STATEMENT: input,com.google.common.util.concurrent.FuturesTransformAsyncTest.ChainingFunction.apply(Integer),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,com.google.common.util.concurrent.SettableFutureTest.testSetException(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(ee).hasCauseThat().isSameAs(e);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.SettableFutureTest.testSetException(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: assertSame(e, ee.getCause());",CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.SettableFutureTest.testSetException(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,com.google.common.util.concurrent.SettableFutureTest.testSetException(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (input.intValue() == VALID_INPUT_DATA),IF_STATEMENT: (input.intValue() == VALID_INPUT_DATA),com.google.common.util.concurrent.FuturesTransformTest.ComposeFunction.apply(Integer),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,THROW_STATEMENT: WRAPPED_EXCEPTION;,ELSE_STATEMENT: (input.intValue() == VALID_INPUT_DATA),com.google.common.util.concurrent.FuturesTransformTest.ComposeFunction.apply(Integer),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,THROW_STATEMENT: new UndeclaredThrowableException(EXCEPTION);,ELSE_STATEMENT: (input.intValue() == VALID_INPUT_DATA),com.google.common.util.concurrent.FuturesTransformTest.ComposeFunction.apply(Integer),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (input.intValue() == VALID_INPUT_DATA),IF_STATEMENT: (input.intValue() == VALID_INPUT_DATA),com.google.common.util.concurrent.FuturesTransformTest.ComposeFunction.apply(Integer),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: listener.assertException(EXCEPTION);,METHOD: com.google.common.util.concurrent.FuturesTransformTest.testFutureGetThrowsFunctionException(),com.google.common.util.concurrent.FuturesTransformTest.testFutureGetThrowsFunctionException(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.FuturesTransformTest.WRAPPED_EXCEPTION : UndeclaredThrowableException,CLASS: com.google.common.util.concurrent.FuturesTransformTest,com.google.common.util.concurrent.FuturesTransformTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARAMETER_INSERT,PARAMETER: disallowedClassNames,PARAMETERS: ,com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.getClassLoader(Set<String>),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARAMETER_DELETE,PARAMETER: blacklist,PARAMETERS: ,com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.getClassLoader(Set<String>),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_UPDATE,"JAVADOC: /**
   * This classloader blacklists sun.misc.Unsafe and AtomicReferenceFieldUpdater which will prevent
   * us from selecting our {@code SafeAtomicHelper} strategy.
   */",FIELD: com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.NO_ATOMIC_REFERENCE_FIELD_UPDATER : ClassLoader,com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.NO_ATOMIC_REFERENCE_FIELD_UPDATER : ClassLoader,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_UPDATE,"JAVADOC: /**
   * This classloader blacklists sun.misc.Unsafe which will prevent us from selecting our preferred
   * strategy {@code UnsafeAtomicHelper}.
   */",FIELD: com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.NO_UNSAFE : ClassLoader,com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest.NO_UNSAFE : ClassLoader,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARAMETER_RENAMING,PARAMETER: blacklist,PARAMETERS: ,com.google.common.util.concurrent.AggregateFutureStateFallbackAtomicHelperTest.getClassLoader(Set<String>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.hash.Murmur3Hash32Test.testKnownUtf8StringInputs(),CLASS: com.google.common.hash.Murmur3Hash32Test,com.google.common.hash.Murmur3Hash32Test,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(readLine is not supported"");""",CATCH_CLAUSE: UnsupportedOperationException,com.google.common.io.LittleEndianDataInputStreamTest.testReadLine(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ex.getCause()).isInstanceOf(EOFException.class);,CATCH_CLAUSE: IllegalStateException,com.google.common.io.ByteStreamsTest.testNewDataInput_readFullyAndThenSome(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(Mark not supported"");""",CATCH_CLAUSE: IOException,com.google.common.io.ByteStreamsTest.testLimit_markNotSupported(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ex.getCause()).isInstanceOf(EOFException.class);,CATCH_CLAUSE: IllegalStateException,com.google.common.io.ByteStreamsTest.testNewDataInput_readByte(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ex.getCause()).isInstanceOf(EOFException.class);,CATCH_CLAUSE: IllegalStateException,com.google.common.io.ByteStreamsTest.testNewDataInput_readUnsignedByte(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(Mark not set"");""",CATCH_CLAUSE: IOException,com.google.common.io.ByteStreamsTest.testLimit_markNotSet(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(Mark not supported"");""",CATCH_CLAUSE: IOException,com.google.common.io.CountingInputStreamTest.testMarkNotSupported(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(expected).hasMessage(Mark not set"");""",CATCH_CLAUSE: IOException,com.google.common.io.CountingInputStreamTest.testMarkNotSet(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableNetworkTest.immutableNetworkBuilder_copiesNetworkBuilder(),CLASS: com.google.common.graph.ImmutableNetworkTest,com.google.common.graph.ImmutableNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableNetworkTest.immutableNetworkBuilder_addNode(),CLASS: com.google.common.graph.ImmutableNetworkTest,com.google.common.graph.ImmutableNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableNetworkTest.immutableNetworkBuilder_putEdgeFromNodes(),CLASS: com.google.common.graph.ImmutableNetworkTest,com.google.common.graph.ImmutableNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableNetworkTest.immutableNetworkBuilder_appliesNetworkBuilderConfig(),CLASS: com.google.common.graph.ImmutableNetworkTest,com.google.common.graph.ImmutableNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableNetworkTest.immutableNetworkBuilder_putEdgeFromEndpointPair(),CLASS: com.google.common.graph.ImmutableNetworkTest,com.google.common.graph.ImmutableNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N1, N2, E12);",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edges_containsOrderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edgesConnecting_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edgeConnectingOrNull_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.graph.AbstractUndirectedNetworkTest.ENDPOINTS_N2N1 : EndpointPair<Integer>,CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.graph.AbstractUndirectedNetworkTest.ENDPOINTS_N1N2 : EndpointPair<Integer>,CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_directed_correct(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_directed_backwards(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_undirected_mismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_directed_mismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.removeEdge_directed_orderMismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_undirected_backwards(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_directed_mismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_undirected_correct(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.putEdgeValue_directed_orderMismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.removeEdge_undirected_orderMismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_directed_correct(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_undirected_backwards(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_directed_backwards(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.hasEdgeConnecting_undirected_mismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.edgeValueOrDefault_undirected_correct(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.putEdgeValue_undirected_orderMismatch(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,METHOD_RENAMING,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // unordered endpoints not OK for directed graph (undefined behavior),METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // wrong order,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // edge not present,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_DELETE,"LINE_COMMENT: // equal to unordered(N1, N2)",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_DELETE,LINE_COMMENT: // graph not directed,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_ORDERING_CHANGE,"METHOD_INVOCATION: assertThat(edges).doesNotContain(EndpointPair.unordered(N2, N2));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: MutableGraph<Integer> undirectedGraph = GraphBuilder.undirected().allowsSelfLoops(true).build();,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: undirectedGraph.putEdge(N1, N1);",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: undirectedGraph.putEdge(N1, N2);",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: Set<EndpointPair<Integer>> edges = undirectedGraph.edges();,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).contains(EndpointPair.unordered(N1, N1));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).contains(EndpointPair.unordered(N1, N2));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).doesNotContain(EndpointPair.unordered(N2, N2));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).contains(EndpointPair.unordered(N2, N1));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).doesNotContain(EndpointPair.ordered(N1, N2));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(edges).doesNotContain(EndpointPair.unordered(N3, N4));",METHOD: com.google.common.graph.EndpointPairTest.endpointPair_containment(),com.google.common.graph.EndpointPairTest.endpointPair_directed_contains(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.EndpointPairTest.endpointPair_undirected_contains(),CLASS: com.google.common.graph.EndpointPairTest,com.google.common.graph.EndpointPairTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getMessage()).contains(ERROR_REUSE_EDGE);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getMessage()).contains(ERROR_PARALLEL_EDGE);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edges_containsOrderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edgesConnecting_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edgeConnectingOrNull_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_UPDATE,JAVADOC: /** Tests for {@link ImmutableGraph} and {@link ImmutableValueGraph} . */,CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_addNode(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_putEdgeFromNodes(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_appliesGraphBuilderConfig(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_copiesGraphBuilder(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_putEdgeFromEndpointPair(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.copyOfImmutableValueGraph_optimized(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableValueGraph(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,METHOD_RENAMING,METHOD: com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingEdgeBetweenSameNodes(),METHOD: com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingEdgeBetweenSameNodes(),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: putEdge(N1, N2);",METHOD: com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingEdgeBetweenSameNodes(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,METHOD_RENAMING,METHOD: com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingNodes(),METHOD: com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingNodes(),com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingNodes(),HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_mismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.removeEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_backwards(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_correct(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.hasEdgeConnecting_mismatch(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.hasEdgeConnecting_correct(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: assertFailure(Runnable.class, new Function<Runnable, Runnable>() {
  public @Override Runnable apply(final Runnable runnable) {
    return new ForwardingRunnable(runnable) {
  public @Override boolean equals(Object o) {
    if ((o instanceof ForwardingRunnable))
        {
          ForwardingRunnable that = (ForwardingRunnable) o;
          return runnable.equals(that.runnable);
        }
    return false;
  }
};
  }
}, Runnable"");""",METHOD: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest.testFailsToForwardHashCode(),com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest.testFailsToForwardHashCode(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.WhitespaceMatcherBenchmark.main(String[]),CLASS: com.google.common.base.WhitespaceMatcherBenchmark,com.google.common.base.WhitespaceMatcherBenchmark,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithSecurityManager(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableInStaticFieldIfClosed(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableInStaticFieldIfClosed(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: isJdk9(),METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.testUnloadableWithoutSecurityManager(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.isJdk9OrHigher(),CLASS: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest.isJdk9(),CLASS: com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RegularImmutableAsList.internalArray(),CLASS: com.google.common.collect.RegularImmutableAsList,com.google.common.collect.RegularImmutableAsList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RegularImmutableAsList.internalArrayEnd(),CLASS: com.google.common.collect.RegularImmutableAsList,com.google.common.collect.RegularImmutableAsList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RegularImmutableAsList.internalArrayStart(),CLASS: com.google.common.collect.RegularImmutableAsList,com.google.common.collect.RegularImmutableAsList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"METHOD_INVOCATION: checkNoDuplicate(rowKey, columnKey, existingValue, cell.getValue());",FOR_STATEMENT: (i < cellList.size()),"com.google.common.collect.DenseImmutableTable.DenseImmutableTable(ImmutableList<Cell<R, C, V>>,ImmutableSet<R>,ImmutableSet<C>)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableList.SubList.internalArray(),CLASS: com.google.common.collect.ImmutableList.SubList,com.google.common.collect.ImmutableList.SubList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableList.SubList.internalArrayEnd(),CLASS: com.google.common.collect.ImmutableList.SubList,com.google.common.collect.ImmutableList.SubList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableList.SubList.internalArrayStart(),CLASS: com.google.common.collect.ImmutableList.SubList,com.google.common.collect.ImmutableList.SubList,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int size = size();,METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,IF_STATEMENT: (size == 0),METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: Object[] result = new Object[size];,METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"METHOD_INVOCATION: copyIntoArray(result, 0);",METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: result;,METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: EMPTY_ARRAY;,THEN_STATEMENT: (size == 0),com.google.common.collect.ImmutableCollection.toArray(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,RETURN_STATEMENT: EMPTY_ARRAY;,METHOD: com.google.common.collect.ImmutableCollection.toArray(),com.google.common.collect.ImmutableCollection.toArray(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Object[] internal = internalArray();,THEN_STATEMENT: (other.length < size),com.google.common.collect.ImmutableCollection.toArray(T[]),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (internal != null),THEN_STATEMENT: (other.length < size),com.google.common.collect.ImmutableCollection.toArray(T[]),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"RETURN_STATEMENT: Platform.copy(internal, internalArrayStart(), internalArrayEnd(), other);",THEN_STATEMENT: (internal != null),com.google.common.collect.ImmutableCollection.toArray(T[]),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_ORDERING_CHANGE,"ASSIGNMENT: other = ObjectArrays.newArray(other, size);",THEN_STATEMENT: (other.length < size),com.google.common.collect.ImmutableCollection.toArray(T[]),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableCollection.internalArray(),CLASS: com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableCollection,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableCollection.internalArrayEnd(),CLASS: com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableCollection,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableCollection.internalArrayStart(),CLASS: com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableCollection,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARAMETER_RENAMING,PARAMETER: stream,PARAMETERS: ,com.google.common.collect.ImmutableSortedSet.readObject(ObjectInputStream),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.X_PURPOSE : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.X_MOZ : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.EARLY_DATA : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_FETCH_USER : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.PURPOSE : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.REPORT_TO : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_PROTOCOL : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_KEY : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SOURCE_MAP : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.ORIGIN_TRIAL : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_EXTENSIONS : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_FETCH_SITE : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_VERSIONS : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_ACCEPT : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_FETCH_MODE : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_FETCH_DEST : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_METADATA : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_INSERT,"JAVADOC: /** <a href=http://goo.gl/XDQ1h2"">Microsoft Powerpoint</a> presentations. */""",FIELD: com.google.common.net.MediaType.MICROSOFT_POWERPOINT : MediaType,com.google.common.net.MediaType.MICROSOFT_POWERPOINT : MediaType,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_INSERT,"JAVADOC: /** <a href=http://goo.gl/XDQ1h2"">Microsoft Excel</a> spreadsheets. */""",FIELD: com.google.common.net.MediaType.MICROSOFT_EXCEL : MediaType,com.google.common.net.MediaType.MICROSOFT_EXCEL : MediaType,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_INSERT,"JAVADOC: /** <a href=http://goo.gl/XDQ1h2"">Microsoft Word</a> documents. */""",FIELD: com.google.common.net.MediaType.MICROSOFT_WORD : MediaType,com.google.common.net.MediaType.MICROSOFT_WORD : MediaType,NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.JOSE : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.HAL_JSON : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.WASM_APPLICATION : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.JOSE_JSON : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.MICROSOFT_OUTLOOK : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"RETURN_STATEMENT: Objects.hashCode(host, port, hasBracketlessColons);",METHOD: com.google.common.net.HostAndPort.hashCode(),com.google.common.net.HostAndPort.hashCode(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"RETURN_STATEMENT: ((Objects.equal(this.host, that.host) && (this.port == that.port)) && (this.hasBracketlessColons == that.hasBracketlessColons));",THEN_STATEMENT: (other instanceof HostAndPort),com.google.common.net.HostAndPort.equals(Object),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: boolean unused = addCausalChain(seen, trustedGetException());",THEN_STATEMENT: (! isCancelled()),com.google.common.util.concurrent.AggregateFuture.RunningState.addInitialException(Set<Throwable>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.FluentFuture.from(FluentFuture<V>),CLASS: com.google.common.util.concurrent.FluentFuture,com.google.common.util.concurrent.FluentFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.util.concurrent.FluentFuture.TrustedFuture,CLASS: com.google.common.util.concurrent.FluentFuture,com.google.common.util.concurrent.FluentFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"LINE_COMMENT: // Thread.interrupt can throw aribitrary exceptions due to the nio InterruptibleChannel API
      // This will make sure that tasks don't get stuck busy waiting.
      // Some of this is fixed in jdk11 (see https://bugs.openjdk.java.net/browse/JDK-8198692) but
      // not all.  See the test cases for examples on how this can happen.","THEN_STATEMENT: ((currentRunner instanceof Thread) && compareAndSet(currentRunner, INTERRUPTING))",com.google.common.util.concurrent.InterruptibleTask.interruptTask(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,TRY_STATEMENT: ,"THEN_STATEMENT: ((currentRunner instanceof Thread) && compareAndSet(currentRunner, INTERRUPTING))",com.google.common.util.concurrent.InterruptibleTask.interruptTask(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Runnable prev = getAndSet(DONE);,FINALLY: ,com.google.common.util.concurrent.InterruptibleTask.interruptTask(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (prev == PARKED),FINALLY: ,com.google.common.util.concurrent.InterruptibleTask.interruptTask(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: LockSupport.unpark((Thread) currentRunner);,THEN_STATEMENT: (prev == PARKED),com.google.common.util.concurrent.InterruptibleTask.interruptTask(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: set(DONE);,"THEN_STATEMENT: ((currentRunner instanceof Thread) && compareAndSet(currentRunner, INTERRUPTING))",com.google.common.util.concurrent.InterruptibleTask.interruptTask(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: (Thread) currentRunner.interrupt();,"THEN_STATEMENT: ((currentRunner instanceof Thread) && compareAndSet(currentRunner, INTERRUPTING))",com.google.common.util.concurrent.InterruptibleTask.interruptTask(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_INSERT,"JAVADOC: /**
   * Interrupts the running task. Because this internally calls {@link Thread#interrupt()} which can
   * in turn invoke arbitrary code it is not safe to call while holding a lock.
   */",METHOD: com.google.common.util.concurrent.InterruptibleTask.interruptTask(),com.google.common.util.concurrent.InterruptibleTask.interruptTask(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: boolean restoreInterruptedBit = false;,"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int spinCount = 0;,"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"LINE_COMMENT: // Interrupting Cow Says:
        //  ______
        // < Spin >
        //  ------
        //        \   ^__^
        //         \  (oo)\_______
        //            (__)\       )\/\
        //                ||----w |
        //                ||     ||","THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Runnable state = get();,"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,WHILE_STATEMENT: ((state == INTERRUPTING) || (state == PARKED)),"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: restoreInterruptedBit,"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,POSTFIX_EXPRESSION: spinCount ++;,WHILE_STATEMENT: ((state == INTERRUPTING) || (state == PARKED)),com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (spinCount > MAX_BUSY_WAIT_SPINS),WHILE_STATEMENT: ((state == INTERRUPTING) || (state == PARKED)),com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,ASSIGNMENT: state = get();,WHILE_STATEMENT: ((state == INTERRUPTING) || (state == PARKED)),com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (spinCount > MAX_BUSY_WAIT_SPINS),IF_STATEMENT: (spinCount > MAX_BUSY_WAIT_SPINS),com.google.common.util.concurrent.InterruptibleTask.run(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: currentThread.interrupt();,THEN_STATEMENT: restoreInterruptedBit,com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"LINE_COMMENT: // If we have spun a lot just park ourselves.
            // This will save CPU while we wait for a slow interrupting thread.  In theory
            // interruptTask() should be very fast but due to InterruptibleChannel and
            // JavaLangAccess.blockedOn(Thread, Interruptible), it isn't predictable what work might
            // be done.  (e.g. close a file and flush buffers to disk).  To protect ourselve from
            // this we park ourselves and tell our interrupter that we did so.",THEN_STATEMENT: (spinCount > MAX_BUSY_WAIT_SPINS),com.google.common.util.concurrent.InterruptibleTask.run(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"IF_STATEMENT: ((state == PARKED) || compareAndSet(INTERRUPTING, PARKED))",THEN_STATEMENT: (spinCount > MAX_BUSY_WAIT_SPINS),com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"LINE_COMMENT: // Interrupting Cow Says:
              //  ______
              // < Park >
              //  ------
              //        \   ^__^
              //         \  (oo)\_______
              //            (__)\       )\/\
              //                ||----w |
              //                ||     ||
              // We need to clear the interrupted bit prior to calling park and maintain it in case
              // we wake up spuriously.","THEN_STATEMENT: ((state == PARKED) || compareAndSet(INTERRUPTING, PARKED))",com.google.common.util.concurrent.InterruptibleTask.run(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,ASSIGNMENT: restoreInterruptedBit = (Thread.interrupted() || restoreInterruptedBit);,"THEN_STATEMENT: ((state == PARKED) || compareAndSet(INTERRUPTING, PARKED))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,METHOD_INVOCATION: LockSupport.park(this);,"THEN_STATEMENT: ((state == PARKED) || compareAndSet(INTERRUPTING, PARKED))",com.google.common.util.concurrent.InterruptibleTask.run(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,WHILE_STATEMENT: (get() == INTERRUPTING),"THEN_STATEMENT: (! compareAndSet(currentThread, DONE))",com.google.common.util.concurrent.InterruptibleTask.run(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: Thread.yield();,WHILE_STATEMENT: (get() == INTERRUPTING),com.google.common.util.concurrent.InterruptibleTask.run(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.InterruptibleTask.MAX_BUSY_WAIT_SPINS : int,CLASS: com.google.common.util.concurrent.InterruptibleTask,com.google.common.util.concurrent.InterruptibleTask,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.InterruptibleTask.PARKED : Runnable,CLASS: com.google.common.util.concurrent.InterruptibleTask,com.google.common.util.concurrent.InterruptibleTask,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARENT_CLASS_CHANGE,PARAMETERIZED_TYPE: FluentFuture<V>,CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARENT_INTERFACE_INSERT,PARAMETERIZED_TYPE: ListenableFuture<V>,SUPER_INTERFACE_TYPES: ,com.google.common.util.concurrent.AbstractFuture,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: V value = getDone(this);,BODY: ,com.google.common.util.concurrent.AbstractFuture.addDoneString(StringBuilder),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: long remainingNanos = timeoutNanos;,"METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: final String unitString = unit.toString().toLowerCase(Locale.ROOT);,"METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: String message = (((Waited "" + timeout) + "" "") + unit.toString().toLowerCase(Locale.ROOT));""","METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // Only report scheduling delay if larger than our spin threshold - otherwise it's just noise,"METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // We over-waited for our timeout.,THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"ASSIGNMENT: message +=  (plus "";""",THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: long overWaitNanos = (- remainingNanos);,THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: long overWaitUnits = unit.convert(overWaitNanos, TimeUnit.NANOSECONDS);",THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: long overWaitLeftoverNanos = (overWaitNanos - unit.toNanos(overWaitUnits));,THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: boolean shouldShowExtraNanos = ((overWaitUnits == 0) || (overWaitLeftoverNanos > SPIN_THRESHOLD_NANOS));,THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (overWaitUnits > 0),THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: shouldShowExtraNanos,THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"ASSIGNMENT: message += delay)"";""",THEN_STATEMENT: ((remainingNanos + SPIN_THRESHOLD_NANOS) < 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"ASSIGNMENT: message += ((overWaitUnits +  "") + unitString);""",THEN_STATEMENT: (overWaitUnits > 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: shouldShowExtraNanos,THEN_STATEMENT: (overWaitUnits > 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"ASSIGNMENT: message +=  "";""",THEN_STATEMENT: (overWaitUnits > 0),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"ASSIGNMENT: message += (overWaitLeftoverNanos +  nanoseconds "");""",THEN_STATEMENT: shouldShowExtraNanos,"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: long remainingNanos = unit.toNanos(timeout);,"METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new TimeoutException((((((Waited "" + timeout) + "" "") + Ascii.toLowerCase(unit.toString())) + "" for "") + futureToString));""","METHOD: com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)","com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new TimeoutException(((((Waited "" + timeout) + "" "") + Ascii.toLowerCase(unit.toString())) + "" but future completed as timeout expired""));""",THEN_STATEMENT: isDone(),"com.google.common.util.concurrent.AbstractFuture.get(long,TimeUnit)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (futureToPropagateTo instanceof TrustedFuture),THEN_STATEMENT: (localValue instanceof SetFuture),com.google.common.util.concurrent.AbstractFuture.cancel(boolean),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"LINE_COMMENT: // Checking isDone and listeners != TOMBSTONE may seem redundant, but our contract for
    // addListener says that listeners execute 'immediate' if the future isDone(). However, our
    // protocol for completing a future is to assign the value field (which sets isDone to true) and
    // then to release waiters, followed by executing afterDone(), followed by releasing listeners.
    // That means that it is possible to observe that the future isDone and that your listeners
    // don't execute 'immediately'.  By checking isDone here we avoid that.
    // A corollary to all that is that we don't need to check isDone inside the loop because if we
    // get into the loop we know that we weren't done when we entered and therefore we aren't under
    // an obligation to execute 'immediately'.","METHOD: com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)","com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)",NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (! isDone()),"METHOD: com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)","com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: Listener oldHead = listeners;,"METHOD: com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)","com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,IF_STATEMENT: (oldHead != Listener.TOMBSTONE),"METHOD: com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)","com.google.common.util.concurrent.AbstractFuture.addListener(Runnable,Executor)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (future instanceof InternalFutureFailureAccess),METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: boolean wasCancelled = future.isCancelled();,METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,LINE_COMMENT: // Don't allocate a CancellationException if it's not necessary,METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: ((! GENERATE_CANCELLATION_CAUSES) & wasCancelled),METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: Throwable throwable = InternalFutures.tryInternalFastPathGetFailure((InternalFutureFailureAccess) future);,THEN_STATEMENT: (future instanceof InternalFutureFailureAccess),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (throwable != null),THEN_STATEMENT: (future instanceof InternalFutureFailureAccess),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: Cancellation.CAUSELESS_CANCELLED;,THEN_STATEMENT: ((! GENERATE_CANCELLATION_CAUSES) & wasCancelled),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: wasCancelled,BODY: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: ((v == null) ? NULL : v);,BODY: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: CancellationException,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,CATCH_CLAUSE: Throwable,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: wasCancelled,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: new Failure(exception.getCause());,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,IF_STATEMENT: (! wasCancelled),CATCH_CLAUSE: CancellationException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"RETURN_STATEMENT: new Cancellation(false, cancellation);",CATCH_CLAUSE: CancellationException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: new Failure(t);,CATCH_CLAUSE: Throwable,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,RETURN_STATEMENT: new Failure(throwable);,THEN_STATEMENT: (throwable != null),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: Object valueToSet;,METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,ASSIGNMENT: valueToSet = ((v == null) ? NULL : v);,BODY: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,ASSIGNMENT: valueToSet = new Failure(exception.getCause());,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: ExecutionException,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"ASSIGNMENT: valueToSet = new Cancellation(false, cancellation);",CATCH_CLAUSE: CancellationException,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: CancellationException,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,ASSIGNMENT: valueToSet = new Failure(t);,CATCH_CLAUSE: Throwable,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,CATCH_CLAUSE: Throwable,CATCH_CLAUSES: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (future instanceof TrustedFuture),IF_STATEMENT: (future instanceof TrustedFuture),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: valueToSet;,METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_MOVE,LINE_COMMENT: // Otherwise calculate valueToSet by calling .get(),ELSE_STATEMENT: (future instanceof TrustedFuture),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,ELSE_STATEMENT: (future instanceof TrustedFuture),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_ORDERING_CHANGE,VARIABLE_DECLARATION_STATEMENT: Object v = getDone(future);,BODY: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (future instanceof TrustedFuture),METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_UPDATE,LINE_COMMENT: // Otherwise calculate valueToSet by calling .get(),METHOD: com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: Object v = getDone(future);,BODY: ,com.google.common.util.concurrent.AbstractFuture.getFutureValue(ListenableFuture<?>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (! isNullOrEmpty(pendingDescription)),ELSE_STATEMENT: isDone(),com.google.common.util.concurrent.AbstractFuture.toString(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"METHOD_INVOCATION: future.addListener(valueToSet, directExecutor());",BODY: ,com.google.common.util.concurrent.AbstractFuture.setFuture(ListenableFuture<? extends V>),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AbstractFuture.tryInternalFastPathGetFailure(),CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AbstractFuture.getUninterruptibly(Future<V>),CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AbstractFuture.trustedGetException(),CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.util.concurrent.AbstractFuture.Trusted,CLASS: com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,PARENT_CLASS_CHANGE,PARAMETERIZED_TYPE: AbstractFuture.TrustedFuture,CLASS: com.google.common.util.concurrent.TrustedListenableFutureTask,com.google.common.util.concurrent.TrustedListenableFutureTask,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_UPDATE,"JAVADOC: /**
     * Called when the service transitions to the {@linkplain State#TERMINATED TERMINATED} state.
     * The {@linkplain State#TERMINATED TERMINATED} state is a terminal state in the transition
     * diagram. Therefore, if this method is called, no other methods will be called on the {@link
     * Listener}.
     *
     * @param from The previous state that is being transitioned from. The only valid values for
     *     this are {@linkplain State#NEW NEW}, {@linkplain State#RUNNING RUNNING} or {@linkplain
     *     State#STOPPING STOPPING}.
     */",METHOD: com.google.common.util.concurrent.Service.Listener.terminated(State),com.google.common.util.concurrent.Service.Listener.terminated(State),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,THROW_STATEMENT: throwable;,CATCH_CLAUSE: Throwable,com.google.common.util.concurrent.Monitor.isSatisfied(Guard),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,THROW_STATEMENT: Throwables.propagate(throwable);,CATCH_CLAUSE: Throwable,com.google.common.util.concurrent.Monitor.isSatisfied(Guard),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Graph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.Graph,com.google.common.graph.Graph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Network.edgeConnectingOrNull(EndpointPair<N>),CLASS: com.google.common.graph.Network,com.google.common.graph.Network,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Network.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.Network,com.google.common.graph.Network,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Network.edgesConnecting(EndpointPair<N>),CLASS: com.google.common.graph.Network,com.google.common.graph.Network,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.MutableValueGraph.putEdgeValue(EndpointPair<N>,V)",CLASS: com.google.common.graph.MutableValueGraph,com.google.common.graph.MutableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.MutableValueGraph.removeEdge(EndpointPair<N>),CLASS: com.google.common.graph.MutableValueGraph,com.google.common.graph.MutableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetwork.validateEndpoints(EndpointPair<?>),CLASS: com.google.common.graph.AbstractNetwork,com.google.common.graph.AbstractNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetwork.edgeConnectingOrNull(EndpointPair<N>),CLASS: com.google.common.graph.AbstractNetwork,com.google.common.graph.AbstractNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetwork.isOrderingCompatible(EndpointPair<?>),CLASS: com.google.common.graph.AbstractNetwork,com.google.common.graph.AbstractNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.AbstractNetwork,com.google.common.graph.AbstractNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetwork.edgesConnecting(EndpointPair<N>),CLASS: com.google.common.graph.AbstractNetwork,com.google.common.graph.AbstractNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.graph.ImmutableValueGraph.Builder,CLASS: com.google.common.graph.ImmutableValueGraph,com.google.common.graph.ImmutableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,DOC_UPDATE,"JAVADOC: /**
   * Adds {@code edge} connecting {@code nodeU} to {@code nodeV}. In an undirected network, the edge
   * will also connect {@code nodeV} to {@code nodeU}.
   *
   * <p><b>Edges must be unique</b>, just as {@code Map} keys must be. They must also be non-null.
   *
   * <p>If {@code nodeU} and {@code nodeV} are not already present in this graph, this method will
   * silently {@link #addNode(Object) add} {@code nodeU} and {@code nodeV} to the graph.
   *
   * <p>If {@code edge} already connects {@code nodeU} to {@code nodeV} (in the specified order if
   * this network {@link #isDirected()}, else in any order), then this method will have no effect.
   *
   * @return {@code true} if the network was modified as a result of this call
   * @throws IllegalArgumentException if {@code edge} already exists and does not connect {@code
   *     nodeU} to {@code nodeV}, or if the introduction of the edge would violate {@link
   *     #allowsParallelEdges()} or {@link #allowsSelfLoops()}
   */","METHOD: com.google.common.graph.MutableNetwork.addEdge(N,N,E)","com.google.common.graph.MutableNetwork.addEdge(N,N,E)",NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.MutableNetwork.addEdge(EndpointPair<N>,E)",CLASS: com.google.common.graph.MutableNetwork,com.google.common.graph.MutableNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.graph.ImmutableGraph.Builder,CLASS: com.google.common.graph.ImmutableGraph,com.google.common.graph.ImmutableGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ValueGraph.edgeValueOrDefault(EndpointPair<N>,V)",CLASS: com.google.common.graph.ValueGraph,com.google.common.graph.ValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ValueGraph,com.google.common.graph.ValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.BaseGraph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.BaseGraph,com.google.common.graph.BaseGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_CLASS,CLASS: com.google.common.graph.ImmutableNetwork.Builder,CLASS: com.google.common.graph.ImmutableNetwork,com.google.common.graph.ImmutableNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingGraph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ForwardingGraph,com.google.common.graph.ForwardingGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ForwardingValueGraph.edgeValueOrDefault(EndpointPair<N>,V)",CLASS: com.google.common.graph.ForwardingValueGraph,com.google.common.graph.ForwardingValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingValueGraph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ForwardingValueGraph,com.google.common.graph.ForwardingValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingNetwork.edgeConnectingOrNull(EndpointPair<N>),CLASS: com.google.common.graph.ForwardingNetwork,com.google.common.graph.ForwardingNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingNetwork.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ForwardingNetwork,com.google.common.graph.ForwardingNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingNetwork.edgesConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ForwardingNetwork,com.google.common.graph.ForwardingNetwork,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.MutableGraph.putEdge(EndpointPair<N>),CLASS: com.google.common.graph.MutableGraph,com.google.common.graph.MutableGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.MutableGraph.removeEdge(EndpointPair<N>),CLASS: com.google.common.graph.MutableGraph,com.google.common.graph.MutableGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.graph.GraphConstants.ENDPOINTS_MISMATCH : String,CLASS: com.google.common.graph.GraphConstants,com.google.common.graph.GraphConstants,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs(boolean,double,RoundingMode)",CLASS: com.google.common.math.MathPreconditions,com.google.common.math.MathPreconditions,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.math.MathPreconditions.checkInRange(boolean),CLASS: com.google.common.math.MathPreconditions,com.google.common.math.MathPreconditions,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: checkInRange(((z > (MIN_INT_AS_DOUBLE - 1.0)) & (z < (MAX_INT_AS_DOUBLE + 1.0))));,"METHOD: com.google.common.math.DoubleMath.roundToInt(double,RoundingMode)","com.google.common.math.DoubleMath.roundToInt(double,RoundingMode)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,METHOD_INVOCATION: checkInRange((((MIN_LONG_AS_DOUBLE - z) < 1.0) & (z < MAX_LONG_AS_DOUBLE_PLUS_ONE)));,"METHOD: com.google.common.math.DoubleMath.roundToLong(double,RoundingMode)","com.google.common.math.DoubleMath.roundToLong(double,RoundingMode)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,COMMENT_INSERT,"BLOCK_COMMENT: /*
     * We use # instead of * for possessive quantifiers. This lets us strip them out when building
     * the regex for RE2 (which doesn't support them) but leave them in when building it for
     * java.util.regex (where we want them in order to avoid catastrophic backtracking).
     */",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),NONE
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: String hex = (?:[0-9a-fA-F]+#(?:\\.[0-9a-fA-F]*#)?|\\.[0-9a-fA-F]+#)"";""",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: String hex = (?:\\p{XDigit}++(?:\\.\\p{XDigit}*+)?|\\.\\p{XDigit}++)"";""",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: String decimal = (?:\\d++(?:\\.\\d*+)?|\\.\\d++)"";""",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: String completeDec = (decimal + (?:[eE][+-]?\\d++)?[fFdD]?"");""",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: String completeHex = ((0[xX]"" + hex) + ""[pP][+-]?\\d++[fFdD]?"");""",METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,RETURN_STATEMENT: Pattern.compile(fpPattern);,METHOD: com.google.common.primitives.Doubles.fpPattern(),com.google.common.primitives.Doubles.fpPattern(),LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ATTRIBUTE_TYPE_CHANGE,SINGLE_TYPE: Pattern,FIELD: com.google.common.primitives.Doubles.FLOATING_POINT_PATTERN : Pattern,com.google.common.primitives.Doubles.FLOATING_POINT_PATTERN : java.util.regex.Pattern,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,int,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,int,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,char,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,int,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,long,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,long,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, errorMessageArgs));",THEN_STATEMENT: (reference == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object...)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,int,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2, p3));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,char,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,long,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,char,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2, p3));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,int,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,long,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,long,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,long,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2, p3, p4));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,long,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,char,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2, p3, p4));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, errorMessageArgs));",THEN_STATEMENT: (! expression),"com.google.common.base.Preconditions.checkState(boolean,String,Object...)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,long,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,char,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,char,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,char,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2, p3, p4));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, errorMessageArgs));",THEN_STATEMENT: (! expression),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object...)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,int,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,long,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,char,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,int,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,char,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,char,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,int,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2, p3));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,long,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,int,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,char,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,Object,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,int,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,long,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,int,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,int,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalArgumentException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkArgument(boolean,String,Object,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new IllegalStateException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! b),"com.google.common.base.Preconditions.checkState(boolean,String,long,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new NullPointerException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (obj == null),"com.google.common.base.Preconditions.checkNotNull(T,String,char,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,"METHOD: com.google.common.base.Preconditions.format(String,Object...)",CLASS: com.google.common.base.Preconditions,com.google.common.base.Preconditions,HIGH
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Strings.lenientToString(Object),CLASS: com.google.common.base.Strings,com.google.common.base.Strings,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.base.Strings.lenientFormat(String,Object...)",CLASS: com.google.common.base.Strings,com.google.common.base.Strings,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.replaceAll(String),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.end(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.matches(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.find(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.find(int),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.JdkMatcher.start(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.flags(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.matcher(CharSequence),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.JdkPattern.pattern(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.JdkPattern.hashCode(),CLASS: com.google.common.base.JdkPattern,com.google.common.base.JdkPattern,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.JdkPattern.equals(Object),CLASS: com.google.common.base.JdkPattern,com.google.common.base.JdkPattern,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.PatternCompiler.isPcreLike(),CLASS: com.google.common.base.PatternCompiler,com.google.common.base.PatternCompiler,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonPattern.flags(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonPattern.matcher(CharSequence),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonPattern.pattern(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.CommonPattern.compile(String),CLASS: com.google.common.base.CommonPattern,com.google.common.base.CommonPattern,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.CommonPattern.isPcreLike(),CLASS: com.google.common.base.CommonPattern,com.google.common.base.CommonPattern,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.CommonPattern.hashCode(),CLASS: com.google.common.base.CommonPattern,com.google.common.base.CommonPattern,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.base.CommonPattern.equals(Object),CLASS: com.google.common.base.CommonPattern,com.google.common.base.CommonPattern,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.ASCII : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_DIGIT : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.DIGIT : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.NONE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.ANY : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_LETTER_OR_DIGIT : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_ISO_CONTROL : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.INVISIBLE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.WHITESPACE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.BREAKING_WHITESPACE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_LOWER_CASE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_LETTER : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.JAVA_UPPER_CASE : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_OBJECT_STATE,FIELD: com.google.common.base.CharMatcher.SINGLE_WIDTH : CharMatcher,CLASS: com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,long,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,int,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,char,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,int,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,char,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,int,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2, p3, p4));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,long,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, errorMessageArgs));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object...)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2, p3));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,Object,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,char,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,long,long)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,Object,char)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,char,int)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,long,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_UPDATE,"THROW_STATEMENT: new VerifyException(format(errorMessageTemplate, p1, p2));",THEN_STATEMENT: (! expression),"com.google.common.base.Verify.verify(boolean,String,int,Object)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.replaceAll(String),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.end(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.matches(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.find(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.find(int),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,INCREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.base.CommonMatcher.start(),MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysExpectedSize(),CLASS: com.google.common.collect.CompactLinkedHashMapTest,com.google.common.collect.CompactLinkedHashMapTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),CLASS: com.google.common.collect.CompactLinkedHashMapTest,com.google.common.collect.CompactLinkedHashMapTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashSetTest.testAllocArraysExpectedSize(),CLASS: com.google.common.collect.CompactHashSetTest,com.google.common.collect.CompactHashSetTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashSetTest.testAllocArraysDefault(),CLASS: com.google.common.collect.CompactHashSetTest,com.google.common.collect.CompactHashSetTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashSetTest.testDummyMethod(),CLASS: com.google.common.collect.CompactHashSetTest,com.google.common.collect.CompactHashSetTest,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysExpectedSize(),CLASS: com.google.common.collect.CompactHashMapTest,com.google.common.collect.CompactHashMapTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),CLASS: com.google.common.collect.CompactHashMapTest,com.google.common.collect.CompactHashMapTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysExpectedSize(),CLASS: com.google.common.collect.CompactLinkedHashSetTest,com.google.common.collect.CompactLinkedHashSetTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysDefault(),CLASS: com.google.common.collect.CompactLinkedHashSetTest,com.google.common.collect.CompactLinkedHashSetTest,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,REMOVED_FUNCTIONALITY,METHOD: com.google.common.collect.CompactLinkedHashSetTest.testDummyMethod(),CLASS: com.google.common.collect.CompactLinkedHashSetTest,com.google.common.collect.CompactLinkedHashSetTest,CRUCIAL
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ConfigurableMutableValueGraph.putEdgeValue(EndpointPair<N>,V)",CLASS: com.google.common.graph.ConfigurableMutableValueGraph,com.google.common.graph.ConfigurableMutableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableMutableValueGraph.removeEdge(EndpointPair<N>),CLASS: com.google.common.graph.ConfigurableMutableValueGraph,com.google.common.graph.ConfigurableMutableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"RETURN_STATEMENT: hasEdgeConnecting_internal(checkNotNull(nodeU), checkNotNull(nodeV));","METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)","com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(nodeU);,"METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)","com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(nodeV);,"METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)","com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);","METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)","com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: ((connectionsU != null) && connectionsU.successors().contains(nodeV));,"METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)","com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(N,N)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_INSERT,"RETURN_STATEMENT: edgeValueOrDefault_internal(checkNotNull(nodeU), checkNotNull(nodeV), defaultValue);","METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(nodeU);,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,METHOD_INVOCATION: checkNotNull(nodeV);,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);","METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: V value = ((connectionsU == null) ? null : connectionsU.value(nodeV));,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,STATEMENT_DELETE,RETURN_STATEMENT: ((value == null) ? defaultValue : value);,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)","com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(N,N,V)",MEDIUM
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting_internal(N,N)",CLASS: com.google.common.graph.ConfigurableValueGraph,com.google.common.graph.ConfigurableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault_internal(N,N,V)",CLASS: com.google.common.graph.ConfigurableValueGraph,com.google.common.graph.ConfigurableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(EndpointPair<N>,V)",CLASS: com.google.common.graph.ConfigurableValueGraph,com.google.common.graph.ConfigurableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableValueGraph.hasEdgeConnecting(EndpointPair<N>),CLASS: com.google.common.graph.ConfigurableValueGraph,com.google.common.graph.ConfigurableValueGraph,LOW
3,0a2258e6691a22aa7ff2604871b520d44bbac01f,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.graph.ConfigurableMutableNetwork.addEdge(EndpointPair<N>,E)",CLASS: com.google.common.graph.ConfigurableMutableNetwork,com.google.common.graph.ConfigurableMutableNetwork,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSetTest.testReuseBuilderReducingHashTableSizeWithPowerOfTwoTotalElements(),CLASS: com.google.common.collect.ImmutableSetTest,com.google.common.collect.ImmutableSetTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.testing.testers.CollectionIteratorTester.testIterator_nullElement(),CLASS: com.google.common.collect.testing.testers.CollectionIteratorTester,com.google.common.collect.testing.testers.CollectionIteratorTester,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.Platform.checkGwtRpcEnabled(),CLASS: com.google.common.base.Platform,com.google.common.base.Platform,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParametersIterable_nonAsciiParameter(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParameters_nonAsciiParameter(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testCreate_emptyType(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testCreate_nonAsciiSubtype(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParameters_nonAsciiParameterValue(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testCreate_emptySubtype(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParameter_nonAsciiParameter(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParameter_nonAsciiParameterValue(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParameter_emptyParameter(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testCreate_nonAsciiType(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testWithParametersIterable_nonAsciiParameterValue(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(FluentFuture.from(f)).isSameAs(f);,METHOD: com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuture(),com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuture(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(FluentFuture.from(f)).isSameAs(f);,METHOD: com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuturePassingAsNonFluent(),com.google.common.util.concurrent.FluentFutureTest.testFromFluentFuturePassingAsNonFluent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_ATTRIBUTE_MODIFIABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.util.concurrent.AtomicLongMapTest.random : Random,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AtomicLongMapTest.testModify_basher(),CLASS: com.google.common.util.concurrent.AtomicLongMapTest,com.google.common.util.concurrent.AtomicLongMapTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(expected);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.CallablesTest.testAsAsyncCallable_exception(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(expectedException);,CATCH_CLAUSE: ExecutionException,"com.google.common.util.concurrent.AbstractAbstractFutureTest.assertFailed(AbstractFuture<Integer>,Throwable)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // We use this somewhat weird pattern with an enum for each assertion we want to make as a way
    // of dealing with the fact that one of the assertions is @GwtIncompatible but we don't want to
    // have to have duplicate @GwtIncompatible test methods just to make that assertion.","METHOD: com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)","com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: AssertFailsToDecodeStrategy strategy:AssertFailsToDecodeStrategy.values(),"METHOD: com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)","com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: encoding.decode(cannotDecode);,BODY: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: fail(Expected IllegalArgumentException"");""",BODY: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: assertThat(expected).hasCauseThat().hasMessageThat().isEqualTo(expectedMessage);,THEN_STATEMENT: (expectedMessage != null),"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (expectedMessage != null),CATCH_CLAUSE: IllegalArgumentException,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CATCH_CLAUSE: IllegalArgumentException,CATCH_CLAUSES: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,TRY_STATEMENT: ,"METHOD: com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)","com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: encoding.decodeChecked(cannotDecode);,BODY: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: fail(Expected DecodingException"");""",BODY: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: assertThat(expected).hasMessageThat().isEqualTo(expectedMessage);,THEN_STATEMENT: (expectedMessage != null),"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (expectedMessage != null),CATCH_CLAUSE: DecodingException,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CATCH_CLAUSE: DecodingException,CATCH_CLAUSES: ,"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(encoding.canDecode(cannotDecode));,"METHOD: com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)","com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(encoding.canDecode(cannotDecode));,FOREACH_STATEMENT: AssertFailsToDecodeStrategy strategy:AssertFailsToDecodeStrategy.values(),"com.google.common.io.BaseEncodingTest.assertFailsToDecode(BaseEncoding,String,String)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assert_().fail(template, args);","METHOD: com.google.common.math.LongMathTest.failFormat(String,Object...)","com.google.common.math.LongMathTest.failFormat(String,Object...)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.SplitterTest.testMapSplitter_extraValueDelimiter(),CLASS: com.google.common.base.SplitterTest,com.google.common.base.SplitterTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Optional<Number> first = (Optional) numbers.first();""",METHOD: com.google.common.base.OptionalTest.testSampleCodeFine2(),com.google.common.base.OptionalTest.testSampleCodeFine2(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(onlyPresent).containsExactly(2).inOrder();,METHOD: com.google.common.base.OptionalTest.testPresentInstances_wildcards(),com.google.common.base.OptionalTest.testPresentInstances_wildcards(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasCauseThat().isSameAs(cause);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.base.ThrowablesTest.testGetRootCause_Loop(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasCauseThat().isSameAs(cause);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.base.ThrowablesTest.testGetCasualChainLoop(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(thrown).hasCauseThat().isSameAs(cause);,METHOD: com.google.common.base.ThrowablesTest.testGetCauseAs(),com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(Throwables.getCauseAs(thrown, SomeCheckedException.class)).isSameAs(cause);",METHOD: com.google.common.base.ThrowablesTest.testGetCauseAs(),com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(Throwables.getCauseAs(thrown, Exception.class)).isSameAs(cause);",METHOD: com.google.common.base.ThrowablesTest.testGetCauseAs(),com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(expected).hasCauseThat().isSameAs(thrown);,CATCH_CLAUSE: ClassCastException,com.google.common.base.ThrowablesTest.testGetCauseAs(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Reference<Object> reference = (Reference) entry;""",THEN_STATEMENT: (maker.getKeyStrength() == Strength.WEAK),com.google.common.collect.MapMakerInternalMapTest.testDrainKeyReferenceQueueOnRead(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // TODO(b/145386688): This access should be guarded by 'segment', which is not currently
        // held",THEN_STATEMENT: (i > 1),com.google.common.collect.MapMakerInternalMapTest.testExpand_cleanup(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Reference<Object> reference = (Reference) valueReference;""",THEN_STATEMENT: (maker.getValueStrength() == Strength.WEAK),com.google.common.collect.MapMakerInternalMapTest.testDrainValueReferenceQueueOnWrite(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Reference<Object> reference = (Reference) valueReference;""",THEN_STATEMENT: (maker.getValueStrength() == Strength.WEAK),com.google.common.collect.MapMakerInternalMapTest.testDrainValueReferenceQueueOnRead(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // TODO(b/145386688): This access should be guarded by 'segment', which is not currently
        // held",THEN_STATEMENT: (i > 1),com.google.common.collect.MapMakerInternalMapTest.testExpand(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Reference<Object> reference = (Reference) entry;""",THEN_STATEMENT: (maker.getKeyStrength() == Strength.WEAK),com.google.common.collect.MapMakerInternalMapTest.testDrainKeyReferenceQueueOnWrite(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(InetAddresses.fromInteger(0x7f000001), InetAddresses.forString(127.0.0.1""));""",METHOD: com.google.common.net.InetAddressesTest.testFromInteger(),com.google.common.net.InetAddressesTest.testFromInteger(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String nonCompatAddress:nonCompatAddresses,METHOD: com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String validCompatAddress:validCompatAddresses,METHOD: com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < nonCompatAddresses.length),METHOD: com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < validCompatAddresses.length),METHOD: com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonCompatAddresses[i]);,FOR_STATEMENT: (i < nonCompatAddresses.length),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(InetAddresses.isCompatIPv4Address((Inet6Address) ip));,FOR_STATEMENT: (i < nonCompatAddresses.length),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,FOR_STATEMENT: (i < nonCompatAddresses.length),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(validCompatAddresses[i]);,FOR_STATEMENT: (i < validCompatAddresses.length),com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonCompatAddresses[i]);,FOREACH_STATEMENT: String nonCompatAddress:nonCompatAddresses,com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(validCompatAddresses[i]);,FOREACH_STATEMENT: String validCompatAddress:validCompatAddresses,com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(((IllegalArgumentException expected for \'"" + nonCompatAddresses[i]) + ""\'""));""",BODY: ,com.google.common.net.InetAddressesTest.testCompatIPv4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"METHOD_INVOCATION: assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(127.0.0.1""))).isEqualTo(InetAddresses.forString(""127.0.0.1""));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(coercedInt).isAtLeast(0xe0000000);,METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(coercedInt).isAtMost(0xfffffffe);,METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: InetAddress localHost4 = InetAddresses.forString(127.0.0.1"");""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: assertEquals(localHost4, InetAddresses.getCoercedIPv4Address(localHost4));",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: assertTrue((0xe0000000 <= InetAddresses.coerceToInteger(coerced)));,METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: assertTrue((InetAddresses.coerceToInteger(coerced) <= 0xfffffffe));,METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(localHost4, InetAddresses.getCoercedIPv4Address(InetAddresses.forString(::1"")));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.forString(1.2.3.4"") != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""::1.2.3.4""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.forString(1.2.3.4"") != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""2002:0102:0304::1""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.getCoercedIPv4Address(InetAddresses.forString(2002:0102:0304::1"")) != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""2002:0506:0708::1""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.getCoercedIPv4Address(InetAddresses.forString(2002:0102:0304::1"")) != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""2002:0102:0304::2""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.forString(192.0.2.45"") != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""2001:0000:4136:e378:8000:63bf:3fff:fdd2""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_UPDATE,"LINE_COMMENT: // 2 Teredo addresses differing in the embedded IPv4 address should
    // hash to the different values.",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertTrue((InetAddresses.getCoercedIPv4Address(InetAddresses.forString(2001:0000:4136:e378:8000:63bf:3fff:fdd2"")) != InetAddresses.getCoercedIPv4Address(InetAddresses.forString(""2001:0000:4136:e379:8000:63bf:3fff:fdd2""))));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_UPDATE,"LINE_COMMENT: // 2 Teredo addresses NOT differing in the embedded IPv4 address should
    // hash to the same value.",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: InetAddress coerced = InetAddresses.getCoercedIPv4Address(InetAddresses.forString(2001:4860::1""));""",METHOD: com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),com.google.common.net.InetAddressesTest.testGetCoercedIPv4Address(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String bogusInput:bogusInputs,METHOD: com.google.common.net.InetAddressesTest.testForStringBogusInput(),com.google.common.net.InetAddressesTest.testForStringBogusInput(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.testForStringBogusInput(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.testForStringBogusInput(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < bogusInputs.length),METHOD: com.google.common.net.InetAddressesTest.testForStringBogusInput(),com.google.common.net.InetAddressesTest.testForStringBogusInput(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,FOR_STATEMENT: (i < bogusInputs.length),com.google.common.net.InetAddressesTest.testForStringBogusInput(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(InetAddresses.isInetAddress(bogusInputs[i]));,FOR_STATEMENT: (i < bogusInputs.length),com.google.common.net.InetAddressesTest.testForStringBogusInput(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(InetAddresses.isInetAddress(bogusInputs[i]));,FOREACH_STATEMENT: String bogusInput:bogusInputs,com.google.common.net.InetAddressesTest.testForStringBogusInput(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: InetAddresses.forString(bogusInputs[i]);,BODY: ,com.google.common.net.InetAddressesTest.testForStringBogusInput(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(((IllegalArgumentException expected for \'"" + bogusInputs[i]) + ""\'""));""",BODY: ,com.google.common.net.InetAddressesTest.testForStringBogusInput(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: ipv6Addr = InetAddress.getByName(ipStr);,METHOD: com.google.common.net.InetAddressesTest.testForStringIPv6Input(),com.google.common.net.InetAddressesTest.testForStringIPv6Input(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_MOVE,"LINE_COMMENT: // Shouldn't hit DNS, because it's an IP string literal.",METHOD: com.google.common.net.InetAddressesTest.testForStringIPv6Input(),com.google.common.net.InetAddressesTest.testForStringIPv6Input(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ipv6Addr = null;,METHOD: com.google.common.net.InetAddressesTest.testForStringIPv6Input(),com.google.common.net.InetAddressesTest.testForStringIPv6Input(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String non6to4Address:non6to4Addresses,METHOD: com.google.common.net.InetAddressesTest.test6to4Addresses(),com.google.common.net.InetAddressesTest.test6to4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < non6to4Addresses.length),METHOD: com.google.common.net.InetAddressesTest.test6to4Addresses(),com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(non6to4Addresses[i]);,FOR_STATEMENT: (i < non6to4Addresses.length),com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(InetAddresses.is6to4Address((Inet6Address) ip));,FOR_STATEMENT: (i < non6to4Addresses.length),com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,FOR_STATEMENT: (i < non6to4Addresses.length),com.google.common.net.InetAddressesTest.test6to4Addresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(non6to4Addresses[i]);,FOREACH_STATEMENT: String non6to4Address:non6to4Addresses,com.google.common.net.InetAddressesTest.test6to4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(((IllegalArgumentException expected for \'"" + non6to4Addresses[i]) + ""\'""));""",BODY: ,com.google.common.net.InetAddressesTest.test6to4Addresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String nonTeredoAddress:nonTeredoAddresses,METHOD: com.google.common.net.InetAddressesTest.testTeredoAddresses(),com.google.common.net.InetAddressesTest.testTeredoAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < nonTeredoAddresses.length),METHOD: com.google.common.net.InetAddressesTest.testTeredoAddresses(),com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonTeredoAddresses[i]);,FOR_STATEMENT: (i < nonTeredoAddresses.length),com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(InetAddresses.isTeredoAddress((Inet6Address) ip));,FOR_STATEMENT: (i < nonTeredoAddresses.length),com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,FOR_STATEMENT: (i < nonTeredoAddresses.length),com.google.common.net.InetAddressesTest.testTeredoAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonTeredoAddresses[i]);,FOREACH_STATEMENT: String nonTeredoAddress:nonTeredoAddresses,com.google.common.net.InetAddressesTest.testTeredoAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(((IllegalArgumentException expected for \'"" + nonTeredoAddresses[i]) + ""\'""));""",BODY: ,com.google.common.net.InetAddressesTest.testTeredoAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: ipv4Addr = InetAddress.getByName(ipStr);,METHOD: com.google.common.net.InetAddressesTest.testForStringIPv4Input(),com.google.common.net.InetAddressesTest.testForStringIPv4Input(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_MOVE,"LINE_COMMENT: // Shouldn't hit DNS, because it's an IP string literal.",METHOD: com.google.common.net.InetAddressesTest.testForStringIPv4Input(),com.google.common.net.InetAddressesTest.testForStringIPv4Input(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ipv4Addr = null;,METHOD: com.google.common.net.InetAddressesTest.testForStringIPv4Input(),com.google.common.net.InetAddressesTest.testForStringIPv4Input(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String validIsatapAddress:validIsatapAddresses,METHOD: com.google.common.net.InetAddressesTest.testIsatapAddresses(),com.google.common.net.InetAddressesTest.testIsatapAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String nonIsatapAddress:nonIsatapAddresses,METHOD: com.google.common.net.InetAddressesTest.testIsatapAddresses(),com.google.common.net.InetAddressesTest.testIsatapAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < validIsatapAddresses.length),METHOD: com.google.common.net.InetAddressesTest.testIsatapAddresses(),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < nonIsatapAddresses.length),METHOD: com.google.common.net.InetAddressesTest.testIsatapAddresses(),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(validIsatapAddresses[i]);,FOR_STATEMENT: (i < validIsatapAddresses.length),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertTrue(InetAddresses.isIsatapAddress((Inet6Address) ip));,FOR_STATEMENT: (i < validIsatapAddresses.length),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonIsatapAddresses[i]);,FOR_STATEMENT: (i < nonIsatapAddresses.length),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertFalse(InetAddresses.isIsatapAddress((Inet6Address) ip));,FOR_STATEMENT: (i < nonIsatapAddresses.length),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,TRY_STATEMENT: ,FOR_STATEMENT: (i < nonIsatapAddresses.length),com.google.common.net.InetAddressesTest.testIsatapAddresses(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(validIsatapAddresses[i]);,FOREACH_STATEMENT: String validIsatapAddress:validIsatapAddresses,com.google.common.net.InetAddressesTest.testIsatapAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ip = InetAddresses.forString(nonIsatapAddresses[i]);,FOREACH_STATEMENT: String nonIsatapAddress:nonIsatapAddresses,com.google.common.net.InetAddressesTest.testIsatapAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: fail(((IllegalArgumentException expected for \'"" + nonIsatapAddresses[i]) + ""\'""));""",BODY: ,com.google.common.net.InetAddressesTest.testIsatapAddresses(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,FOREACH_STATEMENT: String ipString:eightColons,METHOD: com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: ipv6Addr = InetAddress.getByName(eightColons[i]);,FOR_STATEMENT: (i < eightColons.length),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,FOR_INIT: int i = 0;,com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,FOR_STATEMENT: (i < eightColons.length),METHOD: com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_MOVE,"LINE_COMMENT: // Shouldn't hit DNS, because it's an IP string literal.",FOR_STATEMENT: (i < eightColons.length),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: InetAddress ipv6Addr = null;,FOR_STATEMENT: (i < eightColons.length),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,"METHOD_INVOCATION: assertEquals(ipv6Addr, InetAddresses.forString(eightColons[i]));",FOR_STATEMENT: (i < eightColons.length),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: assertTrue(InetAddresses.isInetAddress(eightColons[i]));,FOR_STATEMENT: (i < eightColons.length),com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: InetAddress ipv6Addr = null;,FOREACH_STATEMENT: String ipString:eightColons,com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(ipv6Addr, InetAddresses.forString(eightColons[i]));",FOREACH_STATEMENT: String ipString:eightColons,com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(InetAddresses.isInetAddress(eightColons[i]));,FOREACH_STATEMENT: String ipString:eightColons,com.google.common.net.InetAddressesTest.testForStringIPv6EightColons(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,METHOD_RENAMING,METHOD: com.google.common.net.InetAddressesTest.testToInteger(),METHOD: com.google.common.net.InetAddressesTest.testToInteger(),com.google.common.net.InetAddressesTest.testCoerceToInteger(),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: InetAddress ipv4Addr = InetAddresses.forString(127.0.0.1"");""",METHOD: com.google.common.net.InetAddressesTest.testToInteger(),com.google.common.net.InetAddressesTest.testCoerceToInteger(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(0x7f000001, InetAddresses.coerceToInteger(ipv4Addr));",METHOD: com.google.common.net.InetAddressesTest.testToInteger(),com.google.common.net.InetAddressesTest.testCoerceToInteger(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testIPv6AddressWithScopeId(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv6BigIntegerInputTooLarge(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv4BigIntegerThrowsLessThanZero(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.net.InetAddressesTest.checkBigIntegerConversion(String,BigInteger)",CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testDottedQuadAddressWithScopeId(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv4BigIntegerInputTooLarge(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv6BigIntegerValid(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testIPv4AddressWithScopeId(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv4BigIntegerValid(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddressesTest.testFromIpv6BigIntegerThrowsLessThanZero(),CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddressesTest.SCOPE_IDS : ImmutableSet<String>,CLASS: com.google.common.net.InetAddressesTest,com.google.common.net.InetAddressesTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(uee).hasCauseThat().isSameAs(e);,CATCH_CLAUSE: UncheckedExecutionException,com.google.common.cache.NullCacheTest.testGet_runtimeException(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
 * No-op null-pointer test for {@link LongAdder} to override the {@link PackageSanityTests} version,
 * which checks package-private methods that we don't want to have to annotate as {@code Nullable}
 * because we don't want diffs from jsr166e.
 */",CLASS: com.google.common.cache.LongAdderTest,com.google.common.cache.LongAdderTest,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_INSERT,SINGLE_TYPE: TestCase,CLASS: com.google.common.cache.LongAdderTest,com.google.common.cache.LongAdderTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_INSERT,"JAVADOC: /**
   * No-op null-pointer test for {@link LongAdder} to override the {@link PackageSanityTests}
   * version, which checks package-private methods that we don't want to have to annotate as {@code
   * Nullable} because we don't want diffs from jsr166e.
   */",METHOD: com.google.common.cache.LongAdderTest.testNulls(),com.google.common.cache.LongAdderTest.testNulls(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.cache.LongAdderTest.testOverflows(),CLASS: com.google.common.cache.LongAdderTest,com.google.common.cache.LongAdderTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.cache.CacheStatsTest.testPlusLarge(),CLASS: com.google.common.cache.CacheStatsTest,com.google.common.cache.CacheStatsTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(entries).containsExactlyElementsIn((Collection<Entry<Object, Object>>) expected);","FOREACH_STATEMENT: LoadingCache<Object, Object> cache:caches()",com.google.common.cache.PopulatedCachesTest.testEntrySet_populated(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(entries.toArray()).asList().containsExactlyElementsIn((Collection<Object>) expected);,"FOREACH_STATEMENT: LoadingCache<Object, Object> cache:caches()",com.google.common.cache.PopulatedCachesTest.testEntrySet_populated(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(entries.toArray(new Entry[0])).asList().containsExactlyElementsIn((Collection<Entry>) expected);,"FOREACH_STATEMENT: LoadingCache<Object, Object> cache:caches()",com.google.common.cache.PopulatedCachesTest.testEntrySet_populated(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: final AtomicInteger stopppingCount = new AtomicInteger();,METHOD: com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: service.addListener(new Listener() {
  public @Override void stopping(State from) {
    stopppingCount.incrementAndGet();
  }
}, directExecutor());",METHOD: com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(1, stopppingCount.get());",METHOD: com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),com.google.common.util.concurrent.AbstractServiceTest.testManualServiceStopMultipleTimesWhileStarting(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: manager.stopAsync().awaitStopped(1, TimeUnit.SECONDS);",FOR_STATEMENT: (k < 1000),com.google.common.util.concurrent.ServiceManagerTest.testTransitionRace(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(exception);,CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.testStart_failed(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(exception);,CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.FunctionalTest.testStart_failed(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(exception);,CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.FunctionalTest.testStop_failed(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasCauseThat().isSameAs(exception);,CATCH_CLAUSE: RuntimeException,com.google.common.util.concurrent.AbstractIdleServiceTest.testStop_failed(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ee).hasCauseThat().isSameAs(e);,CATCH_CLAUSE: ExecutionException,com.google.common.util.concurrent.SettableFutureTest.testSetException(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(hashFunction.newHasher().putBytes(littleEndian).hash(), hashFunction.newHasher().putBytes(littleEndian).hash());",METHOD: com.google.common.hash.HashTestUtils.assertHasherByteBufferPreservesByteOrder(HashFunction),com.google.common.hash.HashTestUtils.assertHasherByteBufferPreservesByteOrder(HashFunction),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());",METHOD: com.google.common.hash.HashTestUtils.assertHasherByteBufferPreservesByteOrder(HashFunction),com.google.common.hash.HashTestUtils.assertHasherByteBufferPreservesByteOrder(HashFunction),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));",METHOD: com.google.common.hash.HashTestUtils.assertHashByteBufferPreservesByteOrder(HashFunction),com.google.common.hash.HashTestUtils.assertHashByteBufferPreservesByteOrder(HashFunction),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());",METHOD: com.google.common.hash.HashTestUtils.assertHashByteBufferPreservesByteOrder(HashFunction),com.google.common.hash.HashTestUtils.assertHashByteBufferPreservesByteOrder(HashFunction),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,LINE_COMMENT: // go/do-not-mock-common-types-lsc,METHOD: com.google.common.hash.FunnelsTest.testSequential(),com.google.common.hash.FunnelsTest.testSequential(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Funnel<Object> elementFunnel = mock(Funnel.class);""",METHOD: com.google.common.hash.FunnelsTest.testSequential(),com.google.common.hash.FunnelsTest.testSequential(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network2).isSameAs(network1);,METHOD: com.google.common.graph.ImmutableNetworkTest.copyOfImmutableNetwork_optimized(),com.google.common.graph.ImmutableNetworkTest.copyOfImmutableNetwork_optimized(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(network.removeNode(N1));,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(network.removeNode(N1));,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(network.nodes()).containsExactly(N2, N4);",METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.edges()).doesNotContain(E12);,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.edges()).doesNotContain(E41);,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),com.google.common.graph.AbstractNetworkTest.removeNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: network.addNode(endpoints.nodeV());,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)","com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"RETURN_STATEMENT: network.addEdge(endpoints, e);","METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)","com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: network.addNode(endpoints.nodeU());,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)","com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: protected,MODIFIERS: ,"com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,RETURN_TYPE_DELETE,"SINGLE_TYPE: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String): boolean","METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)","com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,RETURN_TYPE_CHANGE,"PARAMETERIZED_TYPE: com.google.common.graph.AbstractNetworkTest.createGraph(): MutableNetwork<Integer, String>",METHOD: com.google.common.graph.AbstractNetworkTest.createGraph(),com.google.common.graph.AbstractNetworkTest.createGraph(),CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unused"") EndpointPair<Integer> unused = network.incidentNodes(E12);""",METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(network.removeEdge(E12));,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: network.incidentNodes(E12);,BODY: ,com.google.common.graph.AbstractNetworkTest.removeEdge_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: ImmutableSet<String> edges = ImmutableSet.copyOf(network.edges());,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(network.removeEdge(EDGE_NOT_IN_GRAPH));,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.edges()).containsExactlyElementsIn(edges);,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeEdge_edgeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,IF_STATEMENT: (network instanceof MutableNetwork),METHOD: com.google.common.graph.AbstractNetworkTest.init(),com.google.common.graph.AbstractNetworkTest.init(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"ASSIGNMENT: networkAsMutableNetwork = (MutableNetwork<Integer, String>) network;",THEN_STATEMENT: (network instanceof MutableNetwork),com.google.common.graph.AbstractNetworkTest.init(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(network.removeEdge(E12));,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(network.removeEdge(E12));,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.edges()).doesNotContain(E12);,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(network.edgesConnecting(N1, N2)).isEmpty();",METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),com.google.common.graph.AbstractNetworkTest.removeEdge_existingEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_newNode(),com.google.common.graph.AbstractNetworkTest.addNode_newNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(addNode(N1));,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_newNode(),com.google.common.graph.AbstractNetworkTest.addNode_newNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.nodes()).contains(N1);,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_newNode(),com.google.common.graph.AbstractNetworkTest.addNode_newNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: ImmutableSet<Integer> nodes = ImmutableSet.copyOf(network.nodes());,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(network.removeNode(NODE_NOT_IN_GRAPH));,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.nodes()).containsExactlyElementsIn(nodes);,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),com.google.common.graph.AbstractNetworkTest.removeNode_nodeNotPresent(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: network.addNode(n);,METHOD: com.google.common.graph.AbstractNetworkTest.addNode(Integer),com.google.common.graph.AbstractNetworkTest.addNode(Integer),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: protected,MODIFIERS: ,com.google.common.graph.AbstractNetworkTest.addNode(Integer),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * A proxy method that adds the node {@code n} to the graph being tested. In case of Immutable
   * graph implementations, this method should add {@code n} to the graph builder and build a new
   * graph with the current builder state.
   *
   * @return {@code true} iff the graph was modified as a result of this call
   */",METHOD: com.google.common.graph.AbstractNetworkTest.addNode(Integer),com.google.common.graph.AbstractNetworkTest.addNode(Integer),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,RETURN_TYPE_DELETE,SINGLE_TYPE: com.google.common.graph.AbstractNetworkTest.addNode(Integer): boolean,METHOD: com.google.common.graph.AbstractNetworkTest.addNode(Integer),com.google.common.graph.AbstractNetworkTest.addNode(Integer),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: network.addNode(n1);,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)","com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: network.addNode(n2);,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)","com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"RETURN_STATEMENT: network.addEdge(n1, n2, e);","METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)","com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * A proxy method that adds the edge {@code e} to the graph being tested. In case of Immutable
   * graph implementations, this method should add {@code e} to the graph builder and build a new
   * graph with the current builder state.
   *
   * <p>This method should be used in tests of specific implementations if you want to ensure
   * uniform behavior (including side effects) with how edges are added elsewhere in the tests. For
   * example, the existing implementations of this method explicitly add the supplied nodes to the
   * graph, and then call {@code graph.addEdge()} to connect the edge to the nodes; this is not part
   * of the contract of {@code graph.addEdge()} and is done for convenience. In cases where you want
   * to avoid such side effects (e.g., if you're testing what happens in your implementation if you
   * add an edge whose end-points don't already exist in the graph), you should <b>not</b> use this
   * method.
   *
   * <p>TODO(user): remove the addNode() calls, that's now contractually guaranteed
   *
   * @return {@code true} iff the graph was modified as a result of this call
   */","METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)","com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: protected,MODIFIERS: ,"com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,RETURN_TYPE_DELETE,"SINGLE_TYPE: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String): boolean","METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)","com.google.common.graph.AbstractNetworkTest.addEdge(Integer,Integer,String)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: ImmutableSet<Integer> nodes = ImmutableSet.copyOf(network.nodes());,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertFalse(addNode(N1));,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(network.nodes()).containsExactlyElementsIn(nodes);,METHOD: com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),com.google.common.graph.AbstractNetworkTest.addNode_existingNode(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(network.edges()).containsExactly(E12, E13, E14);",METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(network.removeEdge(E13));,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(network.edges()).containsExactly(E12, E14);",METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),com.google.common.graph.AbstractNetworkTest.removeEdge_oneOfMany(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unused"") Set<Integer> unused = network.adjacentNodes(N1);""",METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertTrue(network.removeNode(N1));,METHOD: com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: network.adjacentNodes(N1);,BODY: ,com.google.common.graph.AbstractNetworkTest.removeNode_queryAfterRemoval(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.hasEdgeConnecting_disconnectedNodes(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.concurrentIteration(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.hasEdgesConnecting_nodesNotInGraph(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.graphIsMutable(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ATTRIBUTE_TYPE_CHANGE,"PARAMETERIZED_TYPE: MutableNetwork<Integer, String>","FIELD: com.google.common.graph.AbstractNetworkTest.network : MutableNetwork<Integer, String>","com.google.common.graph.AbstractNetworkTest.network : Network<Integer, String>",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,"FIELD: com.google.common.graph.AbstractNetworkTest.networkAsMutableNetwork : MutableNetwork<Integer, String>",CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N4, N5, E12);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N1, N2, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N2, N1, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N1, N2, E12)).isFalse();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N2, N1, E12)).isFalse();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(endpoints, E12)).isTrue();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableDirectedGraphTest.incidentEdges_selfLoop(),CLASS: com.google.common.graph.ConfigurableDirectedGraphTest,com.google.common.graph.ConfigurableDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(fooReference1).isNotSameAs(fooReference2);,METHOD: com.google.common.graph.MapCacheTest.testRemoveEqualKeyWithDifferentReference(),com.google.common.graph.MapCacheTest.testRemoveEqualKeyWithDifferentReference(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getMessage()).contains(ERROR_SELF_LOOP);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.GraphsTest.createUndirected(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(transpose)).isSameAs(directedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_directedNetwork(),com.google.common.graph.GraphsTest.transpose_directedNetwork(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedNetwork(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedNetwork(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(undirectedGraph)).isSameAs(undirectedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_undirectedNetwork(),com.google.common.graph.GraphsTest.transpose_undirectedNetwork(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(undirectedGraph)).isSameAs(undirectedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_undirectedValueGraph(),com.google.common.graph.GraphsTest.transpose_undirectedValueGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(transpose)).isSameAs(directedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_directedValueGraph(),com.google.common.graph.GraphsTest.transpose_directedValueGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedValueGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedValueGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(undirectedGraph)).isSameAs(undirectedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_undirectedGraph(),com.google.common.graph.GraphsTest.transpose_undirectedGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e.getMessage()).contains(ERROR_SELF_LOOP);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.GraphsTest.createDirected(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transpose(transpose)).isSameAs(directedGraph);,METHOD: com.google.common.graph.GraphsTest.transpose_directedGraph(),com.google.common.graph.GraphsTest.transpose_directedGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node));,FOREACH_STATEMENT: Integer node:directedGraph.nodes(),com.google.common.graph.GraphsTest.transpose_directedGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,JAVADOC: /** Tests for {@link ConfigurableMutableValueGraph} and related functionality. */,CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(graph.incidentEdgeOrder()).isEqualTo(asGraph.incidentEdgeOrder());,METHOD: com.google.common.graph.ValueGraphTest.validateGraphState(),com.google.common.graph.ValueGraphTest.validateGraphState(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.incidentEdgeOrder_unordered(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.incidentEdges_stableIncidentEdgeOrder_preservesIncidentEdgesOrder_undirected(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.incidentEdgeOrder_stable(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.concurrentIteration(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraphTest.incidentEdges_stableIncidentEdgeOrder_preservesIncidentEdgesOrder_directed(),CLASS: com.google.common.graph.ValueGraphTest,com.google.common.graph.ValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N4, N5, E12);",BODY: ,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(N1, N2, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(addEdge(N1, N2, E12)).isFalse();",METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_orderMismatch(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_orderMismatch(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: addEdge(endpoints, E12);",BODY: ,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_orderMismatch(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableSimpleDirectedGraphTest.incidentEdges_checkReturnedSetMutability(),CLASS: com.google.common.graph.ConfigurableSimpleDirectedGraphTest,com.google.common.graph.ConfigurableSimpleDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableUndirectedGraphTest.incidentEdges_selfLoop(),CLASS: com.google.common.graph.ConfigurableUndirectedGraphTest,com.google.common.graph.ConfigurableUndirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,JAVADOC: /** Tests for {@link ImmutableGraph}. */,CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.copyOfImmutableValueGraph_optimized(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableValueGraph(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_addNode(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_putEdgeFromNodes(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_appliesGraphBuilderConfig(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_copiesGraphBuilder(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraphTest.immutableGraphBuilder_putEdgeFromEndpointPair(),CLASS: com.google.common.graph.ImmutableGraphTest,com.google.common.graph.ImmutableGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,METHOD_RENAMING,METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingEdgeBetweenSameNodes(),METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingEdgeBetweenSameNodes(),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(putEdge(N1, N2)).isTrue();",METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingEdgeBetweenSameNodes(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,METHOD_RENAMING,METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingNodes(),METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_existingNodes(),com.google.common.graph.AbstractDirectedGraphTest.addEdge_existingNodes(),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_mismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.putEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.removeEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_backwards(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.hasEdgeConnecting_correct(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedGraphTest.incidentEdges_oneEdge(),CLASS: com.google.common.graph.AbstractDirectedGraphTest,com.google.common.graph.AbstractDirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.ConfigurableSimpleUndirectedGraphTest.incidentEdges_checkReturnedSetMutability(),CLASS: com.google.common.graph.ConfigurableSimpleUndirectedGraphTest,com.google.common.graph.ConfigurableSimpleUndirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.hasEdgeConnecting_mismatch(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.hasEdgeConnecting_correct(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedGraphTest.incidentEdges_oneEdge(),CLASS: com.google.common.graph.AbstractUndirectedGraphTest,com.google.common.graph.AbstractUndirectedGraphTest,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficient).named((Pearson\'s correlation coefficient of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficient).named((Pearson\'s correlation coefficient of "" + values)).isWithin(ALLOWED_ERROR).of((stats.populationCovariance() / (stats.xStats().populationStandardDeviation() * stats.yStats().populationStandardDeviation())));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovariance).named((population covariance of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovariance).named((population covariance of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_PRODUCTS_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.max()).isEqualTo(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(oneValueAccumulator.max()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(oneValueAccumulatorByAddAllEmptyStats.max()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(twoValuesAccumulator.max()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(twoValuesAccumulatorByAddAllStats.max()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllIterable.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllIterator.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllVarargs.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByRepeatedAdd.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAndAddAll.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStats.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.max()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.max()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.max()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsAccumulatorTest.testMax(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(maxByAddAllStats).named((max by addAll(Stats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(maxByAddAllStats).named((max by addAll(Stats) of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);""",ELSE_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(maxByAddAllStats).named((max by addAll(Stats) of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);""",ELSE_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.mean()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMean(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.mean()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMean(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.mean()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMean(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.mean()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMean(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(meanByAddAllStats).named((mean by addAll(Stats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: (values.hasAnyPositiveInfinity() && values.hasAnyNegativeInfinity()),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(meanByAddAllStats).named((mean by addAll(Stats) of "" + values)).isNaN();""",THEN_STATEMENT: (values.hasAnyPositiveInfinity() && values.hasAnyNegativeInfinity()),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(meanByAddAllStats).named((mean by addAll(Stats) of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(meanByAddAllStats).named((mean by addAll(Stats) of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MEAN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(meanByAddAllStats).named((mean by addAll(Stats) of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MEAN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.populationVariance()).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.populationVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.populationVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.populationVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVariance).named((population variance of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVarianceByAddAllStats).named((population variance by addAll(Stats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVariance).named((population variance of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVarianceByAddAllStats).named((population variance by addAll(Stats) of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsAccumulatorTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.sum()).isWithin(ALLOWED_ERROR).of((MANY_VALUES_MEAN * MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testSum(),com.google.common.math.StatsAccumulatorTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.sum()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_MEAN * INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testSum(),com.google.common.math.StatsAccumulatorTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.sum()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_MEAN * LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testSum(),com.google.common.math.StatsAccumulatorTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.sum()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_MEAN * LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsAccumulatorTest.testSum(),com.google.common.math.StatsAccumulatorTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.sampleVariance()).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleVariance(),com.google.common.math.StatsAccumulatorTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.sampleVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleVariance(),com.google.common.math.StatsAccumulatorTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.sampleVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleVariance(),com.google.common.math.StatsAccumulatorTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.sampleVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleVariance(),com.google.common.math.StatsAccumulatorTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),com.google.common.math.StatsAccumulatorTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,ASSIGNMENT: manyValuesAccumulatorByAddAllStatsAccumulator = new StatsAccumulator();,METHOD: com.google.common.math.StatsAccumulatorTest.setUp(),com.google.common.math.StatsAccumulatorTest.setUp(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"METHOD_INVOCATION: manyValuesAccumulatorByAddAllStatsAccumulator.addAll(statsAccumulatorOf(MANY_VALUES.subList(0, (MANY_VALUES.size() / 2))));",METHOD: com.google.common.math.StatsAccumulatorTest.setUp(),com.google.common.math.StatsAccumulatorTest.setUp(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"METHOD_INVOCATION: manyValuesAccumulatorByAddAllStatsAccumulator.addAll(statsAccumulatorOf(MANY_VALUES.subList((MANY_VALUES.size() / 2), MANY_VALUES.size())));",METHOD: com.google.common.math.StatsAccumulatorTest.setUp(),com.google.common.math.StatsAccumulatorTest.setUp(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.min()).isEqualTo(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(oneValueAccumulator.min()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(oneValueAccumulatorByAddAllEmptyStats.min()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(twoValuesAccumulator.min()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(twoValuesAccumulatorByAddAllStats.min()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllIterable.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllIterator.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllVarargs.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByRepeatedAdd.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAndAddAll.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStats.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(integerManyValuesAccumulatorByAddAllIterable.min()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllIterator.min()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(longManyValuesAccumulatorByAddAllVarargs.min()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsAccumulatorTest.testMin(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(minByAddAllStats).named((min by addAll(Stats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(minByAddAllStats).named((min by addAll(Stats) of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(minByAddAllStats).named((min by addAll(Stats) of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsAccumulatorTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: assertThat(manyValuesAccumulatorByAddAllStatsAccumulator.count()).isEqualTo(MANY_VALUES_COUNT);,METHOD: com.google.common.math.StatsAccumulatorTest.testCount(),com.google.common.math.StatsAccumulatorTest.testCount(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsAccumulatorTest.statsAccumulatorOf(Iterable<? extends Number>),CLASS: com.google.common.math.StatsAccumulatorTest,com.google.common.math.StatsAccumulatorTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.math.StatsAccumulatorTest.manyValuesAccumulatorByAddAllStatsAccumulator : StatsAccumulator,CLASS: com.google.common.math.StatsAccumulatorTest,com.google.common.math.StatsAccumulatorTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse()).isSameAs(transformation);,METHOD: com.google.common.math.StatsTesting.assertLinearTransformationNaN(LinearTransformation),com.google.common.math.StatsTesting.assertLinearTransformationNaN(LinearTransformation),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse()).isSameAs(transformation.inverse());,"METHOD: com.google.common.math.StatsTesting.assertDiagonalLinearTransformation(LinearTransformation,double,double,double,double)","com.google.common.math.StatsTesting.assertDiagonalLinearTransformation(LinearTransformation,double,double,double,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse().inverse()).isSameAs(transformation);,"METHOD: com.google.common.math.StatsTesting.assertDiagonalLinearTransformation(LinearTransformation,double,double,double,double)","com.google.common.math.StatsTesting.assertDiagonalLinearTransformation(LinearTransformation,double,double,double,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse()).isSameAs(transformation.inverse());,"METHOD: com.google.common.math.StatsTesting.assertVerticalLinearTransformation(LinearTransformation,double)","com.google.common.math.StatsTesting.assertVerticalLinearTransformation(LinearTransformation,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse().inverse()).isSameAs(transformation);,"METHOD: com.google.common.math.StatsTesting.assertVerticalLinearTransformation(LinearTransformation,double)","com.google.common.math.StatsTesting.assertVerticalLinearTransformation(LinearTransformation,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse()).isSameAs(transformation.inverse());,"METHOD: com.google.common.math.StatsTesting.assertHorizontalLinearTransformation(LinearTransformation,double)","com.google.common.math.StatsTesting.assertHorizontalLinearTransformation(LinearTransformation,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(transformation.inverse().inverse()).isSameAs(transformation);,"METHOD: com.google.common.math.StatsTesting.assertHorizontalLinearTransformation(LinearTransformation,double)","com.google.common.math.StatsTesting.assertHorizontalLinearTransformation(LinearTransformation,double)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildConstantValuesPairedStats(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildLongManyValuesStatsSnapshot(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildHorizontalValuesPairedStats(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildManyValuesStatsSnapshot(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildVerticalValuesPairedStats(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsTesting.buildManyValuesPairedStats(),CLASS: com.google.common.math.StatsTesting,com.google.common.math.StatsTesting,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsTest.testSampleStandardDeviation(),com.google.common.math.StatsTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsTest.testSampleStandardDeviation(),com.google.common.math.StatsTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsTest.testSampleStandardDeviation(),com.google.common.math.StatsTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.sampleStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1))));,METHOD: com.google.common.math.StatsTest.testSampleStandardDeviation(),com.google.common.math.StatsTest.testSampleStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ONE_VALUE_STATS.max()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(TWO_VALUES_STATS.max()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_VARARGS.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_ITERABLE.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_SNAPSHOT.max()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.max()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.max()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.max()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.max()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MAX);,METHOD: com.google.common.math.StatsTest.testMax(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(max).named((max of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MAX);""",ELSE_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsTest.testMax(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.mean()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMean(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.mean()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMean(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.mean()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMean(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.mean()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMean(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: (values.hasAnyPositiveInfinity() && values.hasAnyNegativeInfinity()),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MEAN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMean(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.populationVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testPopulationVariance(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.populationVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testPopulationVariance(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.populationVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testPopulationVariance(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.populationVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testPopulationVariance(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVariance).named((population variance of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationVariance).named((population variance of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.StatsTest.testPopulationVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(ONE_VALUE_STATS.min()).isWithin(ALLOWED_ERROR).of(ONE_VALUE);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(TWO_VALUES_STATS.min()).isWithin(ALLOWED_ERROR).of(TWO_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_VARARGS.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_ITERABLE.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(MANY_VALUES_STATS_ITERATOR.min()).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.min()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.min()).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.min()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.min()).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MIN);,METHOD: com.google.common.math.StatsTest.testMin(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(min).named((min of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MIN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMin(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.sum()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_MEAN * INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testSum(),com.google.common.math.StatsTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.sum()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_MEAN * INTEGER_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testSum(),com.google.common.math.StatsTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.sum()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_MEAN * LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testSum(),com.google.common.math.StatsTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.sum()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_MEAN * LONG_MANY_VALUES_COUNT));,METHOD: com.google.common.math.StatsTest.testSum(),com.google.common.math.StatsTest.testSum(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.sampleVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsTest.testSampleVariance(),com.google.common.math.StatsTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.sampleVariance()).isWithin(ALLOWED_ERROR).of((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (INTEGER_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsTest.testSampleVariance(),com.google.common.math.StatsTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.sampleVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsTest.testSampleVariance(),com.google.common.math.StatsTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.sampleVariance()).isWithin(ALLOWED_ERROR).of((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / (LONG_MANY_VALUES_COUNT - 1)));,METHOD: com.google.common.math.StatsTest.testSampleVariance(),com.google.common.math.StatsTest.testSampleVariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Stats.meanOf(INTEGER_MANY_VALUES)).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMeanOf(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Stats.meanOf(Ints.toArray(INTEGER_MANY_VALUES))).isWithin(ALLOWED_ERROR).of(INTEGER_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMeanOf(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Stats.meanOf(LONG_MANY_VALUES)).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMeanOf(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Stats.meanOf(Longs.toArray(LONG_MANY_VALUES))).isWithin(ALLOWED_ERROR).of(LONG_MANY_VALUES_MEAN);,METHOD: com.google.common.math.StatsTest.testMeanOf(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNaN(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNaN();""",THEN_STATEMENT: (values.hasAnyPositiveInfinity() && values.hasAnyNegativeInfinity()),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isPositiveInfinity();""",THEN_STATEMENT: values.hasAnyPositiveInfinity(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isNegativeInfinity();""",THEN_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(mean).named((mean of "" + values)).isWithin(ALLOWED_ERROR).of(MANY_VALUES_MEAN);""",ELSE_STATEMENT: values.hasAnyNegativeInfinity(),com.google.common.math.StatsTest.testMeanOf(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_VARARGS.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsTest.testPopulationStandardDeviation(),com.google.common.math.StatsTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(INTEGER_MANY_VALUES_STATS_ITERABLE.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((INTEGER_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / INTEGER_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsTest.testPopulationStandardDeviation(),com.google.common.math.StatsTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_ITERATOR.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsTest.testPopulationStandardDeviation(),com.google.common.math.StatsTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(LONG_MANY_VALUES_STATS_SNAPSHOT.populationStandardDeviation()).isWithin(ALLOWED_ERROR).of(sqrt((LONG_MANY_VALUES_SUM_OF_SQUARES_OF_DELTAS / LONG_MANY_VALUES_COUNT)));,METHOD: com.google.common.math.StatsTest.testPopulationStandardDeviation(),com.google.common.math.StatsTest.testPopulationStandardDeviation(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficient).named((Pearson\'s correlation coefficient of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficient).named((Pearson\'s correlation coefficient by addAll(PairedStats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficient).named((Pearson\'s correlation coefficient of "" + values)).isWithin(ALLOWED_ERROR).of((accumulator.populationCovariance() / (accumulator.xStats().populationStandardDeviation() * accumulator.yStats().populationStandardDeviation())));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(pearsonsCorrelationCoefficientByAddAllPartitionedPairedStats).named((Pearson\'s correlation coefficient by addAll(PairedStats) of "" + values)).isWithin(ALLOWED_ERROR).of((accumulatorByAddAllPartitionedPairedStats.populationCovariance() / (accumulatorByAddAllPartitionedPairedStats.xStats().populationStandardDeviation() * accumulatorByAddAllPartitionedPairedStats.yStats().populationStandardDeviation())));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPearsonsCorrelationCoefficient(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovariance).named((population covariance of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovarianceByAddAllPartitionedPairedStats).named((population covariance by addAll(PairedStats) of "" + values)).isNaN();""",THEN_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovariance).named((population covariance of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_PRODUCTS_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(populationCovarianceByAddAllPartitionedPairedStats).named((population covariance by addAll(PairedStats) of "" + values)).isWithin(ALLOWED_ERROR).of((MANY_VALUES_SUM_OF_PRODUCTS_OF_DELTAS / MANY_VALUES_COUNT));""",ELSE_STATEMENT: values.hasAnyNonFinite(),com.google.common.math.PairedStatsAccumulatorTest.testPopulationCovariance(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,METHOD_RENAMING,METHOD: com.google.common.testing.AbstractPackageSanityTestsTest.testFindClassesToTeset_ignoreUnderscores(),METHOD: com.google.common.testing.AbstractPackageSanityTestsTest.testFindClassesToTeset_ignoreUnderscores(),com.google.common.testing.AbstractPackageSanityTestsTest.testFindClassesToTest_ignoreUnderscores(),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: this.buffer = (T[]) new Object[(k * 2)];,"METHOD: com.google.common.collect.TopKSelector.TopKSelector(Comparator<? super T>,int)","com.google.common.collect.TopKSelector.TopKSelector(Comparator<? super T>,int)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns a map view that associates each key with the corresponding values in the multimap.
   * Changes to the returned map, such as element removal, will update the underlying multimap. The
   * map does not support {@code setValue()} on its entries, {@code put}, or {@code putAll}.
   *
   * <p>When passed a key that is present in the map, {@code asMap().get(Object)} has the same
   * behavior as {@link #get}, returning a live collection. When passed a key that is not present,
   * however, {@code asMap().get(Object)} returns {@code null} instead of an empty collection.
   *
   * <p><b>Note:</b> The returned map's values are guaranteed to be of type {@link SortedSet}. To
   * obtain this map with the more specific generic type {@code Map<K, SortedSet<V>>}, call {@link
   * Multimaps#asMap(SortedSetMultimap)} instead.
   */",METHOD: com.google.common.collect.SortedSetMultimap.asMap(),com.google.common.collect.SortedSetMultimap.asMap(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings(unchecked"") Multiset<Object> multiset = (Multiset) multiset();""",THEN_STATEMENT: (entryCount != 0),com.google.common.collect.Multisets.EntrySet.remove(Object),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_ORDERING_CHANGE,SWITCH_CASE: DONE,SWITCH_STATEMENT: state,com.google.common.base.AbstractIterator.hasNext(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_ORDERING_CHANGE,RETURN_STATEMENT: false;,SWITCH_STATEMENT: state,com.google.common.base.AbstractIterator.hasNext(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns an immutable list containing a single element. This list behaves and performs
   * comparably to {@link Collections#singleton}, but will not accept a null element. It is
   * preferable mainly for consistency and maintainability of your code.
   *
   * @throws NullPointerException if {@code element} is null
   */",METHOD: com.google.common.collect.ImmutableList.of(E),com.google.common.collect.ImmutableList.of(E),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_UPDATE,"BLOCK_COMMENT: /*
     * GWT claims to support java.lang.Character's char-classification methods, but it actually only
     * works for ASCII. So for now, assume any non-ASCII characters are valid. The only place this
     * seems to be documented is here:
     * http://osdir.com/ml/GoogleWebToolkitContributors/2010-03/msg00178.html
     *
     * <p>ASCII characters in the part are expected to be valid per RFC 1035, with underscore also
     * being allowed due to widespread practice.
     */","METHOD: com.google.common.net.InternetDomainName.validatePart(String,boolean)","com.google.common.net.InternetDomainName.validatePart(String,boolean)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (isFinalPart && CharMatcher.digit().matches(part.charAt(0))),"METHOD: com.google.common.net.InternetDomainName.validatePart(String,boolean)","com.google.common.net.InternetDomainName.validatePart(String,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InternetDomainName.DIGIT_MATCHER : CharMatcher,CLASS: com.google.common.net.InternetDomainName,com.google.common.net.InternetDomainName,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InternetDomainName.LETTER_MATCHER : CharMatcher,CLASS: com.google.common.net.InternetDomainName,com.google.common.net.InternetDomainName,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ATTRIBUTE_RENAMING,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_VERSIONS : String,FIELD: com.google.common.net.HttpHeaders.SEC_WEBSOCKET_VERSIONS : String,com.google.common.net.HttpHeaders.SEC_WEBSOCKET_VERSION : String,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.UPGRADE_INSECURE_REQUESTS : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.CROSS_ORIGIN_RESOURCE_POLICY : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.CDN_LOOP : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.CROSS_ORIGIN_OPENER_POLICY : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(value);,"METHOD: com.google.common.net.MediaType.normalizeParameterValue(String,String)","com.google.common.net.MediaType.normalizeParameterValue(String,String)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,LINE_COMMENT: // for GWT,"METHOD: com.google.common.net.MediaType.normalizeParameterValue(String,String)","com.google.common.net.MediaType.normalizeParameterValue(String,String)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Multimap<String, String> quotedParameters = Multimaps.transformValues(parameters, new Function<String, String>() {
  public @Override String apply(String value) {
    return (TOKEN_MATCHER.matchesAllOf(value) ? value : escapeAndQuote(value));
  }
});",THEN_STATEMENT: (! parameters.isEmpty()),com.google.common.net.MediaType.computeToString(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkArgument((! token.isEmpty()));,METHOD: com.google.common.net.MediaType.normalizeToken(String),com.google.common.net.MediaType.normalizeToken(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.MEDIA_PRESENTATION_DESCRIPTION : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.HEIF : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.OPENSEARCH_DESCRIPTION_UTF_8 : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.JP2K : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.GEO_JSON : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int percentIndex = (- 1);,METHOD: com.google.common.net.InetAddresses.ipStringToBytes(String),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,IF_STATEMENT: (c == '.'),FOR_STATEMENT: (i < ipString.length()),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (c == '.'),IF_STATEMENT: (c == '.'),com.google.common.net.InetAddresses.ipStringToBytes(String),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,IF_STATEMENT: (percentIndex != (- 1)),THEN_STATEMENT: hasColon,com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"ASSIGNMENT: ipString = ipString.substring(0, percentIndex);",THEN_STATEMENT: (percentIndex != (- 1)),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,ASSIGNMENT: percentIndex = i;,THEN_STATEMENT: (c == '%'),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,BREAK_STATEMENT: ,THEN_STATEMENT: (c == '%'),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,LINE_COMMENT: // everything after a '%' is ignored (it's a Scope ID): http://superuser.com/a/99753,ELSE_STATEMENT: (c == ':'),com.google.common.net.InetAddresses.ipStringToBytes(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,IF_STATEMENT: (c == '.'),FOR_STATEMENT: (i < ipString.length()),com.google.common.net.InetAddresses.ipStringToBytes(String),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (c == '.'),ELSE_STATEMENT: (c == '.'),com.google.common.net.InetAddresses.ipStringToBytes(String),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (c == ':'),ELSE_STATEMENT: (c == '.'),com.google.common.net.InetAddresses.ipStringToBytes(String),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_INSERT,JAVADOC: /** Returns {@code null} if unable to parse into a {@code byte[]}. */,METHOD: com.google.common.net.InetAddresses.ipStringToBytes(String),com.google.common.net.InetAddresses.ipStringToBytes(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddresses.toBigInteger(InetAddress),CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddresses.fromIPv4BigInteger(BigInteger),CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.net.InetAddresses.fromBigInteger(BigInteger,boolean)",CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.InetAddresses.fromIPv6BigInteger(BigInteger),CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: (hitCount + missCount);,METHOD: com.google.common.cache.CacheStats.requestCount(),com.google.common.cache.CacheStats.requestCount(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the number of times {@link Cache} lookup methods have returned either a cached or
   * uncached value. This is defined as {@code hitCount + missCount}.
   */",METHOD: com.google.common.cache.CacheStats.requestCount(),com.google.common.cache.CacheStats.requestCount(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new CacheStats(Math.max(0, (hitCount - other.hitCount)), Math.max(0, (missCount - other.missCount)), Math.max(0, (loadSuccessCount - other.loadSuccessCount)), Math.max(0, (loadExceptionCount - other.loadExceptionCount)), Math.max(0, (totalLoadTime - other.totalLoadTime)), Math.max(0, (evictionCount - other.evictionCount)));",METHOD: com.google.common.cache.CacheStats.minus(CacheStats),com.google.common.cache.CacheStats.minus(CacheStats),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: long totalLoadCount = (loadSuccessCount + loadExceptionCount);,METHOD: com.google.common.cache.CacheStats.averageLoadPenalty(),com.google.common.cache.CacheStats.averageLoadPenalty(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the average time spent loading new values. This is defined as {@code totalLoadTime /
   * (loadSuccessCount + loadExceptionCount)}.
   */",METHOD: com.google.common.cache.CacheStats.averageLoadPenalty(),com.google.common.cache.CacheStats.averageLoadPenalty(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new CacheStats((hitCount + other.hitCount), (missCount + other.missCount), (loadSuccessCount + other.loadSuccessCount), (loadExceptionCount + other.loadExceptionCount), (totalLoadTime + other.totalLoadTime), (evictionCount + other.evictionCount));",METHOD: com.google.common.cache.CacheStats.plus(CacheStats),com.google.common.cache.CacheStats.plus(CacheStats),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns a new {@code CacheStats} representing the sum of this {@code CacheStats} and {@code
   * other}.
   *
   * @since 11.0
   */",METHOD: com.google.common.cache.CacheStats.plus(CacheStats),com.google.common.cache.CacheStats.plus(CacheStats),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: (loadSuccessCount + loadExceptionCount);,METHOD: com.google.common.cache.CacheStats.loadCount(),com.google.common.cache.CacheStats.loadCount(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the total number of times that {@link Cache} lookup methods attempted to load new
   * values. This includes both successful load operations, as well as those that threw exceptions.
   * This is defined as {@code loadSuccessCount + loadExceptionCount}.
   */",METHOD: com.google.common.cache.CacheStats.loadCount(),com.google.common.cache.CacheStats.loadCount(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: long totalLoadCount = (loadSuccessCount + loadExceptionCount);,METHOD: com.google.common.cache.CacheStats.loadExceptionRate(),com.google.common.cache.CacheStats.loadExceptionRate(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the ratio of cache loading attempts which threw exceptions. This is defined as {@code
   * loadExceptionCount / (loadSuccessCount + loadExceptionCount)}, or {@code 0.0} when {@code
   * loadSuccessCount + loadExceptionCount == 0}.
   */",METHOD: com.google.common.cache.CacheStats.loadExceptionRate(),com.google.common.cache.CacheStats.loadExceptionRate(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new CacheStats(hitCount.sum(), missCount.sum(), loadSuccessCount.sum(), loadExceptionCount.sum(), totalLoadTime.sum(), evictionCount.sum());",METHOD: com.google.common.cache.AbstractCache.SimpleStatsCounter.snapshot(),com.google.common.cache.AbstractCache.SimpleStatsCounter.snapshot(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.cache.AbstractCache.SimpleStatsCounter.negativeToMaxValue(long),CLASS: com.google.common.cache.AbstractCache.SimpleStatsCounter,com.google.common.cache.AbstractCache.SimpleStatsCounter,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_DELETE,"JAVADOC: /** Returns the time that this entry was last written, in ns. */",METHOD: com.google.common.cache.ReferenceEntry.getWriteTime(),com.google.common.cache.ReferenceEntry.getWriteTime(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_CHANGE,SINGLE_TYPE: OutputT,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_DELETE,PARAMETERIZED_TYPE: AbstractFuture.TrustedFuture,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
 * A future made up of a collection of sub-futures.
 *
 * @param <InputT> the type of the individual inputs
 * @param <OutputT> the type of the output (i.e. this) future
 */",CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: releaseResources(OUTPUT_FUTURE_DONE);,METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,LINE_COMMENT: // nulls out `futures`,METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: RunningState localRunningState = runningState;,METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_DELETE,LINE_COMMENT: // Let go of the memory held by the running state,THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: this.runningState = null;,THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,METHOD_INVOCATION: localRunningState.interruptTask();,THEN_STATEMENT: wasInterrupted,com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: wasInterrupted,THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (localRunningState != null),METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: ImmutableCollection<? extends ListenableFuture<? extends InputT>> futures = localRunningState.futures;,THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,IF_STATEMENT: (isCancelled() & (futures != null)),THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: boolean wasInterrupted = wasInterrupted();,THEN_STATEMENT: (localRunningState != null),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: ImmutableCollection<? extends ListenableFuture<? extends InputT>> futures = localRunningState.futures;,METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (isCancelled() & (futures != null)),METHOD: com.google.common.util.concurrent.AggregateFuture.afterDone(),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,FOREACH_STATEMENT: ListenableFuture<?> future:futures,THEN_STATEMENT: (isCancelled() & (futures != null)),com.google.common.util.concurrent.AggregateFuture.afterDone(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,RETURN_STATEMENT: super.pendingToString();,METHOD: com.google.common.util.concurrent.AggregateFuture.pendingToString(),com.google.common.util.concurrent.AggregateFuture.pendingToString(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: RunningState localRunningState = runningState;,METHOD: com.google.common.util.concurrent.AggregateFuture.pendingToString(),com.google.common.util.concurrent.AggregateFuture.pendingToString(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: null;,THEN_STATEMENT: (localRunningState == null),com.google.common.util.concurrent.AggregateFuture.pendingToString(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (localRunningState == null),METHOD: com.google.common.util.concurrent.AggregateFuture.pendingToString(),com.google.common.util.concurrent.AggregateFuture.pendingToString(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: null;,METHOD: com.google.common.util.concurrent.AggregateFuture.pendingToString(),com.google.common.util.concurrent.AggregateFuture.pendingToString(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: ImmutableCollection<? extends ListenableFuture<? extends InputT>> localFutures = localRunningState.futures;,METHOD: com.google.common.util.concurrent.AggregateFuture.pendingToString(),com.google.common.util.concurrent.AggregateFuture.pendingToString(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: ((futures=["" + localFutures) + ""]"");""",THEN_STATEMENT: (localFutures != null),com.google.common.util.concurrent.AggregateFuture.pendingToString(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.util.concurrent.AggregateFuture.pendingToString(),CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.init(),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.handleAllCompleted(),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.handleException(Throwable),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.AggregateFuture.AggregateFuture(ImmutableCollection<? extends ListenableFuture<? extends InputT>>,boolean,boolean)",CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.releaseResources(ReleaseResourcesReason),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.AggregateFuture.collectOneValue(int,InputT)",CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.addInitialException(Set<Throwable>),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.log(Throwable),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.decrementCountAndMaybeComplete(ImmutableCollection<? extends Future<? extends InputT>>),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.AggregateFuture.collectValueFromNonCancelledFuture(int,Future<? extends InputT>)",CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.processCompleted(ImmutableCollection<? extends Future<? extends InputT>>),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.init(RunningState),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFuture.AggregateFuture(),CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.AggregateFuture.allMustSucceed : boolean,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.AggregateFuture.futures : ImmutableCollection<? extends ListenableFuture<? extends InputT>>,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.AggregateFuture.collectsValues : boolean,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_OBJECT_STATE,FIELD: com.google.common.util.concurrent.AggregateFuture.runningState : RunningState,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_CLASS,CLASS: com.google.common.util.concurrent.AggregateFuture.RunningState,CLASS: com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.AggregateFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.ForwardingFluentFuture.toString(),CLASS: com.google.common.util.concurrent.ForwardingFluentFuture,com.google.common.util.concurrent.ForwardingFluentFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"CONSTRUCTOR_INVOCATION: super(futures, allMustSucceed);","METHOD: com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)","com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: init();,"METHOD: com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)","com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CONSTRUCTOR_INVOCATION: super();,"METHOD: com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)","com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: init(new ListFutureRunningState(futures, allMustSucceed));","METHOD: com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)","com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CollectionFuture.ListFuture.combine(List<Optional<V>>),CLASS: com.google.common.util.concurrent.CollectionFuture.ListFuture,com.google.common.util.concurrent.CollectionFuture.ListFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_CLASS,CLASS: com.google.common.util.concurrent.CollectionFuture.ListFuture.ListFutureRunningState,CLASS: com.google.common.util.concurrent.CollectionFuture.ListFuture,com.google.common.util.concurrent.CollectionFuture.ListFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.CollectionFuture.collectOneValue(int,V)",CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.CollectionFuture.CollectionFuture(ImmutableCollection<? extends ListenableFuture<? extends V>>,boolean)",CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CollectionFuture.combine(List<Optional<V>>),CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CollectionFuture.handleAllCompleted(),CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CollectionFuture.releaseResources(ReleaseResourcesReason),CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CollectionFuture.CollectionFuture(),CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.CollectionFuture.values : List<Optional<V>>,CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_CLASS,CLASS: com.google.common.util.concurrent.CollectionFuture.CollectionFutureRunningState,CLASS: com.google.common.util.concurrent.CollectionFuture,com.google.common.util.concurrent.CollectionFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_INSERT,PARAMETERIZED_TYPE: AbstractFuture.TrustedFuture,CLASS: com.google.common.util.concurrent.AggregateFutureState,com.google.common.util.concurrent.AggregateFutureState,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_INSERT,SINGLE_TYPE: OutputT,TYPE_PARAMETERS: ,com.google.common.util.concurrent.AggregateFutureState,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,POSTFIX_EXPRESSION: state.remaining --;,SYNCHRONIZED_STATEMENT: state,com.google.common.util.concurrent.AggregateFutureState.SynchronizedAtomicHelper.decrementAndGetRemainingCount(AggregateFutureState),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: state.remaining;,SYNCHRONIZED_STATEMENT: state,com.google.common.util.concurrent.AggregateFutureState.SynchronizedAtomicHelper.decrementAndGetRemainingCount(AggregateFutureState),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.AggregateFutureState.clearSeenExceptions(),CLASS: com.google.common.util.concurrent.AggregateFutureState,com.google.common.util.concurrent.AggregateFutureState,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"CONSTRUCTOR_INVOCATION: super(futures, allMustSucceed, false);","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"ASSIGNMENT: this.task = new AsyncCallableInterruptibleTask(callable, listenerExecutor);","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: init();,"METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CONSTRUCTOR_INVOCATION: super();,"METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: init(new CombinedFutureRunningState(futures, allMustSucceed, new AsyncCallableInterruptibleTask(callable, listenerExecutor)));","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,AsyncCallable<V>)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.CombinedFutureInterruptibleTask(Executor),HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: setException(e);,THEN_STATEMENT: thrownByExecute,com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.execute(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"BLOCK_COMMENT: /*
       * The future no longer needs to interrupt this task, so it no longer needs a reference to it.
       *
       * TODO(cpovirk): It might be nice for our InterruptibleTask subclasses to null out their
       *  `callable` fields automatically. That would make it less important for us to null out the
       * reference to `task` here (though it's still nice to do so in case our reference to the
       * executor keeps it alive). Ideally, nulling out `callable` would be the responsibility of
       * InterruptibleTask itself so that its other subclasses also benefit. (Handling `callable` in
       * InterruptibleTask itself might also eliminate some of the existing boilerplate for, e.g.,
       * pendingToString().)
       */","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)","com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,ASSIGNMENT: CombinedFuture.this.task = null;,"METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)","com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: setException(error.getCause());,THEN_STATEMENT: (error instanceof ExecutionException),"com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: setException(error);,ELSE_STATEMENT: (error instanceof CancellationException),"com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.afterRanInterruptibly(T,Throwable)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,"com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.CallableInterruptibleTask(Callable<V>,Executor)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"CONSTRUCTOR_INVOCATION: super(futures, allMustSucceed, false);","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"ASSIGNMENT: this.task = new CallableInterruptibleTask(callable, listenerExecutor);","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: init();,"METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CONSTRUCTOR_INVOCATION: super();,"METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"METHOD_INVOCATION: init(new CombinedFutureRunningState(futures, allMustSucceed, new CallableInterruptibleTask(callable, listenerExecutor)));","METHOD: com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)","com.google.common.util.concurrent.CombinedFuture.CombinedFuture(ImmutableCollection<? extends ListenableFuture<?>>,boolean,Executor,Callable<V>)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: setFuture(value);,METHOD: com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.setValue(ListenableFuture<V>),com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.setValue(ListenableFuture<V>),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,"com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.AsyncCallableInterruptibleTask(AsyncCallable<V>,Executor)",HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CombinedFuture.interruptTask(),CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CombinedFuture.handleAllCompleted(),CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.CombinedFuture.releaseResources(ReleaseResourcesReason),CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.CombinedFuture.collectOneValue(int,Object)",CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.util.concurrent.CombinedFuture.task : CombinedFutureInterruptibleTask<?>,CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVED_CLASS,CLASS: com.google.common.util.concurrent.CombinedFuture.CombinedFutureRunningState,CLASS: com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture,HIGH
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: ((timeoutNanos <= 0L) ? 0L : ((timeoutNanos > ((Long.MAX_VALUE / 4) * 3)) ? ((Long.MAX_VALUE / 4) * 3) : timeoutNanos));,"METHOD: com.google.common.util.concurrent.Monitor.toSafeNanos(long,TimeUnit)","com.google.common.util.concurrent.Monitor.toSafeNanos(long,TimeUnit)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: annotations.toArray(new Annotation[annotations.size()]);,METHOD: com.google.common.reflect.Parameter.getDeclaredAnnotations(),com.google.common.reflect.Parameter.getDeclaredAnnotations(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: this.byteArrayOutputSteam = byteArrayOutputSteam;,METHOD: com.google.common.io.ByteStreams.ByteArrayDataOutputStream.ByteArrayDataOutputStream(ByteArrayOutputStream),com.google.common.io.ByteStreams.ByteArrayDataOutputStream.ByteArrayDataOutputStream(ByteArrayOutputStream),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: output = new DataOutputStream(byteArrayOutputSteam);,METHOD: com.google.common.io.ByteStreams.ByteArrayDataOutputStream.ByteArrayDataOutputStream(ByteArrayOutputStream),com.google.common.io.ByteStreams.ByteArrayDataOutputStream.ByteArrayDataOutputStream(ByteArrayOutputStream),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARAMETER_RENAMING,PARAMETER: byteArrayOutputSteam,PARAMETERS: ,com.google.common.io.ByteStreams.ByteArrayDataOutputStream.ByteArrayDataOutputStream(ByteArrayOutputStream),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: byteArrayOutputSteam.toByteArray();,METHOD: com.google.common.io.ByteStreams.ByteArrayDataOutputStream.toByteArray(),com.google.common.io.ByteStreams.ByteArrayDataOutputStream.toByteArray(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ATTRIBUTE_RENAMING,FIELD: com.google.common.io.ByteStreams.ByteArrayDataOutputStream.byteArrayOutputSteam : ByteArrayOutputStream,FIELD: com.google.common.io.ByteStreams.ByteArrayDataOutputStream.byteArrayOutputSteam : ByteArrayOutputStream,com.google.common.io.ByteStreams.ByteArrayDataOutputStream.byteArrayOutputStream : ByteArrayOutputStream,MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"METHOD_INVOCATION: checkPositionIndexes(off, (off + len), b.length);","METHOD: com.google.common.io.ByteStreams.read(InputStream,byte[],int,int)","com.google.common.io.ByteStreams.read(InputStream,byte[],int,int)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"THROW_STATEMENT: new IndexOutOfBoundsException(len is negative"");""",THEN_STATEMENT: (len < 0),"com.google.common.io.ByteStreams.read(InputStream,byte[],int,int)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Reads some bytes from an input stream and stores them into the buffer array {@code b}. This
   * method blocks until {@code len} bytes of input data have been read into the array, or end of
   * file is detected. The number of bytes read is returned, possibly zero. Does not close the
   * stream.
   *
   * <p>A caller can detect EOF if the number of bytes read is less than {@code len}. All subsequent
   * calls on the same stream will return zero.
   *
   * <p>If {@code b} is null, a {@code NullPointerException} is thrown. If {@code off} is negative,
   * or {@code len} is negative, or {@code off+len} is greater than the length of the array {@code
   * b}, then an {@code IndexOutOfBoundsException} is thrown. If {@code len} is zero, then no bytes
   * are read. Otherwise, the first byte read is stored into element {@code b[off]}, the next one
   * into {@code b[off+1]}, and so on. The number of bytes read is, at most, equal to {@code len}.
   *
   * @param in the input stream to read from
   * @param b the buffer into which the data is read
   * @param off an int specifying the offset into the data
   * @param len an int specifying the number of bytes to read
   * @return the number of bytes read
   * @throws IOException if an I/O error occurs
   */","METHOD: com.google.common.io.ByteStreams.read(InputStream,byte[],int,int)","com.google.common.io.ByteStreams.read(InputStream,byte[],int,int)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,RETURN_STATEMENT: new ByteArrayDataOutputStream(checkNotNull(byteArrayOutputSteam));,METHOD: com.google.common.io.ByteStreams.newDataOutput(ByteArrayOutputStream),com.google.common.io.ByteStreams.newDataOutput(ByteArrayOutputStream),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARAMETER_RENAMING,PARAMETER: byteArrayOutputSteam,PARAMETERS: ,com.google.common.io.ByteStreams.newDataOutput(ByteArrayOutputStream),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,LINE_COMMENT: // A buffer is allocated if skipSafely does not skip any bytes.,"METHOD: com.google.common.io.ByteStreams.skipUpTo(InputStream,long)","com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: byte[] buf = null;,"METHOD: com.google.common.io.ByteStreams.skipUpTo(InputStream,long)","com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,IF_STATEMENT: (buf == null),THEN_STATEMENT: (skipped == 0),"com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // Allocate a buffer bounded by the maximum size that can be requested, for
          // example an array of BUFFER_SIZE is unnecessary when the value of remaining
          // is smaller.",THEN_STATEMENT: (buf == null),"com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,ASSIGNMENT: buf = new byte[skip];,THEN_STATEMENT: (buf == null),"com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: byte[] buf = createBuffer();,"METHOD: com.google.common.io.ByteStreams.skipUpTo(InputStream,long)","com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: int skip = (int) Math.min(remaining, buf.length);",THEN_STATEMENT: (skipped == 0),"com.google.common.io.ByteStreams.skipUpTo(InputStream,long)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
 * An {@link OutputStream} that starts buffering to a byte array, but switches to file buffering
 * once the data reaches a configurable size.
 *
 * <p>This class is thread-safe.
 *
 * @author Chris Nokleberg
 * @since 1.0
 */",CLASS: com.google.common.io.FileBackedOutputStream,com.google.common.io.FileBackedOutputStream,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"CONSTRUCTOR_INVOCATION: this(fileThreshold, resetOnFinalize, null);","METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,CONSTRUCTOR_INVOCATION: super();,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: this.fileThreshold = fileThreshold;,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: this.resetOnFinalize = resetOnFinalize;,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: memory = new MemoryOutput();,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: out = memory;,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"ASSIGNMENT: source = new ByteSource() {
  public @Override InputStream openStream() throws IOException {
    return openInputStream();
  }
  protected @Override void finalize() {
    try
      {
        reset();
      }
    catch (Throwable t)
      {
        t.printStackTrace(System.err);
      }
  }
};",THEN_STATEMENT: resetOnFinalize,"com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"ASSIGNMENT: source = new ByteSource() {
  public @Override InputStream openStream() throws IOException {
    return openInputStream();
  }
};",ELSE_STATEMENT: resetOnFinalize,"com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: resetOnFinalize,IF_STATEMENT: resetOnFinalize,"com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: resetOnFinalize,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Creates a new instance that uses the given file threshold, and optionally resets the data when
   * the {@link ByteSource} returned by {@link #asByteSource} is finalized.
   *
   * @param fileThreshold the number of bytes before the stream should switch to buffering to a file
   * @param resetOnFinalize if true, the {@link #reset} method will be called when the {@link
   *     ByteSource} returned by {@link #asByteSource} is finalized
   */","METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)","com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.io.FileBackedOutputStream.FileBackedOutputStream(int,boolean,File)",CLASS: com.google.common.io.FileBackedOutputStream,com.google.common.io.FileBackedOutputStream,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.io.FileBackedOutputStream.parentDirectory : File,CLASS: com.google.common.io.FileBackedOutputStream,com.google.common.io.FileBackedOutputStream,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractGraph<N>() {
  public @Override Set<N> nodes() {
    return AbstractValueGraph.this.nodes();
  }
  public @Override Set<EndpointPair<N>> edges() {
    return AbstractValueGraph.this.edges();
  }
  public @Override boolean isDirected() {
    return AbstractValueGraph.this.isDirected();
  }
  public @Override boolean allowsSelfLoops() {
    return AbstractValueGraph.this.allowsSelfLoops();
  }
  public @Override ElementOrder<N> nodeOrder() {
    return AbstractValueGraph.this.nodeOrder();
  }
  public @Override Set<N> adjacentNodes(N node) {
    return AbstractValueGraph.this.adjacentNodes(node);
  }
  public @Override Set<N> predecessors(N node) {
    return AbstractValueGraph.this.predecessors(node);
  }
  public @Override Set<N> successors(N node) {
    return AbstractValueGraph.this.successors(node);
  }
  public @Override int degree(N node) {
    return AbstractValueGraph.this.degree(node);
  }
  public @Override int inDegree(N node) {
    return AbstractValueGraph.this.inDegree(node);
  }
  public @Override int outDegree(N node) {
    return AbstractValueGraph.this.outDegree(node);
  }
};",METHOD: com.google.common.graph.AbstractValueGraph.asGraph(),com.google.common.graph.AbstractValueGraph.asGraph(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new ElementOrder<S>(Type.SORTED, comparator);",METHOD: com.google.common.graph.ElementOrder.sorted(Comparator<S>),com.google.common.graph.ElementOrder.sorted(Comparator<S>),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,SWITCH_CASE: STABLE,SWITCH_STATEMENT: type,com.google.common.graph.ElementOrder.createMap(int),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ElementOrder.stable(),CLASS: com.google.common.graph.ElementOrder,com.google.common.graph.ElementOrder,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the nodes which have an incident edge in common with {@code node} in this graph.
   *
   * @throws IllegalArgumentException if {@code node} is not an element of this graph
   */",METHOD: com.google.common.graph.Graph.adjacentNodes(N),com.google.common.graph.Graph.adjacentNodes(N),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.Graph.incidentEdgeOrder(),CLASS: com.google.common.graph.Graph,com.google.common.graph.Graph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the edges whose {@link #incidentNodes(Object) incident nodes} in this network include
   * {@code node}.
   *
   * @throws IllegalArgumentException if {@code node} is not an element of this network
   */",METHOD: com.google.common.graph.Network.incidentEdges(N),com.google.common.graph.Network.incidentEdges(N),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the nodes which have an incident edge in common with {@code node} in this network.
   *
   * @throws IllegalArgumentException if {@code node} is not an element of this network
   */",METHOD: com.google.common.graph.Network.adjacentNodes(N),com.google.common.graph.Network.adjacentNodes(N),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(nodeU);,"METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)","com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(nodeV);,"METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)","com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,RETURN_STATEMENT: (nodes().contains(nodeU) && successors(nodeU).contains(nodeV));,"METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)","com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"RETURN_STATEMENT: (! edgesConnecting(nodeU, nodeV).isEmpty());","METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)","com.google.common.graph.AbstractNetwork.hasEdgeConnecting(N,N)",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: (! edgesConnecting(endpoints.nodeU(), endpoints.nodeV()).isEmpty());",METHOD: com.google.common.graph.AbstractNetwork.hasEdgeConnecting(EndpointPair<N>),com.google.common.graph.AbstractNetwork.hasEdgeConnecting(EndpointPair<N>),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,PARENT_CLASS_CHANGE,"PARAMETERIZED_TYPE: ConfigurableValueGraph<N, V>",CLASS: com.google.common.graph.ImmutableValueGraph,com.google.common.graph.ImmutableValueGraph,CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: (graph.isDirected() ? DirectedGraphConnections.ofImmutable(graph.predecessors(node), Maps.asMap(graph.successors(node), successorNodeToValueFn)) : UndirectedGraphConnections.ofImmutable(Maps.asMap(graph.adjacentNodes(node), successorNodeToValueFn)));","METHOD: com.google.common.graph.ImmutableValueGraph.connectionsOf(ValueGraph<N, V>,N)","com.google.common.graph.ImmutableValueGraph.connectionsOf(ValueGraph<N, V>,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * A builder for creating {@link ImmutableValueGraph} instances, especially {@code static final}
   * graphs. Example:
   *
   * <pre>{@code
   * static final ImmutableValueGraph<City, Distance> CITY_ROAD_DISTANCE_GRAPH =
   *     ValueGraphBuilder.undirected()
   *         .<City, Distance>immutable()
   *         .putEdgeValue(PARIS, BERLIN, kilometers(1060))
   *         .putEdgeValue(PARIS, BRUSSELS, kilometers(317))
   *         .putEdgeValue(BERLIN, BRUSSELS, kilometers(764))
   *         .addNode(REYKJAVIK)
   *         .build();
   * }</pre>
   *
   * <p>Builder instances can be reused; it is safe to call {@link #build} multiple times to build
   * multiple graphs in series. Each new graph contains all the elements of the ones created before
   * it.
   *
   * @since NEXT
   */",CLASS: com.google.common.graph.ImmutableValueGraph.Builder,com.google.common.graph.ImmutableValueGraph.Builder,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // The incidentEdgeOrder for immutable graphs is always stable. However, we don't want to
      // modify this builder, so we make a copy instead.","METHOD: com.google.common.graph.ImmutableValueGraph.Builder.Builder(ValueGraphBuilder<N, V>)","com.google.common.graph.ImmutableValueGraph.Builder.Builder(ValueGraphBuilder<N, V>)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: this.mutableValueGraph = graphBuilder.build();,"METHOD: com.google.common.graph.ImmutableValueGraph.Builder.Builder(ValueGraphBuilder<N, V>)","com.google.common.graph.ImmutableValueGraph.Builder.Builder(ValueGraphBuilder<N, V>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.ImmutableValueGraph,com.google.common.graph.ImmutableValueGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.graph.MapIteratorCache.remove(Object),CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,com.google.common.graph.MapIteratorCache.clear(),CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: entrySetCache = null;,METHOD: com.google.common.graph.MapIteratorCache.clearCache(),com.google.common.graph.MapIteratorCache.clearCache(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Entry<K, V> entry = entrySetCache;",METHOD: com.google.common.graph.MapIteratorCache.getIfCached(Object),com.google.common.graph.MapIteratorCache.getIfCached(Object),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,REMOVING_METHOD_OVERRIDABILITY,MODIFIER: final,MODIFIERS: ,"com.google.common.graph.MapIteratorCache.put(K,V)",CRUCIAL
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: new AbstractSet<K>() {
  public @Override UnmodifiableIterator<K> iterator() {
    final Iterator<Entry<K, V>> entryIterator = backingMap.entrySet().iterator();
    return new UnmodifiableIterator<K>() {
  public @Override boolean hasNext() {
    return entryIterator.hasNext();
  }
  public @Override K next() {
    Entry<K, V> entry = entryIterator.next();
    entrySetCache = entry;
    return entry.getKey();
  }
};
  }
  public @Override int size() {
    return backingMap.size();
  }
  public @Override boolean contains(@NullableDecl Object key) {
    return containsKey(key);
  }
};",METHOD: com.google.common.graph.MapIteratorCache.unmodifiableKeySet(),com.google.common.graph.MapIteratorCache.unmodifiableKeySet(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ATTRIBUTE_RENAMING,"FIELD: com.google.common.graph.MapIteratorCache.entrySetCache : Entry<K, V>","FIELD: com.google.common.graph.MapIteratorCache.entrySetCache : Entry<K, V>","com.google.common.graph.MapIteratorCache.cacheEntry : Entry<K, V>",MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.GraphConnections.incidentEdgeIterator(N),CLASS: com.google.common.graph.GraphConnections,com.google.common.graph.GraphConnections,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: ((graph instanceof ImmutableGraph) ? (ImmutableGraph<N>) graph : new ImmutableGraph<N>(new ConfigurableValueGraph<N, Presence>(GraphBuilder.from(graph), getNodeConnections(graph), graph.edges().size())));",METHOD: com.google.common.graph.ImmutableGraph.copyOf(Graph<N>),com.google.common.graph.ImmutableGraph.copyOf(Graph<N>),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * A builder for creating {@link ImmutableGraph} instances, especially {@code static final}
   * graphs. Example:
   *
   * <pre>{@code
   * static final ImmutableGraph<Country> COUNTRY_ADJACENCY_GRAPH =
   *     GraphBuilder.undirected()
   *         .<Country>immutable()
   *         .putEdge(FRANCE, GERMANY)
   *         .putEdge(FRANCE, BELGIUM)
   *         .putEdge(GERMANY, BELGIUM)
   *         .addNode(ICELAND)
   *         .build();
   * }</pre>
   *
   * <p>Builder instances can be reused; it is safe to call {@link #build} multiple times to build
   * multiple graphs in series. Each new graph contains all the elements of the ones created before
   * it.
   *
   * @since NEXT
   */",CLASS: com.google.common.graph.ImmutableGraph.Builder,com.google.common.graph.ImmutableGraph.Builder,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_INSERT,"LINE_COMMENT: // The incidentEdgeOrder for immutable graphs is always stable. However, we don't want to
      // modify this builder, so we make a copy instead.",METHOD: com.google.common.graph.ImmutableGraph.Builder.Builder(GraphBuilder<N>),com.google.common.graph.ImmutableGraph.Builder.Builder(GraphBuilder<N>),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,ASSIGNMENT: this.mutableGraph = graphBuilder.build();,METHOD: com.google.common.graph.ImmutableGraph.Builder.Builder(GraphBuilder<N>),com.google.common.graph.ImmutableGraph.Builder.Builder(GraphBuilder<N>),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: Function<Object, Presence> edgeValueFn = Functions.constant(Presence.EDGE_EXISTS);","METHOD: com.google.common.graph.ImmutableGraph.connectionsOf(Graph<N>,N)","com.google.common.graph.ImmutableGraph.connectionsOf(Graph<N>,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,"RETURN_STATEMENT: (graph.isDirected() ? DirectedGraphConnections.ofImmutable(graph.predecessors(node), Maps.asMap(graph.successors(node), edgeValueFn)) : UndirectedGraphConnections.ofImmutable(Maps.asMap(graph.adjacentNodes(node), edgeValueFn)));","METHOD: com.google.common.graph.ImmutableGraph.connectionsOf(Graph<N>,N)","com.google.common.graph.ImmutableGraph.connectionsOf(Graph<N>,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.ImmutableGraph,com.google.common.graph.ImmutableGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the nodes which have an incident edge in common with {@code node} in this graph.
   *
   * @throws IllegalArgumentException if {@code node} is not an element of this graph
   */",METHOD: com.google.common.graph.ValueGraph.adjacentNodes(N),com.google.common.graph.ValueGraph.adjacentNodes(N),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ValueGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.ValueGraph,com.google.common.graph.ValueGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the nodes which have an incident edge in common with {@code node} in this graph.
   *
   * @throws IllegalArgumentException if {@code node} is not an element of this graph
   */",METHOD: com.google.common.graph.BaseGraph.adjacentNodes(N),com.google.common.graph.BaseGraph.adjacentNodes(N),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.BaseGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.BaseGraph,com.google.common.graph.BaseGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingGraph.incidentEdges(N),CLASS: com.google.common.graph.ForwardingGraph,com.google.common.graph.ForwardingGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.ForwardingGraph,com.google.common.graph.ForwardingGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ForwardingValueGraph.incidentEdgeOrder(),CLASS: com.google.common.graph.ForwardingValueGraph,com.google.common.graph.ForwardingValueGraph,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.graph.AbstractGraphBuilder.incidentEdgeOrder : ElementOrder<N>,CLASS: com.google.common.graph.AbstractGraphBuilder,com.google.common.graph.AbstractGraphBuilder,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(edge);,"METHOD: com.google.common.graph.AbstractDirectedNetworkConnections.addInEdge(E,N,boolean)","com.google.common.graph.AbstractDirectedNetworkConnections.addInEdge(E,N,boolean)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(node);,"METHOD: com.google.common.graph.AbstractDirectedNetworkConnections.addInEdge(E,N,boolean)","com.google.common.graph.AbstractDirectedNetworkConnections.addInEdge(E,N,boolean)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(edge);,"METHOD: com.google.common.graph.AbstractDirectedNetworkConnections.addOutEdge(E,N)","com.google.common.graph.AbstractDirectedNetworkConnections.addOutEdge(E,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkNotNull(node);,"METHOD: com.google.common.graph.AbstractDirectedNetworkConnections.addOutEdge(E,N)","com.google.common.graph.AbstractDirectedNetworkConnections.addOutEdge(E,N)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
 * Standard implementation of {@link ValueGraph} that supports the options supplied by {@link
 * AbstractGraphBuilder}.
 *
 * <p>This class maintains a map of nodes to {@link GraphConnections}.
 *
 * <p>Collection-returning accessors return unmodifiable views: the view returned will reflect
 * changes to the graph (if the graph is mutable) but may not be modified by the user.
 *
 * <p>The time complexity of all collection-returning accessors is O(1), since views are returned.
 *
 * @author James Sexton
 * @author Joshua O'Madadhain
 * @author Omar Darwish
 * @param <N> Node parameter type
 * @param <V> Value parameter type
 */",CLASS: com.google.common.graph.StandardValueGraph,com.google.common.graph.StandardValueGraph,NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"RETURN_STATEMENT: Doubles.constrainToRange(value, (- 1.0), 1.0);",METHOD: com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: 1.0;,THEN_STATEMENT: (value >= 1.0),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (value >= 1.0),METHOD: com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: (- 1.0);,THEN_STATEMENT: (value <= (- 1.0)),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (value <= (- 1.0)),METHOD: com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: value;,METHOD: com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),com.google.common.math.PairedStatsAccumulator.ensureInUnitRange(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"RETURN_STATEMENT: Math.max(value, 0.0);",METHOD: com.google.common.math.DoubleUtils.ensureNonNegative(double),com.google.common.math.DoubleUtils.ensureNonNegative(double),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: value;,THEN_STATEMENT: (value > 0.0),com.google.common.math.DoubleUtils.ensureNonNegative(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: 0.0;,ELSE_STATEMENT: (value > 0.0),com.google.common.math.DoubleUtils.ensureNonNegative(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (value > 0.0),IF_STATEMENT: (value > 0.0),com.google.common.math.DoubleUtils.ensureNonNegative(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (value > 0.0),METHOD: com.google.common.math.DoubleUtils.ensureNonNegative(double),com.google.common.math.DoubleUtils.ensureNonNegative(double),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"METHOD_INVOCATION: merge(values.count(), values.mean(), values.sumOfSquaresOfDeltas(), values.min(), values.max());",METHOD: com.google.common.math.StatsAccumulator.addAll(Stats),com.google.common.math.StatsAccumulator.addAll(Stats),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: count = values.count();,THEN_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: mean = values.mean();,THEN_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: sumOfSquaresOfDeltas = values.sumOfSquaresOfDeltas();,THEN_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: min = values.min();,THEN_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: max = values.max();,THEN_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: count += values.count();,ELSE_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,COMMENT_DELETE,LINE_COMMENT: // This is a generalized version of the calculation in add(double) above.,THEN_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: double delta = (values.mean() - mean);,THEN_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: mean += ((delta * values.count()) / count);,THEN_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: sumOfSquaresOfDeltas += (values.sumOfSquaresOfDeltas() + ((delta * (values.mean() - mean)) * values.count()));,THEN_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"ASSIGNMENT: mean = calculateNewMeanNonFinite(mean, values.mean());",ELSE_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,ASSIGNMENT: sumOfSquaresOfDeltas = NaN;,ELSE_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (isFinite(mean) && isFinite(values.mean())),IF_STATEMENT: (isFinite(mean) && isFinite(values.mean())),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (isFinite(mean) && isFinite(values.mean())),ELSE_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"ASSIGNMENT: min = Math.min(min, values.min());",ELSE_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,"ASSIGNMENT: max = Math.max(max, values.max());",ELSE_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (count == 0),IF_STATEMENT: (count == 0),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,IF_STATEMENT: (count == 0),METHOD: com.google.common.math.StatsAccumulator.addAll(Stats),com.google.common.math.StatsAccumulator.addAll(Stats),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.math.StatsAccumulator.merge(long,double,double,double,double)",CLASS: com.google.common.math.StatsAccumulator,com.google.common.math.StatsAccumulator,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.StatsAccumulator.addAll(StatsAccumulator),CLASS: com.google.common.math.StatsAccumulator,com.google.common.math.StatsAccumulator,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a single-precision floating point value. The ASCII character
   * {@code '-'} (<code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Float#parseFloat(String)}, this method returns {@code null} instead of
   * throwing an exception if parsing fails. Valid inputs are exactly those accepted by {@link
   * Float#valueOf(String)}, except that leading and trailing whitespace is not permitted.
   *
   * <p>This implementation is likely to be faster than {@code Float.parseFloat} if many failures
   * are expected.
   *
   * @param string the string representation of a {@code float} value
   * @return the floating point value represented by {@code string}, or {@code null} if {@code
   *     string} has a length of zero or cannot be parsed as a {@code float} value
   * @since 14.0
   */",METHOD: com.google.common.primitives.Floats.tryParse(String),com.google.common.primitives.Floats.tryParse(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a double-precision floating point value. The ASCII character
   * {@code '-'} (<code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Double#parseDouble(String)}, this method returns {@code null} instead of
   * throwing an exception if parsing fails. Valid inputs are exactly those accepted by {@link
   * Double#valueOf(String)}, except that leading and trailing whitespace is not permitted.
   *
   * <p>This implementation is likely to be faster than {@code Double.parseDouble} if many failures
   * are expected.
   *
   * @param string the string representation of a {@code double} value
   * @return the floating point value represented by {@code string}, or {@code null} if {@code
   *     string} has a length of zero or cannot be parsed as a {@code double} value
   * @since 14.0
   */",METHOD: com.google.common.primitives.Doubles.tryParse(String),com.google.common.primitives.Doubles.tryParse(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a signed decimal integer value. The ASCII character {@code '-'}
   * (<code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Integer#parseInt(String)}, this method returns {@code null} instead of
   * throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits,
   * and returns {@code null} if non-ASCII digits are present in the string.
   *
   * <p>Note that strings prefixed with ASCII {@code '+'} are rejected, even under JDK 7, despite
   * the change to {@link Integer#parseInt(String)} for that version.
   *
   * @param string the string representation of an integer value
   * @return the integer value represented by {@code string}, or {@code null} if {@code string} has
   *     a length of zero or cannot be parsed as an integer value
   * @since 11.0
   */",METHOD: com.google.common.primitives.Ints.tryParse(String),com.google.common.primitives.Ints.tryParse(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a signed integer value using the specified radix. The ASCII
   * character {@code '-'} (<code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Integer#parseInt(String, int)}, this method returns {@code null} instead of
   * throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits,
   * and returns {@code null} if non-ASCII digits are present in the string.
   *
   * <p>Note that strings prefixed with ASCII {@code '+'} are rejected, even under JDK 7, despite
   * the change to {@link Integer#parseInt(String, int)} for that version.
   *
   * @param string the string representation of an integer value
   * @param radix the radix to use when parsing
   * @return the integer value represented by {@code string} using {@code radix}, or {@code null} if
   *     {@code string} has a length of zero or cannot be parsed as an integer value
   * @throws IllegalArgumentException if {@code radix < Character.MIN_RADIX} or {@code radix >
   *     Character.MAX_RADIX}
   * @since 19.0
   */","METHOD: com.google.common.primitives.Ints.tryParse(String,int)","com.google.common.primitives.Ints.tryParse(String,int)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the least value present in {@code array}.
   *
   * @param array a <i>nonempty</i> array of {@code byte} values
   * @return the value present in {@code array} that is less than or equal to every other value in
   *     the array
   * @throws IllegalArgumentException if {@code array} is empty
   */",METHOD: com.google.common.primitives.UnsignedBytes.min(byte...),com.google.common.primitives.UnsignedBytes.min(byte...),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Returns the greatest value present in {@code array}.
   *
   * @param array a <i>nonempty</i> array of {@code byte} values
   * @return the value present in {@code array} that is greater than or equal to every other value
   *     in the array
   * @throws IllegalArgumentException if {@code array} is empty
   */",METHOD: com.google.common.primitives.UnsignedBytes.max(byte...),com.google.common.primitives.UnsignedBytes.max(byte...),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a signed decimal long value. The ASCII character {@code '-'} (
   * <code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Long#parseLong(String)}, this method returns {@code null} instead of throwing
   * an exception if parsing fails. Additionally, this method only accepts ASCII digits, and returns
   * {@code null} if non-ASCII digits are present in the string.
   *
   * <p>Note that strings prefixed with ASCII {@code '+'} are rejected, even under JDK 7, despite
   * the change to {@link Long#parseLong(String)} for that version.
   *
   * @param string the string representation of a long value
   * @return the long value represented by {@code string}, or {@code null} if {@code string} has a
   *     length of zero or cannot be parsed as a long value
   * @since 14.0
   */",METHOD: com.google.common.primitives.Longs.tryParse(String),com.google.common.primitives.Longs.tryParse(String),NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,DOC_UPDATE,"JAVADOC: /**
   * Parses the specified string as a signed long value using the specified radix. The ASCII
   * character {@code '-'} (<code>'&#92;u002D'</code>) is recognized as the minus sign.
   *
   * <p>Unlike {@link Long#parseLong(String, int)}, this method returns {@code null} instead of
   * throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits,
   * and returns {@code null} if non-ASCII digits are present in the string.
   *
   * <p>Note that strings prefixed with ASCII {@code '+'} are rejected, even under JDK 7, despite
   * the change to {@link Long#parseLong(String, int)} for that version.
   *
   * @param string the string representation of an long value
   * @param radix the radix to use when parsing
   * @return the long value represented by {@code string} using {@code radix}, or {@code null} if
   *     {@code string} has a length of zero or cannot be parsed as a long value
   * @throws IllegalArgumentException if {@code radix < Character.MIN_RADIX} or {@code radix >
   *     Character.MAX_RADIX}
   * @since 19.0
   */","METHOD: com.google.common.primitives.Longs.tryParse(String,int)","com.google.common.primitives.Longs.tryParse(String,int)",NONE
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,IF_STATEMENT: (o == null),METHOD: com.google.common.base.Strings.lenientToString(Object),com.google.common.base.Strings.lenientToString(Object),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,"RETURN_STATEMENT: null"";""",THEN_STATEMENT: (o == null),com.google.common.base.Strings.lenientToString(Object),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,RETURN_STATEMENT: o.toString();,BODY: ,com.google.common.base.Strings.lenientToString(Object),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_DELETE,RETURN_STATEMENT: String.valueOf(o);,BODY: ,com.google.common.base.Strings.lenientToString(Object),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedHashMultiset<?>)","com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedHashMultiset<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,UsingToStringOrdering)","com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,UsingToStringOrdering)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,HashBasedTable<?, ?, ?>)","com.google.common.collect.HashBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,HashBasedTable<?, ?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableSetMultimap)","com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableSetMultimap)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.TreeBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.TreeBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.TreeBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeBasedTable<?, ?, ?>)","com.google.common.collect.TreeBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeBasedTable<?, ?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.NaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.NaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.NaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,NaturalOrdering)","com.google.common.collect.NaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,NaturalOrdering)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,SparseImmutableTable<Object, Object, Object>)","com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,SparseImmutableTable<Object, Object, Object>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultimap<?, ?>)","com.google.common.collect.HashMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultiset<?>)","com.google.common.collect.HashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultiset<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumMap<?, ?>)","com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumMap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumSet<?>)","com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumSet<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ArrayListMultimap<?, ?>)","com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ArrayListMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.TreeMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.TreeMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.TreeMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeMultimap<?, ?>)","com.google.common.collect.TreeMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSortedMap<?, ?>)","com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSortedMap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableListMultimap)","com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableListMultimap)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableListMultimap<?, ?>)","com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableListMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,DenseImmutableTable<Object, Object, Object>)","com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,DenseImmutableTable<Object, Object, Object>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)","com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSetMultimap<?, ?>)","com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSetMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)","com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.Range_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.Range_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.Range_CustomFieldSerializer.serialize(SerializationStreamWriter,Range<?>)","com.google.common.collect.Range_CustomFieldSerializer.serialize(SerializationStreamWriter,Range<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,ReverseNaturalOrdering)","com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,ReverseNaturalOrdering)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)","com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,AllEqualOrdering)","com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,AllEqualOrdering)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.primitives.UnsignedLong_CustomFieldSerializer.serialize(SerializationStreamWriter,UnsignedLong)","com.google.common.primitives.UnsignedLong_CustomFieldSerializer.serialize(SerializationStreamWriter,UnsignedLong)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.primitives.UnsignedLong_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.primitives.UnsignedLong_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.serialize(SerializationStreamWriter,PairwiseEquivalence<?>)","com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.serialize(SerializationStreamWriter,PairwiseEquivalence<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.Present_CustomFieldSerializer.serialize(SerializationStreamWriter,Present<?>)","com.google.common.base.Present_CustomFieldSerializer.serialize(SerializationStreamWriter,Present<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.Present_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.Present_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.Absent_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.Absent_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.Absent_CustomFieldSerializer.serialize(SerializationStreamWriter,Absent<?>)","com.google.common.base.Absent_CustomFieldSerializer.serialize(SerializationStreamWriter,Absent<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.JdkBackedImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)","com.google.common.collect.JdkBackedImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.JdkBackedImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.JdkBackedImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.JdkBackedImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.JdkBackedImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_INSERT,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.JdkBackedImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)","com.google.common.collect.JdkBackedImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)",LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,FOR_STATEMENT: (i <= CompactLinkedHashMap.DEFAULT_SIZE),METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysExpectedSize(),com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysExpectedSize(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.entries).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.keys).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.values).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.links).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactLinkedHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: map.remove(3);,METHOD: com.google.common.collect.CompactLinkedHashMapTest.testInsertionOrderAfterRemoveMiddleEntry(),com.google.common.collect.CompactLinkedHashMapTest.testInsertionOrderAfterRemoveMiddleEntry(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,FOR_STATEMENT: (i <= CompactHashSet.DEFAULT_SIZE),METHOD: com.google.common.collect.CompactHashSetTest.testAllocArraysExpectedSize(),com.google.common.collect.CompactHashSetTest.testAllocArraysExpectedSize(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(set.elements).hasLength(CompactHashSet.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactHashSetTest.testAllocArraysDefault(),com.google.common.collect.CompactHashSetTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,FOR_STATEMENT: (i <= CompactHashMap.DEFAULT_SIZE),METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysExpectedSize(),com.google.common.collect.CompactHashMapTest.testAllocArraysExpectedSize(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.entries).hasLength(CompactHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.keys).hasLength(CompactHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(map.values).hasLength(CompactHashMap.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),com.google.common.collect.CompactHashMapTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,CONDITION_EXPRESSION_CHANGE,FOR_STATEMENT: (i <= CompactHashSet.DEFAULT_SIZE),METHOD: com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysExpectedSize(),com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysExpectedSize(),MEDIUM
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(set.elements).hasLength(CompactHashSet.DEFAULT_SIZE);,METHOD: com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysDefault(),com.google.common.collect.CompactLinkedHashSetTest.testAllocArraysDefault(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(graph2).isSameAs(graph1);,METHOD: com.google.common.graph.ImmutableValueGraphTest.copyOfImmutableValueGraph_optimized(),com.google.common.graph.ImmutableValueGraphTest.copyOfImmutableValueGraph_optimized(),LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraphTest.immutableValueGraphBuilder_incidentEdgeOrder_stable(),CLASS: com.google.common.graph.ImmutableValueGraphTest,com.google.common.graph.ImmutableValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraphTest.immutableValueGraphBuilder_fromUnorderedBuilder_incidentEdgeOrder_stable(),CLASS: com.google.common.graph.ImmutableValueGraphTest,com.google.common.graph.ImmutableValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraphTest.incidentEdgeOrder_fromUnorderedGraph_stable(),CLASS: com.google.common.graph.ImmutableValueGraphTest,com.google.common.graph.ImmutableValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraphTest.incidentEdgeOrder_stable(),CLASS: com.google.common.graph.ImmutableValueGraphTest,com.google.common.graph.ImmutableValueGraphTest,LOW
4,eacf08dbdc3d67a7c7a103f177a64dae5bb273af,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.ImmutableValueGraphTest.immutableValueGraphBuilder_incidentEdges_preservesIncidentEdgesOrder(),CLASS: com.google.common.graph.ImmutableValueGraphTest,com.google.common.graph.ImmutableValueGraphTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ComparatorsTest.testMinMaxNatural(),CLASS: com.google.common.collect.ComparatorsTest,com.google.common.collect.ComparatorsTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ComparatorsTest.testMinMaxComparator(),CLASS: com.google.common.collect.ComparatorsTest,com.google.common.collect.ComparatorsTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ComparatorsTest.testMinMaxComparator_equalInstances(),CLASS: com.google.common.collect.ComparatorsTest,com.google.common.collect.ComparatorsTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ComparatorsTest.testMinMaxNatural_equalInstances(),CLASS: com.google.common.collect.ComparatorsTest,com.google.common.collect.ComparatorsTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_CLASS,CLASS: com.google.common.collect.ComparatorsTest.Foo,CLASS: com.google.common.collect.ComparatorsTest,com.google.common.collect.ComparatorsTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testFloor_elementAbsent(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testFloor_elementPresent(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testCeiling_elementAbsent(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testCeiling_elementPresent(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testCeiling_emptySet(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testFloor_emptySet(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaTypeTest.testCreateFontType(),CLASS: com.google.common.net.MediaTypeTest,com.google.common.net.MediaTypeTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.BaseEncodingTest.testBase64Url(),CLASS: com.google.common.io.BaseEncodingTest,com.google.common.io.BaseEncodingTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.BaseEncodingTest.testBase64UrlInvalidDecodings(),CLASS: com.google.common.io.BaseEncodingTest,com.google.common.io.BaseEncodingTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.io.BaseEncodingTest.testDecodesByBytes(BaseEncoding,String,byte[])",CLASS: com.google.common.io.BaseEncodingTest,com.google.common.io.BaseEncodingTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.LongMathTest.testRoundToDoubleAgainstBigInteger(),CLASS: com.google.common.math.LongMathTest,com.google.common.math.LongMathTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.LongMathTest.testRoundToDoubleAgainstBigIntegerUnnecessary(),CLASS: com.google.common.math.LongMathTest,com.google.common.math.LongMathTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.math.LongMathTest.roundToDoubleTestCandidates : long[],CLASS: com.google.common.math.LongMathTest,com.google.common.math.LongMathTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Thread.currentThread().interrupted()).isTrue();,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testInterrupt_beforeRunRestoresInterruption(),com.google.common.util.concurrent.SequentialExecutorTest.testInterrupt_beforeRunRestoresInterruption(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(Thread.currentThread().interrupted()).isTrue();,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testInterrupt_doesNotInterruptSubsequentTask(),com.google.common.util.concurrent.SequentialExecutorTest.testInterrupt_doesNotInterruptSubsequentTask(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testToString(),CLASS: com.google.common.util.concurrent.SequentialExecutorTest,com.google.common.util.concurrent.SequentialExecutorTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,METHOD_INVOCATION: nullWriter.append(null);,METHOD: com.google.common.io.CharStreamsTest.testNullWriter(),com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"METHOD_INVOCATION: nullWriter.append(null, 0, 4);",METHOD: com.google.common.io.CharStreamsTest.testNullWriter(),com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,TRY_STATEMENT: ,METHOD: com.google.common.io.CharStreamsTest.testNullWriter(),com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"METHOD_INVOCATION: nullWriter.append(null, (- 1), 4);",BODY: ,com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,METHOD_INVOCATION: fail();,BODY: ,com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,CATCH_CLAUSE: IndexOutOfBoundsException,CATCH_CLAUSES: ,com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"METHOD_INVOCATION: nullWriter.append(null, 0, 5);",BODY: ,com.google.common.io.CharStreamsTest.testNullWriter(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.io.ByteSourceTest.testSlice_returnEmptySource(),CLASS: com.google.common.io.ByteSourceTest,com.google.common.io.ByteSourceTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.graph.AbstractNetworkTest.createGraph(),HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_parallelEdge(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.edgesConnecting_parallelEdges_directed(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.edgesConnecting_parallelEdges_undirected(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.removeEdge_parallelSelfLoopEdge(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.edgesConnecting_parallelSelfLoopEdges(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractNetworkTest.adjacentEdges_parallelEdges(),CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,"METHOD: com.google.common.graph.AbstractNetworkTest.addEdge(EndpointPair<Integer>,String)",CLASS: com.google.common.graph.AbstractNetworkTest,com.google.common.graph.AbstractNetworkTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: networkAsMutableNetwork.addEdge(N4, N5, E12);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: networkAsMutableNetwork.addEdge(N1, N2, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: networkAsMutableNetwork.addEdge(N2, N1, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_parallelEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"METHOD_INVOCATION: addEdge(N1, N2, E12);",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N1, N2, E12)).isFalse();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N2, N1, E12)).isFalse();",METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edges_containsOrderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edgesConnecting_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.addEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractUndirectedNetworkTest.edgeConnectingOrNull_orderMismatch(),CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_OBJECT_STATE,FIELD: com.google.common.graph.AbstractUndirectedNetworkTest.ENDPOINTS_N2N1 : EndpointPair<Integer>,CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_OBJECT_STATE,FIELD: com.google.common.graph.AbstractUndirectedNetworkTest.ENDPOINTS_N1N2 : EndpointPair<Integer>,CLASS: com.google.common.graph.AbstractUndirectedNetworkTest,com.google.common.graph.AbstractUndirectedNetworkTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: networkAsMutableNetwork.addEdge(N4, N5, E12);",BODY: ,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasMessageThat().contains(ERROR_REUSE_EDGE);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenDifferentNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N1, N2, E12)).isTrue();",METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: networkAsMutableNetwork.addEdge(N1, N2, EDGE_NOT_IN_GRAPH);",BODY: ,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assertThat(e).hasMessageThat().contains(ERROR_PARALLEL_EDGE);,CATCH_CLAUSE: IllegalArgumentException,com.google.common.graph.AbstractDirectedNetworkTest.addEdge_parallelEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,METHOD_INVOCATION: assume().that(graphIsMutable()).isTrue();,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(networkAsMutableNetwork.addEdge(N1, N2, E12)).isFalse();",METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),com.google.common.graph.AbstractDirectedNetworkTest.addEdge_existingEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edges_containsOrderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edgesConnecting_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.addEdge_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.AbstractDirectedNetworkTest.edgeConnectingOrNull_orderMismatch(),CLASS: com.google.common.graph.AbstractDirectedNetworkTest,com.google.common.graph.AbstractDirectedNetworkTest,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.math.BigIntegerMathRoundingBenchmark.roundToDouble(int),CLASS: com.google.common.math.BigIntegerMathRoundingBenchmark,com.google.common.math.BigIntegerMathRoundingBenchmark,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"RETURN_STATEMENT: new UnmodifiableIterator<E>() {
  int remaining;
  @MonotonicNonNullDecl E element;
  public @Override boolean hasNext() {
    return ((remaining > 0) || entryIterator.hasNext());
  }
  public @Override E next() {
    if ((remaining <= 0))
        {
          Entry<E> entry = entryIterator.next();
          element = entry.getElement();
          remaining = entry.getCount();
        }
    remaining --;
    return element;
  }
};",METHOD: com.google.common.collect.ImmutableMultiset.iterator(),com.google.common.collect.ImmutableMultiset.iterator(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Comparators.max(T,T,Comparator<T>)",CLASS: com.google.common.collect.Comparators,com.google.common.collect.Comparators,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Comparators.min(T,T)",CLASS: com.google.common.collect.Comparators,com.google.common.collect.Comparators,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Comparators.min(T,T,Comparator<T>)",CLASS: com.google.common.collect.Comparators,com.google.common.collect.Comparators,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.Comparators.max(T,T)",CLASS: com.google.common.collect.Comparators,com.google.common.collect.Comparators,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_PLATFORM_VERSION : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.CROSS_ORIGIN_EMBEDDER_POLICY : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_MODEL : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.CROSS_ORIGIN_EMBEDDER_POLICY_REPORT_ONLY : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_FULL_VERSION : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_PLATFORM : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_MOBILE : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.net.MediaType.createFontType(String),CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.ANY_FONT_TYPE : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_COLLECTION : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_WOFF2 : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_OTF : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_TYPE : String,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_WOFF : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_TTF : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.MediaType.FONT_SFNT : MediaType,CLASS: com.google.common.net.MediaType,com.google.common.net.MediaType,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.Uninterruptibles.tryLockUninterruptibly(Lock,long,TimeUnit)",CLASS: com.google.common.util.concurrent.Uninterruptibles,com.google.common.util.concurrent.Uninterruptibles,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,DOC_UPDATE,"JAVADOC: /**
   * Invoked to request the service to stop.
   *
   * <p>By default this method does nothing.
   */",METHOD: com.google.common.util.concurrent.AbstractExecutionThreadService.triggerShutdown(),com.google.common.util.concurrent.AbstractExecutionThreadService.triggerShutdown(),NONE
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.hash.SipHashFunction.SipHasher.makeHash(),HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,DECREASING_ACCESSIBILITY_CHANGE,MODIFIER: public,MODIFIERS: ,com.google.common.hash.Murmur3_128HashFunction.Murmur3_128Hasher.makeHash(),HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,"RETURN_STATEMENT: ByteSource.this.slice((this.offset + offset), Math.min(length, maxLength));","METHOD: com.google.common.io.ByteSource.SlicedByteSource.slice(long,long)","com.google.common.io.ByteSource.SlicedByteSource.slice(long,long)",LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.math.LongMath.roundToDouble(long,RoundingMode)",CLASS: com.google.common.math.LongMath,com.google.common.math.LongMath,LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,PARENT_CLASS_INSERT,SINGLE_TYPE: FloatsMethodsForWeb,CLASS: com.google.common.primitives.Floats,com.google.common.primitives.Floats,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,PARENT_CLASS_INSERT,SINGLE_TYPE: ShortsMethodsForWeb,CLASS: com.google.common.primitives.Shorts,com.google.common.primitives.Shorts,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,PARENT_CLASS_INSERT,SINGLE_TYPE: DoublesMethodsForWeb,CLASS: com.google.common.primitives.Doubles,com.google.common.primitives.Doubles,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,PARENT_CLASS_INSERT,SINGLE_TYPE: IntsMethodsForWeb,CLASS: com.google.common.primitives.Ints,com.google.common.primitives.Ints,CRUCIAL
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"ASSIGNMENT: array = Arrays.copyOf(array, expandedCapacity(array.length, newCount));",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: double[] newArray = new double[expandedCapacity(array.length, newCount)];",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"METHOD_INVOCATION: System.arraycopy(array, 0, newArray, 0, count);",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,ASSIGNMENT: this.array = newArray;,THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableDoubleArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"ASSIGNMENT: array = Arrays.copyOf(array, expandedCapacity(array.length, newCount));",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: long[] newArray = new long[expandedCapacity(array.length, newCount)];",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"METHOD_INVOCATION: System.arraycopy(array, 0, newArray, 0, count);",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,ASSIGNMENT: this.array = newArray;,THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableLongArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_INSERT,"ASSIGNMENT: array = Arrays.copyOf(array, expandedCapacity(array.length, newCount));",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: int[] newArray = new int[expandedCapacity(array.length, newCount)];",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,"METHOD_INVOCATION: System.arraycopy(array, 0, newArray, 0, count);",THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,ASSIGNMENT: this.array = newArray;,THEN_STATEMENT: (newCount > array.length),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_DELETE,IF_STATEMENT: (newCount > array.length),METHOD: com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),com.google.common.primitives.ImmutableIntArray.Builder.ensureRoomFor(int),MEDIUM
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.successors_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.successors_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_predecessors_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_predecessors_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_allowsSelfLoops(),com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_allowsSelfLoops(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.inDegree_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.inDegree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.removeEdge_existingSelfLoopEdge(),com.google.common.graph.AbstractStandardDirectedGraphTest.removeEdge_existingSelfLoopEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.adjacentNodes_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.adjacentNodes_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.degree_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.degree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.outDegree_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.outDegree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.predecessors_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.predecessors_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.incidentEdges_selfLoop(),com.google.common.graph.AbstractStandardDirectedGraphTest.incidentEdges_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.removeNode_existingNodeWithSelfLoopEdge(),com.google.common.graph.AbstractStandardDirectedGraphTest.removeNode_existingNodeWithSelfLoopEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isFalse();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_doesntAllowSelfLoops(),com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_doesntAllowSelfLoops(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_successors_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_successors_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_edges_returnsInStableOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_edges_returnsInStableOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_adjacentNodes_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_adjacentNodes_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardDirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_existingSelfLoopEdgeBetweenSameNodes(),com.google.common.graph.AbstractStandardDirectedGraphTest.putEdge_existingSelfLoopEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardMutableDirectedGraphTest.allowsSelfLoops(),CLASS: com.google.common.graph.StandardMutableDirectedGraphTest,com.google.common.graph.StandardMutableDirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardMutableDirectedGraphTest.incidentEdgeOrder(),CLASS: com.google.common.graph.StandardMutableDirectedGraphTest,com.google.common.graph.StandardMutableDirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardMutableUndirectedGraphTest.allowsSelfLoops(),CLASS: com.google.common.graph.StandardMutableUndirectedGraphTest,com.google.common.graph.StandardMutableUndirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardMutableUndirectedGraphTest.incidentEdgeOrder(),CLASS: com.google.common.graph.StandardMutableUndirectedGraphTest,com.google.common.graph.StandardMutableUndirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.successors_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.successors_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_predecessors_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_predecessors_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_allowsSelfLoops(),com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_allowsSelfLoops(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.inDegree_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.inDegree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.removeEdge_existingSelfLoopEdge(),com.google.common.graph.AbstractStandardUndirectedGraphTest.removeEdge_existingSelfLoopEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.adjacentNodes_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.adjacentNodes_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.degree_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.degree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.outDegree_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.outDegree_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.predecessors_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.predecessors_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.incidentEdges_selfLoop(),com.google.common.graph.AbstractStandardUndirectedGraphTest.incidentEdges_selfLoop(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.removeNode_existingNodeWithSelfLoopEdge(),com.google.common.graph.AbstractStandardUndirectedGraphTest.removeNode_existingNodeWithSelfLoopEdge(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isFalse();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_doesntAllowSelfLoops(),com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_doesntAllowSelfLoops(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_successors_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_successors_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_edges_returnsInStableOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_edges_returnsInStableOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_adjacentNodes_returnsInConnectingEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_adjacentNodes_returnsInConnectingEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE);,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_returnsInEdgeInsertionOrder(),com.google.common.graph.AbstractStandardUndirectedGraphTest.stableIncidentEdgeOrder_incidentEdges_returnsInEdgeInsertionOrder(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,METHOD_INVOCATION: assume().that(allowsSelfLoops()).isTrue();,METHOD: com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_existingSelfLoopEdgeBetweenSameNodes(),com.google.common.graph.AbstractStandardUndirectedGraphTest.putEdge_existingSelfLoopEdgeBetweenSameNodes(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,ASSIGNMENT: graphBuilder = GraphBuilder.undirected().allowsSelfLoops(allowsSelfLoops()).immutable();,METHOD: com.google.common.graph.StandardImmutableUndirectedGraphTest.createGraph(),com.google.common.graph.StandardImmutableUndirectedGraphTest.createGraph(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardImmutableUndirectedGraphTest.allowsSelfLoops(),CLASS: com.google.common.graph.StandardImmutableUndirectedGraphTest,com.google.common.graph.StandardImmutableUndirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardImmutableUndirectedGraphTest.incidentEdgeOrder(),CLASS: com.google.common.graph.StandardImmutableUndirectedGraphTest,com.google.common.graph.StandardImmutableUndirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,STATEMENT_UPDATE,ASSIGNMENT: graphBuilder = GraphBuilder.directed().allowsSelfLoops(allowsSelfLoops()).immutable();,METHOD: com.google.common.graph.StandardImmutableDirectedGraphTest.createGraph(),com.google.common.graph.StandardImmutableDirectedGraphTest.createGraph(),LOW
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardImmutableDirectedGraphTest.allowsSelfLoops(),CLASS: com.google.common.graph.StandardImmutableDirectedGraphTest,com.google.common.graph.StandardImmutableDirectedGraphTest,HIGH
5,b21d5719e6a0ce6f4e2f71eec09bf55908ede062,REMOVED_FUNCTIONALITY,METHOD: com.google.common.graph.StandardImmutableDirectedGraphTest.incidentEdgeOrder(),CLASS: com.google.common.graph.StandardImmutableDirectedGraphTest,com.google.common.graph.StandardImmutableDirectedGraphTest,HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.LenientSerializableTester.reserializeAndAssertElementsEqual(Collection<E>),CLASS: com.google.common.collect.LenientSerializableTester,com.google.common.collect.LenientSerializableTester,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: final Runnable[] currentTask = new Runnable[1];,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testToString(),com.google.common.util.concurrent.SequentialExecutorTest.testToString(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: final String[] whileRunningToString = new String[1];,METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testToString(),com.google.common.util.concurrent.SequentialExecutorTest.testToString(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,"METHOD_INVOCATION: assertThat(whileRunningToString[0]).contains(my runnable\'s toString"");""",METHOD: com.google.common.util.concurrent.SequentialExecutorTest.testToString(),com.google.common.util.concurrent.SequentialExecutorTest.testToString(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('h', 'h', 'd', 'a');",METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_iterableIsLazy(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('h', 'h', 'h', 'd', 'd', 'a', 'a');",METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_iterableIsLazy(),com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('a', 'a', 'b', 'c', 'd');",METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_iterableIsLazy(),com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('a', 'a', 'a', 'b', 'b', 'c', 'd', 'd');",METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_iterableIsLazy(),com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrderIterable_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('a', 'a', 'b', 'd');",METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrder_iterableIsLazy(),com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrder_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,"METHOD_INVOCATION: assertThat(graph.requestedNodes).containsExactly('a', 'a', 'a', 'b', 'b', 'd', 'd');",METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrder_iterableIsLazy(),com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrder_iterableIsLazy(),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.fixedSuccessors(Iterable<N>),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_breadthFirst_infinite(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forGraph_depthFirstPreOrder_infinite(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_breadthFirst_infinite(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.graph.TraverserTest.forTree_depthFirstPreOrder_infinite(),CLASS: com.google.common.graph.TraverserTest,com.google.common.graph.TraverserTest,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: ((IPV4_DELIMITER_MATCHER.countIn(ipString) + 1) != IPV4_PART_COUNT),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,COMMENT_INSERT,LINE_COMMENT: // Wrong number of parts,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),NONE
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int start = 0;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,COMMENT_INSERT,"LINE_COMMENT: // Iterate through the parts of the ip string.
    // Invariant: start is always the beginning of an octet.",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),NONE
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,FOR_STATEMENT: (i < IPV4_PART_COUNT),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,RETURN_STATEMENT: bytes;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: int end = ipString.indexOf(IPV4_DELIMITER, start);",FOR_STATEMENT: (i < IPV4_PART_COUNT),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: (end == (- 1)),FOR_STATEMENT: (i < IPV4_PART_COUNT),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,TRY_STATEMENT: ,FOR_STATEMENT: (i < IPV4_PART_COUNT),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,ASSIGNMENT: start = (end + 1);,FOR_STATEMENT: (i < IPV4_PART_COUNT),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,ASSIGNMENT: end = ipString.length();,THEN_STATEMENT: (end == (- 1)),com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,"ASSIGNMENT: bytes[i] = parseOctet(ipString, start, end);",BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,CATCH_CLAUSE: NumberFormatException,CATCH_CLAUSES: ,com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,RETURN_STATEMENT: null;,CATCH_CLAUSE: NumberFormatException,com.google.common.net.InetAddresses.textToNumericFormatV4(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,ASSIGNMENT: bytes[(i ++)] = parseOctet(octet);,FOREACH_STATEMENT: String octet:IPV4_SPLITTER.split(ipString),com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,FOREACH_STATEMENT: String octet:IPV4_SPLITTER.split(ipString),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,CATCH_CLAUSE: NumberFormatException,CATCH_CLAUSES: ,com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,TRY_STATEMENT: ,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,RETURN_STATEMENT: ((i == IPV4_PART_COUNT) ? bytes : null);,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: null;,CATCH_CLAUSE: NumberFormatException,com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_PARENT_CHANGE,VARIABLE_DECLARATION_STATEMENT: int i = 0;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV4(String),com.google.common.net.InetAddresses.textToNumericFormatV4(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,"RETURN_STATEMENT: parseHextet(ipPart, 0, ipPart.length());",METHOD: com.google.common.net.InetAddresses.parseHextet(String),com.google.common.net.InetAddresses.parseHextet(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,COMMENT_DELETE,LINE_COMMENT: // Note: we already verified that this string contains only hex digits.,METHOD: com.google.common.net.InetAddresses.parseHextet(String),com.google.common.net.InetAddresses.parseHextet(String),NONE
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,"VARIABLE_DECLARATION_STATEMENT: int hextet = Integer.parseInt(ipPart, 16);",METHOD: com.google.common.net.InetAddresses.parseHextet(String),com.google.common.net.InetAddresses.parseHextet(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,THROW_STATEMENT: new NumberFormatException();,THEN_STATEMENT: (hextet > 0xffff),com.google.common.net.InetAddresses.parseHextet(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,IF_STATEMENT: (hextet > 0xffff),METHOD: com.google.common.net.InetAddresses.parseHextet(String),com.google.common.net.InetAddresses.parseHextet(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,RETURN_STATEMENT: (short) hextet;,METHOD: com.google.common.net.InetAddresses.parseHextet(String),com.google.common.net.InetAddresses.parseHextet(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,RETURN_STATEMENT: null;,METHOD: com.google.common.net.InetAddresses.ipStringToBytes(String),com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: (percentIndex != (- 1)),THEN_STATEMENT: hasDot,com.google.common.net.InetAddresses.ipStringToBytes(String),LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,COMMENT_INSERT,LINE_COMMENT: // Scope IDs are not supported for IPV4,THEN_STATEMENT: hasDot,com.google.common.net.InetAddresses.ipStringToBytes(String),NONE
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: null;,METHOD: com.google.common.net.InetAddresses.ipStringToBytes(String),com.google.common.net.InetAddresses.ipStringToBytes(String),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_INSERT,PARAMETER: start,PARAMETERS: ,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_INSERT,PARAMETER: end,PARAMETERS: ,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_ORDERING_CHANGE,PARAMETER: ipPart,PARAMETERS: ,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_RENAMING,PARAMETER: ipPart,PARAMETERS: ,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int length = (end - start);,METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: ((length > 1) && (ipString.charAt(start) == '0')),METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int octet = 0;,METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,FOR_STATEMENT: (i < end),METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: (octet > 255),METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,ASSIGNMENT: octet *= 10;,FOR_STATEMENT: (i < end),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: int digit = Character.digit(ipString.charAt(i), 10);",FOR_STATEMENT: (i < end),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,IF_STATEMENT: (digit < 0),FOR_STATEMENT: (i < end),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,ASSIGNMENT: octet += digit;,FOR_STATEMENT: (i < end),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,THROW_STATEMENT: new NumberFormatException();,THEN_STATEMENT: ((length > 1) && (ipString.charAt(start) == '0')),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int i = start;,FOR_INIT: int i = start;,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,THROW_STATEMENT: new NumberFormatException();,THEN_STATEMENT: (octet > 255),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_INSERT,THROW_STATEMENT: new NumberFormatException();,THEN_STATEMENT: (digit < 0),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int octet = Integer.parseInt(ipPart);,METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_ORDERING_CHANGE,"IF_STATEMENT: ((octet > 255) || (ipPart.startsWith(0"") && (ipPart.length() > 1)))""",METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,COMMENT_UPDATE,LINE_COMMENT: // Note: we already verified that this string contains only hex digits.,METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",NONE
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,CONDITION_EXPRESSION_CHANGE,"IF_STATEMENT: ((octet > 255) || (ipPart.startsWith(0"") && (ipPart.length() > 1)))""",METHOD: com.google.common.net.InetAddresses.parseOctet(String),"com.google.common.net.InetAddresses.parseOctet(String,int,int)",MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.net.InetAddresses.parseHextet(String,int,int)",CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV4_DELIMITER : char,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV4_DELIMITER_MATCHER : CharMatcher,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,REMOVED_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV4_SPLITTER : Splitter,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.util.concurrent.Uninterruptibles.awaitTerminationUninterruptibly(ExecutorService),CLASS: com.google.common.util.concurrent.Uninterruptibles,com.google.common.util.concurrent.Uninterruptibles,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.Uninterruptibles.awaitTerminationUninterruptibly(ExecutorService,long,TimeUnit)",CLASS: com.google.common.util.concurrent.Uninterruptibles,com.google.common.util.concurrent.Uninterruptibles,LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,IF_STATEMENT: thrownByExecute,CATCH_CLAUSE: RejectedExecutionException,com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.execute(),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: CombinedFuture.this.setException(e);,THEN_STATEMENT: thrownByExecute,com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.execute(),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,REMOVED_OBJECT_STATE,FIELD: com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask.thrownByExecute : boolean,CLASS: com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask,com.google.common.util.concurrent.CombinedFuture.CombinedFutureInterruptibleTask,HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,ASSIGNMENT: thrownByExecute = false;,METHOD: com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.runInterruptibly(),com.google.common.util.concurrent.CombinedFuture.CallableInterruptibleTask.runInterruptibly(),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_DELETE,ASSIGNMENT: thrownByExecute = false;,METHOD: com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.runInterruptibly(),com.google.common.util.concurrent.CombinedFuture.AsyncCallableInterruptibleTask.runInterruptibly(),MEDIUM
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: Deque<byte[]> bufs = new ArrayDeque<byte[]>((TO_BYTE_ARRAY_DEQUE_SIZE + 2));,"METHOD: com.google.common.io.ByteStreams.toByteArray(InputStream,long)","com.google.common.io.ByteStreams.toByteArray(InputStream,long)",LOW
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: bufs: Deque<byte[]>,PARAMETER: bufs,"com.google.common.io.ByteStreams.toByteArrayInternal(InputStream,Queue<byte[]>,int)",HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: bufs: Deque<byte[]>,PARAMETER: bufs,"com.google.common.io.ByteStreams.combineBuffers(Queue<byte[]>,int)",HIGH
6,e352076da65aa3afb5dc59cfd3c1f41574b5ebeb,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: byte[] buf = bufs.removeFirst();,WHILE_STATEMENT: (remaining > 0),"com.google.common.io.ByteStreams.combineBuffers(Queue<byte[]>,int)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.eventbus.EventBusTest.testPrimitiveSubscribeFails(),CLASS: com.google.common.eventbus.EventBusTest,com.google.common.eventbus.EventBusTest,LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // too few parts,METHOD: com.google.common.net.InetAddressesTest.testForStringBogusInput(),com.google.common.net.InetAddressesTest.testForStringBogusInput(),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.SEC_CH_UA_ARCH : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int delimiterCount = IPV6_DELIMITER_MATCHER.countIn(ipString);,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // estimate; may be modified later,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: boolean hasSkip = false;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,"LINE_COMMENT: // Scan for the appearance of ::, to mark a skip-format IPV6 string and adjust the partsSkipped
    // estimate.",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,FOR_STATEMENT: (i < (ipString.length() - 1)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,"LINE_COMMENT: // Ends with ::, so we skipped the part after the last :",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // :: must expand to at least one '0',METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: ((! hasSkip) && ((delimiterCount + 1) != IPV6_PART_COUNT)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // Incorrect number of parts,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),FOR_STATEMENT: (i < (ipString.length() - 1)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,"LINE_COMMENT: // Iterate through the parts of the ip string.
      // Invariant: start is always the beginning of a hextet, or the second ':' of the skip
      // sequence ::""""",BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: int start = 0;,BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (ipString.charAt(0) == IPV6_DELIMITER),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,WHILE_STATEMENT: (start < ipString.length()),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,CATCH_CLAUSE: NumberFormatException,CATCH_CLAUSES: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,ASSIGNMENT: hasSkip = true;,THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,POSTFIX_EXPRESSION: partsSkipped ++;,THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // :: means we skipped an extra part in between the two delimiters.,THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (i == 0),THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,"LINE_COMMENT: // Begins with ::, so we skipped the part preceding the first :",THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (i == (ipString.length() - 2)),THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,"VARIABLE_DECLARATION_STATEMENT: int end = ipString.indexOf(IPV6_DELIMITER, start);",WHILE_STATEMENT: (start < ipString.length()),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (end == (- 1)),WHILE_STATEMENT: (start < ipString.length()),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (ipString.charAt(start) == IPV6_DELIMITER),WHILE_STATEMENT: (start < ipString.length()),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,ASSIGNMENT: start = (end + 1);,WHILE_STATEMENT: (start < ipString.length()),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,RETURN_STATEMENT: null;,CATCH_CLAUSE: NumberFormatException,com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,ASSIGNMENT: start = 1;,THEN_STATEMENT: (ipString.charAt(0) == IPV6_DELIMITER),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,ALTERNATIVE_PART_INSERT,ELSE_STATEMENT: (ipString.charAt(start) == IPV6_DELIMITER),IF_STATEMENT: (ipString.charAt(start) == IPV6_DELIMITER),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,POSTFIX_EXPRESSION: partsSkipped ++;,THEN_STATEMENT: (i == 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,POSTFIX_EXPRESSION: partsSkipped ++;,THEN_STATEMENT: (i == (ipString.length() - 2)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,ASSIGNMENT: end = ipString.length();,THEN_STATEMENT: (end == (- 1)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_INSERT,LINE_COMMENT: // expand zeroes,THEN_STATEMENT: (ipString.charAt(start) == IPV6_DELIMITER),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: List<String> parts = IPV6_SPLITTER.splitToList(ipString);,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int skipIndex = (- 1);,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,ASSIGNMENT: skipIndex = i;,THEN_STATEMENT: (parts.get(i).length() == 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,IF_STATEMENT: (parts.get(i).length() == 0),FOR_STATEMENT: (i < (parts.size() - 1)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = 1;,FOR_INIT: int i = 1;,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,FOR_STATEMENT: (i < (parts.size() - 1)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int partsHi;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_DELETE,"LINE_COMMENT: // Number of parts to copy from above/before the ::""""",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int partsLo;,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_DELETE,"LINE_COMMENT: // Number of parts to copy from below/after the ::""""",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,ASSIGNMENT: partsHi = skipIndex;,THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,ASSIGNMENT: partsLo = ((parts.size() - skipIndex) - 1);,THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_DELETE,"LINE_COMMENT: // Otherwise, allocate the entire address to partsHi. The endpoints
      // could still be empty, but parseHextet() will check for that.",ELSE_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,ASSIGNMENT: partsHi = parts.size();,ELSE_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,ASSIGNMENT: partsLo = 0;,ELSE_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,ALTERNATIVE_PART_DELETE,ELSE_STATEMENT: (skipIndex >= 0),IF_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,IF_STATEMENT: (skipIndex >= 0),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_DELETE,"LINE_COMMENT: // If we found a ::, then we must have skipped at least one part.
    // Otherwise, we must have exactly the right number of parts.",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_DELETE,LINE_COMMENT: // Now parse the hextets into a byte array.,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,POSTFIX_EXPRESSION: i ++;,FOR_INCR: i ++,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,FOR_STATEMENT: (i < partsHi),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: rawBytes.putShort(parseHextet(parts.get((parts.size() - i))));,FOR_STATEMENT: (i > 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,VARIABLE_DECLARATION_STATEMENT: int i = partsLo;,FOR_INIT: int i = partsLo;,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,POSTFIX_EXPRESSION: i --;,FOR_INCR: i --,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,FOR_STATEMENT: (i > 0),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,CATCH_CLAUSE: NumberFormatException,CATCH_CLAUSES: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,IF_STATEMENT: ((parts.get(0).length() == 0) && ((-- partsHi) != 0)),THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_MOVE,LINE_COMMENT: // ^: requires ^::,THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,IF_STATEMENT: ((Iterables.getLast(parts).length() == 0) && ((-- partsLo) != 0)),THEN_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_MOVE,LINE_COMMENT: // :$ requires ::$,ELSE_STATEMENT: (skipIndex >= 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: null;,CATCH_CLAUSE: NumberFormatException,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,IF_STATEMENT: (skipIndex >= 0),THEN_STATEMENT: (parts.get(i).length() == 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_MOVE,LINE_COMMENT: // Can't have more than one ::,THEN_STATEMENT: (parts.get(i).length() == 0),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,FOR_STATEMENT: (i < partsSkipped),BODY: ,com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,METHOD_INVOCATION: rawBytes.putShort(parseHextet(parts.get(i)));,FOR_STATEMENT: (i < partsHi),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,COMMENT_UPDATE,"LINE_COMMENT: // An address can have [2..8] colons, and N colons make N+1 parts.",METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),NONE
7,081c486173032e6096c912e3c297c1d74eddcf93,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((parts.size() < 3) || (parts.size() > (IPV6_PART_COUNT + 1))),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,VARIABLE_DECLARATION_STATEMENT: int partsSkipped = (IPV6_PART_COUNT - (partsHi + partsLo));,METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((parts.get(0).length() == 0) && ((-- partsHi) != 0)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((Iterables.getLast(parts).length() == 0) && ((-- partsLo) != 0)),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (! ((skipIndex >= 0) ? (partsSkipped >= 1) : (partsSkipped == 0))),METHOD: com.google.common.net.InetAddresses.textToNumericFormatV6(String),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: (skipIndex >= 0),THEN_STATEMENT: ((ipString.charAt(i) == IPV6_DELIMITER) && (ipString.charAt((i + 1)) == IPV6_DELIMITER)),com.google.common.net.InetAddresses.textToNumericFormatV6(String),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: rawBytes.putShort(parseHextet(parts.get(i)));,ELSE_STATEMENT: (ipString.charAt(start) == IPV6_DELIMITER),com.google.common.net.InetAddresses.textToNumericFormatV6(String),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,REMOVED_FUNCTIONALITY,METHOD: com.google.common.net.InetAddresses.parseHextet(String),CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,HIGH
7,081c486173032e6096c912e3c297c1d74eddcf93,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV6_DELIMITER_MATCHER : CharMatcher,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV6_DELIMITER : char,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,REMOVED_OBJECT_STATE,FIELD: com.google.common.net.InetAddresses.IPV6_SPLITTER : Splitter,CLASS: com.google.common.net.InetAddresses,com.google.common.net.InetAddresses,HIGH
7,081c486173032e6096c912e3c297c1d74eddcf93,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.util.concurrent.ListenableFutureTask.get(long,TimeUnit)",CLASS: com.google.common.util.concurrent.ListenableFutureTask,com.google.common.util.concurrent.ListenableFutureTask,LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.clear(scratch);,FINALLY: ,com.google.common.hash.AbstractByteHasher.update(int),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: scratch.clear();,FINALLY: ,com.google.common.hash.AbstractByteHasher.update(int),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: b.position(b.limit());,THEN_STATEMENT: b.hasArray(),com.google.common.hash.AbstractByteHasher.update(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(buffer);,METHOD: com.google.common.hash.AbstractStreamingHasher.munch(),com.google.common.hash.AbstractStreamingHasher.munch(),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: buffer.flip();,METHOD: com.google.common.hash.AbstractStreamingHasher.munch(),com.google.common.hash.AbstractStreamingHasher.munch(),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(bb);,METHOD: com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: bb.flip();,METHOD: com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: bb.position(bb.limit());,METHOD: com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: bb.limit((chunkSize + 7));,METHOD: com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: bb.limit(chunkSize);,METHOD: com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),com.google.common.hash.AbstractStreamingHasher.processRemaining(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(buffer);,METHOD: com.google.common.hash.AbstractStreamingHasher.hash(),com.google.common.hash.AbstractStreamingHasher.hash(),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: buffer.flip();,METHOD: com.google.common.hash.AbstractStreamingHasher.hash(),com.google.common.hash.AbstractStreamingHasher.hash(),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: buffer.position(buffer.limit());,THEN_STATEMENT: (buffer.remaining() > 0),com.google.common.hash.AbstractStreamingHasher.hash(),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,"RETURN_STATEMENT: new Hasher() {
  public @Override Hasher putByte(byte b) {
    for (Hasher hasher : hashers) 
      {
        hasher.putByte(b);
      }
    return this;
  }
  public @Override Hasher putBytes(byte[] bytes) {
    for (Hasher hasher : hashers) 
      {
        hasher.putBytes(bytes);
      }
    return this;
  }
  public @Override Hasher putBytes(byte[] bytes, int off, int len) {
    for (Hasher hasher : hashers) 
      {
        hasher.putBytes(bytes, off, len);
      }
    return this;
  }
  public @Override Hasher putBytes(ByteBuffer bytes) {
    int pos = bytes.position();
    for (Hasher hasher : hashers) 
      {
        bytes.position(pos);
        hasher.putBytes(bytes);
      }
    return this;
  }
  public @Override Hasher putShort(short s) {
    for (Hasher hasher : hashers) 
      {
        hasher.putShort(s);
      }
    return this;
  }
  public @Override Hasher putInt(int i) {
    for (Hasher hasher : hashers) 
      {
        hasher.putInt(i);
      }
    return this;
  }
  public @Override Hasher putLong(long l) {
    for (Hasher hasher : hashers) 
      {
        hasher.putLong(l);
      }
    return this;
  }
  public @Override Hasher putFloat(float f) {
    for (Hasher hasher : hashers) 
      {
        hasher.putFloat(f);
      }
    return this;
  }
  public @Override Hasher putDouble(double d) {
    for (Hasher hasher : hashers) 
      {
        hasher.putDouble(d);
      }
    return this;
  }
  public @Override Hasher putBoolean(boolean b) {
    for (Hasher hasher : hashers) 
      {
        hasher.putBoolean(b);
      }
    return this;
  }
  public @Override Hasher putChar(char c) {
    for (Hasher hasher : hashers) 
      {
        hasher.putChar(c);
      }
    return this;
  }
  public @Override Hasher putUnencodedChars(CharSequence chars) {
    for (Hasher hasher : hashers) 
      {
        hasher.putUnencodedChars(chars);
      }
    return this;
  }
  public @Override Hasher putString(CharSequence chars, Charset charset) {
    for (Hasher hasher : hashers) 
      {
        hasher.putString(chars, charset);
      }
    return this;
  }
  public @Override <T>Hasher putObject(T instance, Funnel<? super T> funnel) {
    for (Hasher hasher : hashers) 
      {
        hasher.putObject(instance, funnel);
      }
    return this;
  }
  public @Override HashCode hash() {
    return makeHash(hashers);
  }
};",METHOD: com.google.common.hash.AbstractCompositeHashFunction.fromHashers(Hasher[]),com.google.common.hash.AbstractCompositeHashFunction.fromHashers(Hasher[]),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: b.position(b.limit());,THEN_STATEMENT: b.hasArray(),com.google.common.hash.AbstractHasher.putBytes(ByteBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: bigger.position(buf.position());,METHOD: com.google.common.io.ReaderInputStream.grow(CharBuffer),com.google.common.io.ReaderInputStream.grow(CharBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: bigger.limit(buf.limit());,METHOD: com.google.common.io.ReaderInputStream.grow(CharBuffer),com.google.common.io.ReaderInputStream.grow(CharBuffer),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: charBuffer.limit((limit + numChars));,ELSE_STATEMENT: (numChars == (- 1)),com.google.common.io.ReaderInputStream.readMoreChars(),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_UPDATE,METHOD_INVOCATION: charBuffer.compact().flip();,THEN_STATEMENT: (charBuffer.position() > 0),com.google.common.io.ReaderInputStream.readMoreChars(),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.clear(byteBuffer);,THEN_STATEMENT: draining,"com.google.common.io.ReaderInputStream.read(byte[],int,int)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: byteBuffer.clear();,THEN_STATEMENT: draining,"com.google.common.io.ReaderInputStream.read(byte[],int,int)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(byteBuffer);,METHOD: com.google.common.io.ReaderInputStream.startDraining(boolean),com.google.common.io.ReaderInputStream.startDraining(boolean),LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: byteBuffer.flip();,METHOD: com.google.common.io.ReaderInputStream.startDraining(boolean),com.google.common.io.ReaderInputStream.startDraining(boolean),MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(charBuffer);,"METHOD: com.google.common.io.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder,int)","com.google.common.io.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder,int)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: charBuffer.flip();,"METHOD: com.google.common.io.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder,int)","com.google.common.io.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder,int)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,WHILE_STATEMENT: (from.read(buf) != (- 1)),"METHOD: com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)","com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.flip(buf);,WHILE_STATEMENT: (from.read(buf) != (- 1)),"com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,METHOD_INVOCATION: Java8Compatibility.clear(buf);,WHILE_STATEMENT: (from.read(buf) != (- 1)),"com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: buf.flip();,WHILE_STATEMENT: (from.read(buf) != (- 1)),"com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,METHOD_INVOCATION: buf.clear();,WHILE_STATEMENT: (from.read(buf) != (- 1)),"com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_DELETE,WHILE_STATEMENT: (from.read(buf) != (- 1)),"METHOD: com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)","com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_ORDERING_CHANGE,WHILE_STATEMENT: buf.hasRemaining(),WHILE_STATEMENT: (from.read(buf) != (- 1)),"com.google.common.io.ByteStreams.copy(ReadableByteChannel,WritableByteChannel)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (min <= max),"METHOD: com.google.common.primitives.Floats.constrainToRange(float,float,float)","com.google.common.primitives.Floats.constrainToRange(float,float,float)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,"RETURN_STATEMENT: Math.min(Math.max(value, min), max);","METHOD: com.google.common.primitives.Floats.constrainToRange(float,float,float)","com.google.common.primitives.Floats.constrainToRange(float,float,float)",MEDIUM
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_INSERT,IF_STATEMENT: (min <= max),"METHOD: com.google.common.primitives.Doubles.constrainToRange(double,double,double)","com.google.common.primitives.Doubles.constrainToRange(double,double,double)",LOW
7,081c486173032e6096c912e3c297c1d74eddcf93,STATEMENT_PARENT_CHANGE,"RETURN_STATEMENT: Math.min(Math.max(value, min), max);","METHOD: com.google.common.primitives.Doubles.constrainToRange(double,double,double)","com.google.common.primitives.Doubles.constrainToRange(double,double,double)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSetTest.testToImmutableSet_java7(),CLASS: com.google.common.collect.ImmutableSetTest,com.google.common.collect.ImmutableSetTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testToImmutableSortedSet_customComparator_java7(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSetTest.testToImmutableSortedSet_java7(),CLASS: com.google.common.collect.ImmutableSortedSetTest,com.google.common.collect.ImmutableSortedSetTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,"METHOD_INVOCATION: assertTrue(Range.closed(3, 5).isConnected(Range.closed(5, 6)));",METHOD: com.google.common.collect.RangeTest.testIsConnected(),com.google.common.collect.RangeTest.testIsConnected(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,"METHOD_INVOCATION: assertTrue(Range.closed(5, 6).isConnected(Range.closed(3, 5)));",METHOD: com.google.common.collect.RangeTest.testIsConnected(),com.google.common.collect.RangeTest.testIsConnected(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.RangeTest.testGap_invalidRangesWithInfinity(),CLASS: com.google.common.collect.RangeTest,com.google.common.collect.RangeTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.testing.EqualsTesterTest.testEqualityBasedOnToString(),CLASS: com.google.common.testing.EqualsTesterTest,com.google.common.testing.EqualsTesterTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_CLASS,CLASS: com.google.common.testing.EqualsTesterTest.EqualsBasedOnToString,CLASS: com.google.common.testing.EqualsTesterTest,com.google.common.testing.EqualsTesterTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.TreeRangeSetTest.testSubRangeSetReplaceAdd(),CLASS: com.google.common.collect.TreeRangeSetTest,com.google.common.collect.TreeRangeSetTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.TreeRangeSetTest.testSubRangeSetAdd(),CLASS: com.google.common.collect.TreeRangeSetTest,com.google.common.collect.TreeRangeSetTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableRangeMapTest.testToImmutableRangeMap(),CLASS: com.google.common.collect.ImmutableRangeMapTest,com.google.common.collect.ImmutableRangeMapTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testFailStart_singleServiceCallsHealthy(),com.google.common.util.concurrent.ServiceManagerTest.testFailStart_singleServiceCallsHealthy(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testEmptyServiceManager(),com.google.common.util.concurrent.ServiceManagerTest.testEmptyServiceManager(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testFailStop(),com.google.common.util.concurrent.ServiceManagerTest.testFailStop(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testFailStart(),com.google.common.util.concurrent.ServiceManagerTest.testFailStart(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"METHOD_INVOCATION: manager.addListener(new Listener() {
  public @Override void failure(Service service) {
    manager.stopAsync();
  }
});",METHOD: com.google.common.util.concurrent.ServiceManagerTest.testFailStart_stopOthers(),com.google.common.util.concurrent.ServiceManagerTest.testFailStart_stopOthers(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testSingleFailedServiceCallsStopped(),com.google.common.util.concurrent.ServiceManagerTest.testSingleFailedServiceCallsStopped(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testFailRun(),com.google.common.util.concurrent.ServiceManagerTest.testFailRun(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"METHOD_INVOCATION: manager.addListener(new ServiceManager.Listener() {
  public @Override void failure(Service service) {
    failEnter.countDown();
    Uninterruptibles.awaitUninterruptibly(failLeave);
  }
});",METHOD: com.google.common.util.concurrent.ServiceManagerTest.testListenerDeadlock(),com.google.common.util.concurrent.ServiceManagerTest.testListenerDeadlock(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: manager.addListener(listener);,METHOD: com.google.common.util.concurrent.ServiceManagerTest.testServiceStartStop(),com.google.common.util.concurrent.ServiceManagerTest.testServiceStartStop(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,"METHOD_INVOCATION: Arrays.fill(zeros, (byte) 0x00);",METHOD: com.google.common.hash.Crc32cHashFunctionTest.testZeros(),com.google.common.hash.Crc32cHashFunctionTest.testZeros(),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"METHOD_INVOCATION: assertEquals(expectedCrc, actualCrc);","METHOD: com.google.common.hash.Crc32cHashFunctionTest.assertCrc(int,byte[])","com.google.common.hash.Crc32cHashFunctionTest.assertCrc(int,byte[])",LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.hash.Crc32cHashFunctionTest.testZeros100(),CLASS: com.google.common.hash.Crc32cHashFunctionTest,com.google.common.hash.Crc32cHashFunctionTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.hash.Crc32cHashFunctionTest.testDescending100(),CLASS: com.google.common.hash.Crc32cHashFunctionTest,com.google.common.hash.Crc32cHashFunctionTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.hash.Crc32cHashFunctionTest.testEmpty(),CLASS: com.google.common.hash.Crc32cHashFunctionTest,com.google.common.hash.Crc32cHashFunctionTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.hash.Crc32cHashFunctionTest.testFull100(),CLASS: com.google.common.hash.Crc32cHashFunctionTest,com.google.common.hash.Crc32cHashFunctionTest,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: delegate().remove(object);,METHOD: com.google.common.collect.ForwardingMap.remove(Object),com.google.common.collect.ForwardingMap.remove(Object),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,PARAMETER_RENAMING,PARAMETER: object,PARAMETERS: ,com.google.common.collect.ForwardingMap.remove(Object),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSet.Builder.combine(Builder<E>),CLASS: com.google.common.collect.ImmutableSet.Builder,com.google.common.collect.ImmutableSet.Builder,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new LinkedBlockingQueue<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newLinkedBlockingQueue(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new ConcurrentLinkedQueue<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newConcurrentLinkedQueue(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new PriorityBlockingQueue<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newPriorityBlockingQueue(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new PriorityQueue<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newPriorityQueue(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new ArrayDeque<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newArrayDeque(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: new LinkedBlockingDeque<E>(Collections2.cast(elements));,THEN_STATEMENT: (elements instanceof Collection),com.google.common.collect.Queues.newLinkedBlockingDeque(Iterable<? extends E>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: super.add(rangeToAdd);,METHOD: com.google.common.collect.TreeRangeSet.SubRangeSet.add(Range<C>),com.google.common.collect.TreeRangeSet.SubRangeSet.add(Range<C>),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,METHOD_INVOCATION: collection.addAll(Collections2.cast(iterable));,THEN_STATEMENT: (iterable instanceof Collection),com.google.common.collect.FluentIterable.copyInto(C),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableList.Builder.combine(Builder<E>),CLASS: com.google.common.collect.ImmutableList.Builder,com.google.common.collect.ImmutableList.Builder,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,"METHOD_INVOCATION: addAll(elements, elements.length);",METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkElementsNotNull(elements);,METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: getReadyToExpandTo((size + elements.length));,METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,"METHOD_INVOCATION: System.arraycopy(elements, 0, contents, size, elements.length);",METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,ASSIGNMENT: size += elements.length;,METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.add(E...),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,"METHOD: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder.addAll(Object[],int)",CLASS: com.google.common.collect.ImmutableCollection.ArrayBasedBuilder,com.google.common.collect.ImmutableCollection.ArrayBasedBuilder,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.collect.ImmutableSortedSet.Builder.combine(ImmutableSet.Builder<E>),CLASS: com.google.common.collect.ImmutableSortedSet.Builder,com.google.common.collect.ImmutableSortedSet.Builder,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.X_REQUEST_ID : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.net.HttpHeaders.ORIGIN_ISOLATION : String,CLASS: com.google.common.net.HttpHeaders,com.google.common.net.HttpHeaders,LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,ASSIGNMENT: crc ^= 0xFFFFFFFF;,METHOD: com.google.common.hash.Crc32cHashFunction.Crc32cHasher.update(byte),com.google.common.hash.Crc32cHashFunction.Crc32cHasher.update(byte),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,ASSIGNMENT: crc = (~ ((crc >>> 8) ^ CRC_TABLE[((crc ^ b) & 0xFF)]));,METHOD: com.google.common.hash.Crc32cHashFunction.Crc32cHasher.update(byte),com.google.common.hash.Crc32cHashFunction.Crc32cHasher.update(byte),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: HashCode.fromInt(crc);,METHOD: com.google.common.hash.Crc32cHashFunction.Crc32cHasher.hash(),com.google.common.hash.Crc32cHashFunction.Crc32cHasher.hash(),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,DOC_UPDATE,"JAVADOC: /**
   * Returns a string containing each byte of {@link #asBytes}, in order, as a two-digit unsigned
   * hexadecimal number in lower case.
   *
   * <p>Note that if the output is considered to be a single hexadecimal number, this hash code's
   * bytes are the <i>big-endian</i> representation of that number. This may be surprising since
   * everything else in the hashing API uniformly treats multibyte values as little-endian. But this
   * format conveniently matches that of utilities such as the UNIX {@code md5sum} command.
   *
   * <p>To create a {@code HashCode} from its string representation, see {@link #fromString}.
   */",METHOD: com.google.common.hash.HashCode.toString(),com.google.common.hash.HashCode.toString(),NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"VARIABLE_DECLARATION_STATEMENT: final Appendable seperatingAppendable = separatingAppendable(delegate, separator, afterEveryChars);","METHOD: com.google.common.io.BaseEncoding.separatingWriter(Writer,String,int)","com.google.common.io.BaseEncoding.separatingWriter(Writer,String,int)",LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"RETURN_STATEMENT: new Writer() {
  public @Override void write(int c) throws IOException {
    seperatingAppendable.append((char) c);
  }
  public @Override void write(char[] chars, int off, int len) throws IOException {
    throw new UnsupportedOperationException();
  }
  public @Override void flush() throws IOException {
    delegate.flush();
  }
  public @Override void close() throws IOException {
    delegate.close();
  }
};","METHOD: com.google.common.io.BaseEncoding.separatingWriter(Writer,String,int)","com.google.common.io.BaseEncoding.separatingWriter(Writer,String,int)",LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,IF_STATEMENT: (n < 66),METHOD: com.google.common.math.LongMath.isPrime(long),com.google.common.math.LongMath.isPrime(long),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,COMMENT_INSERT,LINE_COMMENT: // Encode all primes less than 66 into mask without 0 and 1.,THEN_STATEMENT: (n < 66),com.google.common.math.LongMath.isPrime(long),NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: long mask = ((((((((((((((((((1L << (2 - 2)) | (1L << (3 - 2))) | (1L << (5 - 2))) | (1L << (7 - 2))) | (1L << (11 - 2))) | (1L << (13 - 2))) | (1L << (17 - 2))) | (1L << (19 - 2))) | (1L << (23 - 2))) | (1L << (29 - 2))) | (1L << (31 - 2))) | (1L << (37 - 2))) | (1L << (41 - 2))) | (1L << (43 - 2))) | (1L << (47 - 2))) | (1L << (53 - 2))) | (1L << (59 - 2))) | (1L << (61 - 2)));,THEN_STATEMENT: (n < 66),com.google.common.math.LongMath.isPrime(long),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,COMMENT_INSERT,LINE_COMMENT: // Look up n within the mask.,THEN_STATEMENT: (n < 66),com.google.common.math.LongMath.isPrime(long),NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,RETURN_STATEMENT: (((mask >> ((int) n - 2)) & 1) != 0);,THEN_STATEMENT: (n < 66),com.google.common.math.LongMath.isPrime(long),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,IF_STATEMENT: (n < (17 * 17)),METHOD: com.google.common.math.LongMath.isPrime(long),com.google.common.math.LongMath.isPrime(long),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,RETURN_STATEMENT: true;,THEN_STATEMENT: (n <= baseSet[0]),com.google.common.math.LongMath.isPrime(long),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_ORDERING_CHANGE,IF_STATEMENT: ((((((n == 2) || (n == 3)) || (n == 5)) || (n == 7)) || (n == 11)) || (n == 13)),METHOD: com.google.common.math.LongMath.isPrime(long),com.google.common.math.LongMath.isPrime(long),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_PARENT_CHANGE,RETURN_STATEMENT: true;,THEN_STATEMENT: (n < (17 * 17)),com.google.common.math.LongMath.isPrime(long),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,CONDITION_EXPRESSION_CHANGE,IF_STATEMENT: ((((((n == 2) || (n == 3)) || (n == 5)) || (n == 7)) || (n == 11)) || (n == 13)),METHOD: com.google.common.math.LongMath.isPrime(long),com.google.common.math.LongMath.isPrime(long),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,DOC_UPDATE,"JAVADOC: /**
 * <b>Do not use this class directly. For access to public-suffix information,
 * use {@link com.google.common.net.InternetDomainName}.</b>
 *
 * A generated static class containing public members which provide domain
 * name patterns used in determining whether a given domain name is an
 * effective top-level domain (public suffix).
 *
 * <p>Because this class is used in GWT, the data members are stored in
 * a space-efficient manner. {@see TrieParser}.
 *
 * @since 16.0
 */",CLASS: com.google.thirdparty.publicsuffix.PublicSuffixPatterns,com.google.thirdparty.publicsuffix.PublicSuffixPatterns,NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedHashMultiset<?>)","com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedHashMultiset<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,UsingToStringOrdering)","com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,UsingToStringOrdering)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,HashBasedTable<?, ?, ?>)","com.google.common.collect.HashBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,HashBasedTable<?, ?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableSetMultimap)","com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableSetMultimap)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.TreeBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.TreeBasedTable_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.TreeBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeBasedTable<?, ?, ?>)","com.google.common.collect.TreeBasedTable_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeBasedTable<?, ?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.NaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.NaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.NaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,NaturalOrdering)","com.google.common.collect.NaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,NaturalOrdering)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,SparseImmutableTable<Object, Object, Object>)","com.google.common.collect.SparseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,SparseImmutableTable<Object, Object, Object>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultimap<?, ?>)","com.google.common.collect.HashMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.HashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultiset<?>)","com.google.common.collect.HashMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,HashMultiset<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.HashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.HashMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumMap<?, ?>)","com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumMap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumSet<?>)","com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableEnumSet<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ArrayListMultimap<?, ?>)","com.google.common.collect.ArrayListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ArrayListMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.TreeMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.TreeMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.TreeMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeMultimap<?, ?>)","com.google.common.collect.TreeMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,TreeMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,CONDITION_EXPRESSION_CHANGE,"FOREACH_STATEMENT: Entry<?, ? extends Collection<?>> entry:instance.asMap().entrySet()","METHOD: com.google.common.collect.Multimap_CustomFieldSerializerBase.serialize(SerializationStreamWriter,Multimap<?, ?>)","com.google.common.collect.Multimap_CustomFieldSerializerBase.serialize(SerializationStreamWriter,Multimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSortedMap<?, ?>)","com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSortedMap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableListMultimap)","com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,EmptyImmutableListMultimap)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableListMultimap<?, ?>)","com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableListMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,DenseImmutableTable<Object, Object, Object>)","com.google.common.collect.DenseImmutableTable_CustomFieldSerializer.serialize(SerializationStreamWriter,DenseImmutableTable<Object, Object, Object>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,VARIABLE_DECLARATION_STATEMENT: List<Object> elements = Lists.newArrayList();,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,"METHOD_INVOCATION: Collection_CustomFieldSerializerBase.deserialize(reader, elements);",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,COMMENT_INSERT,"BLOCK_COMMENT: /*
     * For this custom field serializer to be invoked, the set must have been
     * RegularImmutableMultiset before it's serialized. Since
     * RegularImmutableMultiset always have one or more elements,
     * ImmutableMultiset.copyOf always return a RegularImmutableMultiset back.
     */",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_INSERT,RETURN_STATEMENT: (RegularImmutableMultiset<Object>) ImmutableMultiset.copyOf(elements);,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,"RETURN_STATEMENT: ImmutableMultiset.copyOf(Multiset_CustomFieldSerializerBase.populate(reader, LinkedHashMultiset.create()));",METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,RETURN_TYPE_CHANGE,PARAMETERIZED_TYPE: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader): ImmutableMultiset<Object>,METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.instantiate(SerializationStreamReader),CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: ImmutableMultiset<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.deserialize(SerializationStreamReader,RegularImmutableMultiset<?>)",CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: ImmutableMultiset<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableMultiset<?>)",CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)","com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableMultiset<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,"METHOD_INVOCATION: Multiset_CustomFieldSerializerBase.serialize(writer, instance);","METHOD: com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableMultiset<?>)","com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableMultiset<?>)",LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSetMultimap<?, ?>)","com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSetMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,COMMENT_INSERT,"BLOCK_COMMENT: /*
     * For this custom field serializer to be invoked, the set must have been
     * RegularImmutableSet before it's serialized.  Since RegularImmutableSet
     * always have two or more elements, ImmutableSet.copyOf always return
     * a RegularImmutableSet back.
     */",METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),NONE
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_UPDATE,RETURN_STATEMENT: ImmutableSet.copyOf(elements);,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),LOW
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,RETURN_TYPE_CHANGE,PARAMETERIZED_TYPE: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader): ImmutableSet<Object>,METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.instantiate(SerializationStreamReader),CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: ImmutableSet<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.deserialize(SerializationStreamReader,RegularImmutableSet<?>)",CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,PARAMETER_TYPE_CHANGE,PARAMETERIZED_TYPE: instance: ImmutableSet<?>,PARAMETER: instance,"com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableSet<?>)",CRUCIAL
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,ImmutableSet<?>)","com.google.common.collect.RegularImmutableSet_CustomFieldSerializer.serialize(SerializationStreamWriter,RegularImmutableSet<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.Range_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.Range_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.Range_CustomFieldSerializer.serialize(SerializationStreamWriter,Range<?>)","com.google.common.collect.Range_CustomFieldSerializer.serialize(SerializationStreamWriter,Range<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,ReverseNaturalOrdering)","com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,ReverseNaturalOrdering)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)","com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,CONDITION_EXPRESSION_CHANGE,"FOREACH_STATEMENT: Entry<?, ?> entry:multimap.entries()","METHOD: com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)","com.google.common.collect.LinkedListMultimap_CustomFieldSerializer.serialize(SerializationStreamWriter,LinkedListMultimap<?, ?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,AllEqualOrdering)","com.google.common.collect.AllEqualOrdering_CustomFieldSerializer.serialize(SerializationStreamWriter,AllEqualOrdering)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.primitives.UnsignedLong_CustomFieldSerializer.serialize(SerializationStreamWriter,UnsignedLong)","com.google.common.primitives.UnsignedLong_CustomFieldSerializer.serialize(SerializationStreamWriter,UnsignedLong)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.primitives.UnsignedLong_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.primitives.UnsignedLong_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.serialize(SerializationStreamWriter,PairwiseEquivalence<?>)","com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.serialize(SerializationStreamWriter,PairwiseEquivalence<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.PairwiseEquivalence_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.Present_CustomFieldSerializer.serialize(SerializationStreamWriter,Present<?>)","com.google.common.base.Present_CustomFieldSerializer.serialize(SerializationStreamWriter,Present<?>)",MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.Present_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.Present_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,METHOD: com.google.common.base.Absent_CustomFieldSerializer.instantiate(SerializationStreamReader),com.google.common.base.Absent_CustomFieldSerializer.instantiate(SerializationStreamReader),MEDIUM
9,1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e,STATEMENT_DELETE,METHOD_INVOCATION: checkGwtRpcEnabled();,"METHOD: com.google.common.base.Absent_CustomFieldSerializer.serialize(SerializationStreamWriter,Absent<?>)","com.google.common.base.Absent_CustomFieldSerializer.serialize(SerializationStreamWriter,Absent<?>)",MEDIUM
10,597b86c45e53c60b20ddba85c0f8c5fc8e278d19,STATEMENT_INSERT,METHOD_INVOCATION: java8CompatibilityCheck();,METHOD: com.google.common.base.MoreObjects.ToStringHelper.ToStringHelper(String),com.google.common.base.MoreObjects.ToStringHelper.ToStringHelper(String),LOW
10,597b86c45e53c60b20ddba85c0f8c5fc8e278d19,ADDITIONAL_FUNCTIONALITY,METHOD: com.google.common.base.MoreObjects.ToStringHelper.java8CompatibilityCheck(),CLASS: com.google.common.base.MoreObjects.ToStringHelper,com.google.common.base.MoreObjects.ToStringHelper,LOW
10,597b86c45e53c60b20ddba85c0f8c5fc8e278d19,ADDITIONAL_OBJECT_STATE,FIELD: com.google.common.base.MoreObjects.ToStringHelper.performedJava8CompatibilityCheck : boolean,CLASS: com.google.common.base.MoreObjects.ToStringHelper,com.google.common.base.MoreObjects.ToStringHelper,LOW